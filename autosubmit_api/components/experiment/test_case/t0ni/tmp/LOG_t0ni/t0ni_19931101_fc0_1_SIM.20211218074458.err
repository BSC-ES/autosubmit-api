[INFO] JOBID=19278896

job_name_ptrn='/gpfs/scratch/bsc32/bsc32627/t0ni/LOG_t0ni/t0ni_19931101_fc0_1_SIM'
+ job_name_ptrn=/gpfs/scratch/bsc32/bsc32627/t0ni/LOG_t0ni/t0ni_19931101_fc0_1_SIM
echo $(date +%s) > ${job_name_ptrn}_STAT
date +%s
++ date +%s
+ echo 1639809886

###################
# Autosubmit job
###################

#!/usr/bin/env bash

set -xuve
+ set -xuve

cd /gpfs/scratch/bsc32/bsc32627/t0ni
+ cd /gpfs/scratch/bsc32/bsc32627/t0ni

# librunscript defines some helper functions
source ./librunscript.sh
+ source ./librunscript.sh
# librunscript.sh is a library of shell script functions that can be used in
# EC-Earth run scripts.
#
# Usage: source ./librunscript.sh

# Function info writes information to standard out.
#
# Usage: info MESSAGE ...
#
function info()
{
    echo "*II* $@"
}

# Function error writes information to standard out and exits the script with
# error code 1.
#
# Usage: error MESSAGE ...
#
function error()
{
    echo "*EE* $@"
    exit 1
}

# Function has_config checks it's arguments for matches in the $config variable
# and returns true (0) or false (1) accordingly. Optionally, the first argument
# can be either "all" (all arguments must match) or "any" (at least one
# argument must match). If the first argument is neither "all" nor "any", the
# function behaves like "all" was given as the first argument.
#
# Usage: has_config [all|any] ARGS ...
#
# Syntax rules:
#
# The $config variable takes a list of names (typically software components),
# separated by white spaces:
#
# config="foo bar baz"  # Specifies three components: 'foo', 'bar', and 'baz'
#
# It is possible to add comma-separated lists of options to components. The
# list is separated from the component by a colon:
#
# config="foo bar:qux,fred baz:plugh"  # Adds the options 'qux' and 'fred' to
#                                      # component 'bar' as well as option
#                                      # 'plugh' to  component 'baz'
#
# When using the has_config function to check the $config variable, it is
# important to list every component-option pair separately. To check for both
# the 'qux' and 'fred' options of component 'bar' in the above example, use:
#
# has_config bar:qux bar:fred && echo "Got it!"
#
function has_config()
{
    # If called without arguments, return false
    (( $# )) || return 1

    # If $config unset or empty, return false
    [[ -z "${config:-}" ]] && return 1

    local __c
    local __m

    # If first argument is "any" then only one of the arguments needs to match
    # to return true. Return false otherwise
    if [ "$1" == "any" ]
    then
        shift
        for __c in "$@"
        do
            for __m in $config
            do
                [[ "$__m" =~ "${__c%:*}" ]] && [[ "$__m" =~ "${__c#*:}" ]] && return 0
            done
        done
        return 1
    fi

    # If first argument is "all", or neither "any" nor "all", all arguments
    # must match to return true. Return false otherwise.
    [[ "$1" == "all" ]] && shift

    local __f
    for __c in "$@"
    do
        __f=0
        for __m in $config
        do
            [[ "$__m" =~ "${__c%:*}" ]] && [[ "$__m" =~ "${__c#*:}" ]] && __f=1
        done
        (( __f )) || return 1
    done
    return 0
}

# Function leap days calculates the number of leap days (29th of Februrary) in
# a time intervall between two dates.
#
# Usage leap_days START_DATE END_DATE
function leap_days()
{
    local ld=0
    local frstYYYY=$(date -ud "$1" +%Y)
    local lastYYYY=$(date -ud "$2" +%Y)

    set +e

    # Check first year for leap day between start and end date
    $(date -ud "${frstYYYY}-02-29" > /dev/null 2>&1) \
    && (( $(date -ud "$1" +%s) < $(date -ud "${frstYYYY}-03-01" +%s) )) \
    && (( $(date -ud "$2" +%s) > $(date -ud "${frstYYYY}-02-28" +%s) )) \
    && (( ld++ ))

    # Check intermediate years for leap day
    for (( y=(( ${frstYYYY}+1 )); y<=(( ${lastYYYY}-1 )); y++ ))
    do
        $(date -ud "$y-02-29" > /dev/null 2>&1) && (( ld++ ))
    done

    # Check last year (if different from first year) for leap day between start
    # and end date
    (( $lastYYYY > $frstYYYY )) \
    && $(date -ud "${lastYYYY}-02-29" > /dev/null 2>&1) \
    && (( $(date -ud "$1" +%s) < $(date -ud "${lastYYYY}-03-01" +%s) )) \
    && (( $(date -ud "$2" +%s) > $(date -ud "${lastYYYY}-02-28" +%s) )) \
    && (( ld++ ))

    set -e

    echo "$ld"
}

# Helper function for absolute_date_noleap().
#
# Recursively 'fixes' a relative date into an absolute date referenced to
# the "noleap" calendar instead of Julian/Gregorian.
#
# Usage: __noleap_fixer base_date modifier
#

function __noleap_fixer ()
{
    local base_date="$1"
    local modifier="$2"
    # Evaluate the base and the modified date.
    local t0=$(date -u -d "${base_date}" +'%Y%m%d %H')
    local t1=$(date -u -d "${base_date} ${modifier}" +'%Y%m%d %H')
    local nleap
    local op
    # Compute the number of leap days between the base date and the modified
    # date.
    if [[ $(date -u -d "${t0}" +%Y%j) -lt $(date -u -d "${t1}" +%Y%j) ]]; then
        nleap=$(leap_days "${t0}" "${t1}")
    else
        nleap=$(leap_days "${t1}" "${t0}")
    fi
    if [[ ${nleap} -eq 0 ]]; then
        # Return the modified date if there are no leap days to account for.
        echo "${t1}"
    else
        # Obtain the modifier symbol (either + or -), this is used to determine
        # the direction to apply corrections in.
        if echo "${modifier}" | grep '+' 2>&1 > /dev/null; then
            op='+'
        else
            op='-'
        fi
        if [[ $(date -ud "${t1}" +%m%d) == 0229 ]]; then
            # If the modified day is the leap day we shift it by one day in the
            # appropriate direction and subtract 1 from the number of leap days
            # we need to account for.
            t1=$(date -ud "${t1} ${op} 1 day" +'%Y%m%d %H')
            nleap=$(( nleap - 1 ))
        fi
        if [[ ${nleap}  -eq 0 ]]; then
            # After correction there maybe no leap days left to account for, if
            # so we just return the corrected modified date.
            echo "${t1}"
        else
            # Otherwise we recurse, to apply our modification safely accounting
            # for leap days.
            __noleap_fixer "${t1}" "${op} ${nleap} days"
        fi
    fi
}

# Convert a relative date to an absolute date assuming the "noleap" calendar.
#
# A relative date is a base date with some modifier, such as
# "2012-01-01 + 2 months".
#
# Usage: absolute_date_noleap date_specifier.
function absolute_date_noleap ()
{
    local input_date="$1"
    # Split the input into a date part and a modifier part.
    local regex='([a-z|A-Z|0-9|-|+|,|:|\s]*)\s*([+|-]\s*[0-9]+\s*(second|minute|hour|day)s{0,1}).*'
    local base_date=$(echo "$1" | sed -r "s/${regex}/\1^\2/" | cut -d "^" -f 1)
    local modifier=$(echo "$1" | sed -r "s/${regex}/\1^\2/" | cut -d "^" -f 2)
    if [ -z "${modifier}" ] || [ "${modifier}" = "${input_date}" ] || \
            ! echo "${modifier}" | egrep -i -e 'second|minute|hour|day' 2>&1 >/dev/null; then
        # Either there was no modifier or it performs calendar independent
        # modifications, and thus we can safely use the normal `date` tool.
        date -uRd "${input_date}"
    else
        # Special care is needed to make sure the modifier is applied within
        # the noleap calendar.
        date -uRd "$(__noleap_fixer "${base_date}" "${modifier}")"
    fi
}

# Functions to compute computationa performance according to CPMIP metrics
#
# cpmip_sypd: Computes Simulated Years Per Day (SYPD)
#             Needs two arguments:
#             $1 - length of leg in seconds (use $leg_length_sec)
#             $2 - run time of leg in seconds (use $(( t2 - t1 )))
function cpmip_sypd ()
{
    bc <<< "scale=2 ; $1 / ( $2 * 365 )"
}

# cpmip_chpsy: Computes Core Hours Per Simulated Years (CHPSY)
#              Needs three arguments:
#              $1 - length of leg in seconds (use $leg_length_sec)
#              $2 - run time of leg in seconds (use $(( t2 - t1 )))
#              $3 - overall number of cores
function cpmip_chpsy ()
{
    bc <<< "scale=0 ; 365 * 24 * $2 * $3 / $1"
}

# =============================================================================
# *** BEGIN User configuration
# =============================================================================

# -----------------------------------------------------------------------------
# *** General configuration
# -----------------------------------------------------------------------------
# Component configuration (for syntax of the $config variable, see librunscript.sh)
#
# Currently maintained:
#     config="ifs amip oasis"                            # "GCM forced-SST" : IFS + AMIP
#     config="ifs amip oasis lpjg:fdbck"                 # "Veg"            : forced-GCM + LPJ-Guess
#     config="ifs amip oasis tm5:chem,o3fb,ch4fb,aerfb"  # "AerChem"        : forced-GCM + TM5
#
#     config="ifs nemo lim3 rnfmapper xios:detached oasis"                                 # "GCM"     : IFS+NEMO
#     config="ifs nemo lim3 rnfmapper xios:detached oasis lpjg:fdbck"                      # "Veg"     : GCM+LPJ-Guess
#     config="ifs nemo lim3 rnfmapper xios:detached oasis pisces lpjg:fdbck tm5:co2,co2fb" # "C-cycle" : GCM+LPJG+TM5
#     config="ifs nemo lim3 rnfmapper xios:detached oasis tm5:chem,o3fb,ch4fb,aerfb"       # "AerChem" : GCM+TM5
#
#     config="ifs nemo pisces lim3 rnfmapper xios:detached oasis"     # "GCM"     : IFS+NEMO+PISCES
#

#config="ifs nemo lim3 rnfmapper xios:detached oasis lpjg:fdbck tm5:co2"

# get config from autosubmit variables

#ifs
ifs="ifs"
+ ifs=ifs
TEMPLATE_NAME=ecearth3
+ TEMPLATE_NAME=ecearth3
[[ "$TEMPLATE_NAME" = ifs3* ]] && amip="amip" || amip=""
+ [[ ecearth3 = ifs3* ]]
+ amip=
[ "FALSE" = TRUE ] && atmnudg="atmnudg" || atmnudg=""
+ '[' FALSE = TRUE ']'
+ atmnudg=
[ "FALSE" = TRUE ] && sppt="sppt" || sppt=""
+ '[' FALSE = TRUE ']'
+ sppt=

#nemo
nemo=""; pisces=""; lim3=""; rnfmapper=""; xios=""
+ nemo=
+ pisces=
+ lim3=
+ rnfmapper=
+ xios=
[[ "$TEMPLATE_NAME" = nemo3* ]] && error "ece-esm.sh runscript does not support nemo only!"
+ [[ ecearth3 = nemo3* ]]
if [[ "$TEMPLATE_NAME" = ecearth3* ]];
then
  [[ "a2s5" = *[!\ ]* ]] && start_nemo_from_restart=":start_from_restart" || start_nemo_from_restart=""
  [[ "" = *[!\ ]* ]] && start_pisces_from_restart=":start_from_restart" || start_pisces_from_restart=""
  [ "FALSE" = TRUE ] && ocenudg=":ocenudg" || ocenudg=""
  [ "FALSE" = TRUE ] && surfresto=":surfresto" || surfresto=""
  [ "TRUE" = TRUE ] && elpin=":elpin" || elpin=""
  nemo="nemo"${start_nemo_from_restart}${ocenudg}${surfresto}${elpin}
  [ "FALSE" = TRUE ] && pisces="pisces"${start_pisces_from_restart} || pisces=""
  lim3="lim3"; xios="xios:detached"; rnfmapper="rnfmapper"
fi
+ [[ ecearth3 = ecearth3* ]]
+ [[ a2s5 = *[!\ ]* ]]
+ start_nemo_from_restart=:start_from_restart
+ [[ '' = *[!\ ]* ]]
+ start_pisces_from_restart=
+ '[' FALSE = TRUE ']'
+ ocenudg=
+ '[' FALSE = TRUE ']'
+ surfresto=
+ '[' TRUE = TRUE ']'
+ elpin=:elpin
+ nemo=nemo:start_from_restart:elpin
+ '[' FALSE = TRUE ']'
+ pisces=
+ lim3=lim3
+ xios=xios:detached
+ rnfmapper=rnfmapper

#others
CMIP5_RCP=0
+ CMIP5_RCP=0
[[ "FALSE" = TRUE ]] && lpjg=lpjg:fdbck || lpjg=""
+ [[ FALSE = TRUE ]]
+ lpjg=
[[ "FALSE" = TRUE ]] && tm5=tm5:chem,o3fb,ch4fb,aerfb || tm5=""
+ [[ FALSE = TRUE ]]
+ tm5=
[ "TRUE" = TRUE ] && elpin=":elpin" || elpin=""
+ '[' TRUE = TRUE ']'
+ elpin=:elpin
[ "ifs" == "" ]  && ifs_veg_source="era20c" || ifs_veg_source="ifs"
+ '[' ifs == '' ']'
+ ifs_veg_source=ifs
if [[ "end_leg" = FALSE ]] || [[ "end_leg" = "" ]] ; then save_ic="" ; else save_ic="save_ic:end_leg" ; fi
+ [[ end_leg = FALSE ]]
+ [[ end_leg = '' ]]
+ save_ic=save_ic:end_leg

config="${ifs} ${amip} ${atmnudg} ${sppt} ${nemo} ${pisces} ${lim3} ${rnfmapper} ${xios} oasis ${lpjg} ${tm5} ${save_ic}"
+ config='ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg'

# minimum sanity
has_config amip nemo && error "Cannot have both nemo and amip in config!!"
+ has_config amip nemo
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ ((  __f  ))
+ return 1
! has_config ifs && error "The ESM script requires ifs in config"
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0

# Experiment name (exactly 4 letters!)
export exp_name=t0ni
+ export exp_name=t0ni
+ exp_name=t0ni

# Simulation start and end date. Use any (reasonable) syntax you want.
run_start_date="19931101"
+ run_start_date=19931101
# define run_start_date_as with proper format e.g. 19900101
export run_start_date_as=$(date -u -d "${run_start_date}" +%Y%m%d)
date -u -d "${run_start_date}" +%Y%m%d
++ date -u -d 19931101 +%Y%m%d
+ export run_start_date_as=19931101
+ run_start_date_as=19931101
run_end_date="19931101 + 1 month"
+ run_end_date='19931101 + 1 month'

# Simulation member. Use any (reasonable) syntax you want.
export member="fc0"
+ export member=fc0
+ member=fc0

# Set $force_run_from_scratch to 'true' if you want to force this run to start
# from scratch, possibly ignoring any restart files present in the run
# directory. Leave set to 'false' otherwise.
# NOTE: If set to 'true' the run directory $run_dir is cleaned!
CHUNK=1
+ CHUNK=1
force_run_from_scratch=TRUE
+ force_run_from_scratch=TRUE
force_run_from_scratch=${force_run_from_scratch:-false}
+ force_run_from_scratch=TRUE
force_run_from_scratch=$(echo ${force_run_from_scratch} | tr '[:upper:]' '[:lower:]')
echo ${force_run_from_scratch} | tr '[:upper:]' '[:lower:]'
++ echo TRUE
++ tr '[:upper:]' '[:lower:]'
+ force_run_from_scratch=true
# we only apply this for the first chunk
if ${force_run_from_scratch} && [[ "${CHUNK}" != "1" ]] ; then
  force_run_from_scratch=false
fi
+ true
+ [[ 1 != \1 ]]

# Resolution (TM5 resolution is set at compilation)
ifs_grid=T511L91
+ ifs_grid=T511L91
nem_grid=ORCA025L75
+ nem_grid=ORCA025L75

# Restart frequency. Use any (reasonable) number and time unit you want.
# For runs without restart, leave this variable empty
rst_freq="1 month"
+ rst_freq='1 month'

# Number of restart legs to be run in one go
run_num_legs=1
+ run_num_legs=1

# Coupling frequencies
has_config ifs tm5  && cpl_freq_atm_ctm_hrs=6
+ has_config ifs tm5
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
has_config ifs lpjg && cpl_freq_atm_lpjg_hrs=24
+ has_config ifs lpjg
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1

# Don't change the coupling frequency because UPDCLIE (where SST and SIC
# are updated) is called every 24 hours (hardcoded in ifs-36r4/src/ifs/utility/updtim.F90)
has_config amip && cpl_freq_amip_sec=86400
+ has_config amip
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ ((  __f  ))
+ return 1

# Directories
start_dir=${PWD}
+ start_dir=/gpfs/scratch/bsc32/bsc32627/t0ni
ctrl_file_dir=${start_dir}/ctrl
+ ctrl_file_dir=/gpfs/scratch/bsc32/bsc32627/t0ni/ctrl
output_control_files_dir=${start_dir}//auto-ecearth3/outclass/reduced
+ output_control_files_dir=/gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced

# Architecture
build_arch=ecconf
+ build_arch=ecconf
use_machinefile=TRUE
+ use_machinefile=TRUE

# This file is used to store information about restarts
ece_info_file="ece.info"
+ ece_info_file=ece.info

# -----------------------------------------------------------------------------
# *** Read platform dependent configuration
# -----------------------------------------------------------------------------
source ./ecconf.cfg
+ source ./ecconf.cfg
# Platform dependent configuration functions for MareNostrum
#(mnX.bsc.es)

function configure()
{
    # This function should configure all settings/modules needed to
    # later prepare the EC-Earth run directory and set variables used
    # in the run script

    # SCRATCH is not defined in MN3, define it here
    # and also make sure it is defined when compiling
    export SCRATCH=/gpfs/scratch/`id -gn`/${USER}

    # Configure paths for building/running EC-Earth
    ecearth_src_dir=${SCRATCH}/${exp_name}/auto-ecearth3/sources/sources
    run_dir=${SCRATCH}/${exp_name}/${run_start_date_as}/${member}/runtime
    ini_data_dir=${SCRATCH}/${exp_name}/${run_start_date_as}/${member}/inidata

    # File for standard output.
    # NOTE: This will be modified for restart jobs!
    stdout_file=${start_dir}/out/$(basename ${SLURM_JOB_NAME}).out

    # Resubmit this job for automatic restarts? [true/false]
    # Also, add options for the resubmit command here.
    resubmit_job=false
    resubmit_opt="-W 4:00"

    # Configure grib api paths
    export GRIB_DEFINITION_PATH=${SCRATCH}/${exp_name}/auto-ecearth3/sources/sources/util/grib_table_126:/apps/GRIB/1.14.0/INTEL//share/grib_api/definitions
    export GRIB_SAMPLES_PATH=/apps/GRIB/1.14.0/INTEL//share/grib_api/ifs_samples/grib1
    export GRIB_BIN_PATH=/apps/GRIB/1.14.0/INTEL//bin

    # Configure number of processors per node
    proc_per_node=48

    # Configure and load modules
    pre_load_modules_cmd="module purge"
    module_list="
               intel/2017.4 impi/2018.4 netcdf/4.2 hdf5/1.8.19 perl/5.26 mkl/2018.4 CDO/1.8.2 szip/2.1.1
            "

    if [ -n "${module_list}" ]
    then
        set +eu
        if [ -n "${pre_load_modules_cmd}" ]
        then
            ${pre_load_modules_cmd}
        fi
        for m in "${module_list}"
        do
            module add $m
        done
        set -eu
    fi

    # Add directories to the shared library search path
    if [ -n "/apps/GRIB/1.14.0/INTEL/lib" ]
    then
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}"/apps/GRIB/1.14.0/INTEL/lib"
    fi

    # Use machinefiles or not
    [[ `echo "$use_machinefile" | tr '[:upper:]' '[:lower:]'` == true ]] && use_machinefile=true || use_machinefile=false

    ulimit -s unlimited

    # Load specific IMPI environment configuration
    configure_impi
}

function configure_python()
{
    # specific for python+eccodes setup - used for OSM pre/post-processing
    # it would be simple to do the following in configure
    # module load eccodes/2.8.0 python/2.7.13
    module load eccodes/2.8.0 python/2.7.13
    unset GRIB_DEFINITION_PATH
    unset GRIB_SAMPLES_PATH
    unset GRIB_BIN_PATH
    export GRIB_BIN_PATH=/apps/ECCODES/2.8.0/INTEL/bin
}

function configure_impi()
{
    [ -z "${OMP_NUM_THREADS-}" ] && export OMP_NUM_THREADS=1
    export I_MPI_DEBUG=5
}

function get_hosts()
{
    # This function uses a scheduler command to get the hosts allocated for the current job
    hosts=(`scontrol show hostname | paste -s`)
}

function machinefile_config()
{
    # User configuration starts here
    # hard-coded c4mip configurations, must use the proper _numproc settings
    if has_config ifs nemo pisces rnfmapper xios lpjg ; then
      if ! has_config tm5 ; then
            ifs_ppn=48 ; [[ ${ifs_numproc}  != 336 ]] && info "wrong numproc setting for ifs in machinefile_config" || true
            nem_ppn=43 ; [[ ${nem_numproc}  != 380 ]] && info "wrong numproc setting for nemo in machinefile_config" || true
            xio_ppn=5  ; [[ ${xio_numproc}  !=   5 ]] && info "wrong numproc setting for xios in machinefile_config" || true
            lpjg_ppn=5 ; [[ ${lpjg_numproc} !=  40 ]] && info "wrong numproc setting for lpjg in machinefile_config" || true
        else
            ifs_ppn=48 ; [[ ${ifs_numproc}  != 256 ]] && info "wrong numproc setting for ifs in machinefile_config" || true
            nem_ppn=46 ; [[ ${nem_numproc}  != 192 ]] && info "wrong numproc setting for nemo in machinefile_config" || true
            xio_ppn=2  ; [[ ${xio_numproc}  !=   2 ]] && info "wrong numproc setting for xios in machinefile_config" || true
            lpjg_ppn=2 ; [[ ${lpjg_numproc} !=   8 ]] && info "wrong numproc setting for lpjg in machinefile_config" || true
            tm5_ppn=4  ; [[ ${tm5_numproc}  !=   4 ]] && info "wrong numproc setting for tm5 in machinefile_config" || true
        fi
      else
        # Add any new exclusive binary here
        ifs_exc=TRUE
        nem_exc=TRUE
        xio_exc=TRUE
        lpjg_exc=TRUE
        tm5_exc=TRUE

        # Modify the allocation to each binary using more than one process here
        ifs_ppn=48
        nem_ppn=48
        xio_ppn=48
        lpjg_ppn=48
        tm5_ppn=45
    fi
}

function machinefile_init()
{
    # Get max processes per node from the platform variable
    max_ppn=$proc_per_node

    components=( ifs nem xio rnf amip lpjg )
    if $(has_config tm5)
    then
      components=( "${components[@]}" "tm5" )
    fi
    
    for component in ${components[@]}
    do
      eval ${component}_exc=FALSE
      eval ${component}_ppn=1
    done
  
    # Call user configuration and get_host functions
    machinefile_config
    get_hosts
 
    # Declare array to store the processes as they are assigned
    declare -a -g processes_hosts
    for n in `seq 0 ${#hosts[@]}`
    do
      processes_hosts[$n]=0
    done

    > machinefile
    
    current_hostid=0
}

machinefile_find_available_node()
{
  while [ $((${processes_hosts[$current_hostid]} + ${!ppn})) -gt $max_ppn ]
  do
    let "current_hostid += 1"
  done
}

machinefile_add()
{
  total_proc=$2
  # Iterate through all the possible binaries
  for component in ${components[@]} 
  do
    binary="${component}_exe_file"
    exclusive="${component}_exc"
    # Check if the current binary matches the input executable
    if [ ./$(basename ${!binary}) = "$1" ]
    then
       ppn="${component}_ppn"
       # Exclusive mode: start allocation at the first empty node
       if [[ ${!exclusive} == "TRUE" ]]
       then
         while [ ${processes_hosts[$current_hostid]} -gt 0 ]
         do
           let "current_hostid += 1"
         done
       # Shared mode: start allocation in the first node with enough free cores
       # Notice that only the first node is checked
       # Then, if a previous binary had "exc=TRUE", allocation space is not ensure in subsequent nodes
       else
         current_hostid=0
         machinefile_find_available_node
       fi

       # Allocate ppn cores in each of the subsequent nodes till there are no more processes to assign
       count=0
       while [ ${total_proc} -gt 0 ]
       do
         if [ ${current_hostid} -ge ${#hosts[@]} ]
         then
           echo "Not enough computing nodes"
           exit 1
         fi
         current_hostname=${hosts[$current_hostid]}
         while [[ ${total_proc} -gt 0 && ${count} -lt ${!ppn} ]] 
         do 
           echo ${hosts[$current_hostid]} >> machinefile
           let "count += 1"
           let "processes_hosts[$current_hostid] += 1"
           let "total_proc -= 1" || true 
         done 
         if [ ${count} -eq ${!ppn} ]
         then
           let "current_hostid += 1"
           machinefile_find_available_node
           count=0
         fi
       done
    fi
  done
}

function launch()
{

    cmd="mpirun"

    if [ "$use_machinefile" = "true" ]
    then
      cmd="mpirun -machinefile machinefile"
      machinefile_init
    fi

    while (( "$#" ))
    do
        # Get number of MPI ranks and executable name
        nranks=$1
        executable=./$(basename $2)
        
        if [ "$use_machinefile" = "true" ]
        then
          machinefile_add $executable $nranks
        fi

        shift
        shift

        cmd+=" -np $nranks $executable"

        # Add any arguments to executable
        while (( "$#" )) && [ "$1" != "--" ]
        do
            cmd+=" $1"
            shift
        done
        shift || true

        # Add colon of more executables follow
        (( "$#" )) && cmd+=" :"
    done

    $cmd
}

function finalise()
{
    # This function should execute of any post run functionality, e.g.
    # platform dependent cleaning or a resubmit

    if ${resubmit_job} && [ $(date -d "${leg_end_date}" +%s) -lt $(date -d "${run_end_date}" +%s) ]
    then
        info "Resubmitting job for leg $((leg_number+1))"
        # Need to go to start_dir to find the run script
        cd ${start_dir}
        # Submit command
        # Note: This does not work if you explicitely specify a job name!
#        bsub -n ${SLURM_JOB_NUM_NODES} \
#             -w ${SLURM_JOB_ID} \
#             -oo ${run_dir}/$(basename ${stdout_file}).$(printf %03d $((leg_number+1)))  \
#             ${resubmit_opt} \
#             ${SLURM_JOB_NAME}
    fi
}

function run_node()
{
    # This function launches a command once on each node used in the job, currently only used in ece-lsm.sh runcript
    mpirun -n $SLURM_JOB_NUM_NODES -ppn 1 -hosts `scontrol show hostname | paste -d, -s` bash -c "$1"
}

configure
+ configure
id -gn
++ id -gn
+ export SCRATCH=/gpfs/scratch/bsc32/bsc32627
+ SCRATCH=/gpfs/scratch/bsc32/bsc32627
+ ecearth_src_dir=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources
+ run_dir=/gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/runtime
+ ini_data_dir=/gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata
basename ${SLURM_JOB_NAME}
++ basename t0ni_ASThread_16398098768507_2400_2
+ stdout_file=/gpfs/scratch/bsc32/bsc32627/t0ni/out/t0ni_ASThread_16398098768507_2400_2.out
+ resubmit_job=false
+ resubmit_opt='-W 4:00'
+ export GRIB_DEFINITION_PATH=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/util/grib_table_126:/apps/GRIB/1.14.0/INTEL//share/grib_api/definitions
+ GRIB_DEFINITION_PATH=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/util/grib_table_126:/apps/GRIB/1.14.0/INTEL//share/grib_api/definitions
+ export GRIB_SAMPLES_PATH=/apps/GRIB/1.14.0/INTEL//share/grib_api/ifs_samples/grib1
+ GRIB_SAMPLES_PATH=/apps/GRIB/1.14.0/INTEL//share/grib_api/ifs_samples/grib1
+ export GRIB_BIN_PATH=/apps/GRIB/1.14.0/INTEL//bin
+ GRIB_BIN_PATH=/apps/GRIB/1.14.0/INTEL//bin
+ proc_per_node=48
+ pre_load_modules_cmd='module purge'
+ module_list='
               intel/2017.4 impi/2018.4 netcdf/4.2 hdf5/1.8.19 perl/5.26 mkl/2018.4 CDO/1.8.2 szip/2.1.1
            '
+ '[' -n '
               intel/2017.4 impi/2018.4 netcdf/4.2 hdf5/1.8.19 perl/5.26 mkl/2018.4 CDO/1.8.2 szip/2.1.1
            ' ']'
+ set +eu
+ '[' -n 'module purge' ']'
+ module purge
$LMOD_CMD bash "$@"
++ /apps/modules/LMOD/7.5/lmod/lmod/libexec/lmod bash purge
remove mkl/2017.4 (LD_LIBRARY_PATH) 
remove impi/2017.4 (PATH, MANPATH, LD_LIBRARY_PATH) 
+ eval unset 'CC;' unset 'CXX;' unset 'C_INCLUDE_PATH;' unset 'F77;' unset 'F90;' unset 'F95;' unset 'FC;' unset 'INTEL_HOME;' unset 'INTEL_INC;' unset 'INTEL_VERSION;' unset 'I_MPI_CC;' unset 'I_MPI_CXX;' unset 'I_MPI_F77;' unset 'I_MPI_F90;' unset 'I_MPI_ROOT;' unset 'LD_LIBRARY_PATH;' unset 'LOADEDMODULES;' 'MANPATH="/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man";' export 'MANPATH;' unset 'MKLROOT;' unset 'MKL_HOME;' 'MODULEPATH="/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace";' export 'MODULEPATH;' unset 'MPI;' unset 'MPICH_CC;' unset 'MPICH_CXX;' unset 'MPICH_F77;' unset 'MPICH_F90;' unset 'MPICH_FC;' unset 'MPI_ROOT;' unset 'MPI_V;' unset 'MP_COMPILER;' unset 'OMPI_CC;' unset 'OMPI_CXX;' unset 'OMPI_F77;' unset 'OMPI_F90;' unset 'OMPI_FC;' 'PATH="/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin";' export 'PATH;' unset '_LMFILES_;' '_ModuleTable001_="X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVz";' export '_ModuleTable001_;' '_ModuleTable002_="L2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ==";' export '_ModuleTable002_;' '_ModuleTable_Sz_="2";' export '_ModuleTable_Sz_;' unset '_ModuleTable004_;'
unset CC; unset CXX; unset C_INCLUDE_PATH; unset F77; unset F90; unset F95; unset FC; unset INTEL_HOME; unset INTEL_INC; unset INTEL_VERSION; unset I_MPI_CC; unset I_MPI_CXX; unset I_MPI_F77; unset I_MPI_F90; unset I_MPI_ROOT; unset LD_LIBRARY_PATH; unset LOADEDMODULES; MANPATH="/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man"; export MANPATH; unset MKLROOT; unset MKL_HOME; MODULEPATH="/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace"; export MODULEPATH; unset MPI; unset MPICH_CC; unset MPICH_CXX; unset MPICH_F77; unset MPICH_F90; unset MPICH_FC; unset MPI_ROOT; unset MPI_V; unset MP_COMPILER; unset OMPI_CC; unset OMPI_CXX; unset OMPI_F77; unset OMPI_F90; unset OMPI_FC; PATH="/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin"; export PATH; unset _LMFILES_; _ModuleTable001_="X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVz"; export _ModuleTable001_; _ModuleTable002_="L2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ=="; export _ModuleTable002_; _ModuleTable_Sz_="2"; export _ModuleTable_Sz_; unset _ModuleTable004_;
++ unset CC
++ unset CXX
++ unset C_INCLUDE_PATH
++ unset F77
++ unset F90
++ unset F95
++ unset FC
++ unset INTEL_HOME
++ unset INTEL_INC
++ unset INTEL_VERSION
++ unset I_MPI_CC
++ unset I_MPI_CXX
++ unset I_MPI_F77
++ unset I_MPI_F90
++ unset I_MPI_ROOT
++ unset LD_LIBRARY_PATH
++ unset LOADEDMODULES
++ MANPATH=/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man
++ export MANPATH
++ unset MKLROOT
++ unset MKL_HOME
++ MODULEPATH=/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace
++ export MODULEPATH
++ unset MPI
++ unset MPICH_CC
++ unset MPICH_CXX
++ unset MPICH_F77
++ unset MPICH_F90
++ unset MPICH_FC
++ unset MPI_ROOT
++ unset MPI_V
++ unset MP_COMPILER
++ unset OMPI_CC
++ unset OMPI_CXX
++ unset OMPI_F77
++ unset OMPI_F90
++ unset OMPI_FC
++ PATH=/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin
++ export PATH
++ unset _LMFILES_
++ _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVz
++ export _ModuleTable001_
++ _ModuleTable002_=L2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ==
++ export _ModuleTable002_
++ _ModuleTable_Sz_=2
++ export _ModuleTable_Sz_
++ unset _ModuleTable004_
${LMOD_SETTARG_CMD:-:} -s sh
++ : -s sh
+ eval
+ for m in '"${module_list}"'
+ module add intel/2017.4 impi/2018.4 netcdf/4.2 hdf5/1.8.19 perl/5.26 mkl/2018.4 CDO/1.8.2 szip/2.1.1
$LMOD_CMD bash "$@"
++ /apps/modules/LMOD/7.5/lmod/lmod/libexec/lmod bash add intel/2017.4 impi/2018.4 netcdf/4.2 hdf5/1.8.19 perl/5.26 mkl/2018.4 CDO/1.8.2 szip/2.1.1
Set INTEL compilers as MPI wrappers backend 
load impi/2018.4 (PATH, MANPATH, LD_LIBRARY_PATH) 
load netcdf/4.2 (PATH, LD_LIBRARY_PATH, NETCDF, NETCDF_PREFIX, NETCDF_HOME,
NETCDF_INC, NETCDF_LIB, NETCDF_ROOT) 
load hdf5/1.8.19 (PATH, LD_LIBRARY_PATH, LIBRARY_PATH, C_INCLUDE_PATH,
CPLUS_INCLUDE_PATH) 
load perl/5.26 (PATH, LD_LIBRARY_PATH, MANPATH, PERL5LIB) 
load mkl/2018.4 (LD_LIBRARY_PATH) 
load CDO/1.8.2 (PATH) 
load szip/2.1.1 (C_INCLUDE_PATH, LD_LIBRARY_PATH) 
+ eval 'CC="icc";' export 'CC;' 'CFLAGS="-I/apps/SZIP/2.1.1/INTEL/include' '-I/apps/HDF5/1.8.19/INTEL/IMPI/include";' export 'CFLAGS;' 'CPLUS_INCLUDE_PATH="/apps/HDF5/1.8.19/INTEL/IMPI/include";' export 'CPLUS_INCLUDE_PATH;' 'CXX="icpc";' export 'CXX;' 'CXXFLAGS="-I/apps/SZIP/2.1.1/INTEL/include' '-I/apps/HDF5/1.8.19/INTEL/IMPI/include";' export 'CXXFLAGS;' 'C_INCLUDE_PATH="/apps/SZIP/2.1.1/INTEL/include:/apps/INTEL/2018.4.057/mkl/include:/apps/HDF5/1.8.19/INTEL/IMPI/include";' export 'C_INCLUDE_PATH;' 'F77="ifort";' export 'F77;' 'F90="ifort";' export 'F90;' 'F95="ifort";' export 'F95;' 'FC="ifort";' export 'FC;' 'HDF5_DIR="/apps/HDF5/1.8.19/INTEL/IMPI";' export 'HDF5_DIR;' 'INTEL_HOME="/apps/INTEL/2017.4";' export 'INTEL_HOME;' 'INTEL_INC="/apps/INTEL/2017.4/include";' export 'INTEL_INC;' 'INTEL_VERSION="2017.4";' export 'INTEL_VERSION;' 'I_MPI_CC="icc";' export 'I_MPI_CC;' 'I_MPI_CXX="icpc";' export 'I_MPI_CXX;' 'I_MPI_F77="ifort";' export 'I_MPI_F77;' 'I_MPI_F90="ifort";' export 'I_MPI_F90;' 'I_MPI_ROOT="/apps/INTEL/2018.4.057/impi/2018.4.274";' export 'I_MPI_ROOT;' 'LDFLAGS="-L/apps/SZIP/2.1.1/INTEL/lib' -lsz -L/apps/HDF5/1.8.19/INTEL/IMPI/lib -lhdf5 '-lhdf5_hl";' export 'LDFLAGS;' 'LD_LIBRARY_PATH="/apps/SZIP/2.1.1/INTEL/lib:/apps/INTEL/2018.4.057/mkl/lib/intel64:/apps/HDF5/1.8.19/INTEL/IMPI/lib:/apps/NETCDF/4.2/INTEL/IMPI/lib:/apps/INTEL/2018.4.057/impi/2018.4.274/lib64:/apps/INTEL/2017.4/lib/intel64";' export 'LD_LIBRARY_PATH;' 'LIBRARY_PATH="/apps/HDF5/1.8.19/INTEL/IMPI/lib";' export 'LIBRARY_PATH;' 'LOADEDMODULES="intel/2017.4:impi/2018.4:netcdf/4.2:hdf5/1.8.19:perl/5.26:mkl/2018.4:CDO/1.8.2:szip/2.1.1";' export 'LOADEDMODULES;' 'MANPATH="/apps/PERL/5.26/man:/apps/INTEL/2018.4.057/impi/2018.4.274/man:/apps/INTEL/2017.4/man/common:/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man";' export 'MANPATH;' 'MKLROOT="/apps/INTEL/2018.4.057/mkl";' export 'MKLROOT;' 'MKL_HOME="/apps/INTEL/2018.4.057/mkl";' export 'MKL_HOME;' 'MODULEPATH="/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace";' export 'MODULEPATH;' 'MPI="impi";' export 'MPI;' 'MPICH_CC="icc";' export 'MPICH_CC;' 'MPICH_CXX="icpc";' export 'MPICH_CXX;' 'MPICH_F77="ifort";' export 'MPICH_F77;' 'MPICH_F90="ifort";' export 'MPICH_F90;' 'MPICH_FC="ifort";' export 'MPICH_FC;' 'MPI_ROOT="/apps/INTEL/2018.4.057/impi/2018.4.274";' export 'MPI_ROOT;' 'MPI_V="2018.4.057";' export 'MPI_V;' 'MP_COMPILER="intel";' export 'MP_COMPILER;' 'NETCDF="/apps/NETCDF/4.2/INTEL/IMPI";' export 'NETCDF;' 'NETCDF_HOME="/apps/NETCDF/4.2/INTEL/IMPI";' export 'NETCDF_HOME;' 'NETCDF_INC="/apps/NETCDF/4.2/INTEL/IMPI/include";' export 'NETCDF_INC;' 'NETCDF_LIB="/apps/NETCDF/4.2/INTEL/IMPI/lib";' export 'NETCDF_LIB;' 'NETCDF_PREFIX="/apps/NETCDF/4.2/INTEL/IMPI";' export 'NETCDF_PREFIX;' 'NETCDF_ROOT="/apps/NETCDF/4.2/INTEL/IMPI";' export 'NETCDF_ROOT;' 'OMPI_CC="icc";' export 'OMPI_CC;' 'OMPI_CXX="icpc";' export 'OMPI_CXX;' 'OMPI_F77="ifort";' export 'OMPI_F77;' 'OMPI_F90="ifort";' export 'OMPI_F90;' 'OMPI_FC="ifort";' export 'OMPI_FC;' 'PATH="/apps/CDO/1.8.2/INTEL/IMPI/bin:/apps/PERL/5.26/bin:/apps/HDF5/1.8.19/INTEL/IMPI/bin:/apps/NETCDF/4.2/INTEL/IMPI/bin:/apps/INTEL/2018.4.057/impi/2018.4.274/bin64:/apps/INTEL/2017.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin";' export 'PATH;' 'PERL5LIB="/apps/PERL/5.26/lib/perl5/site_perl/5.26.0:/apps/PERL/5.26/lib/perl5/5.26.0:/apps/PERL/5.26/lib/perl5/site_perl/5.26.0/x86_64-linux";' export 'PERL5LIB;' '_LMFILES_="/apps/modules/modulefiles/compilers/intel/2017.4:/apps/modules/modulefiles/environment/impi/2018.4:/apps/modules/modulefiles/libraries/netcdf/4.2:/apps/modules/modulefiles/libraries/hdf5/1.8.19:/apps/modules/modulefiles/tools/perl/5.26:/apps/modules/modulefiles/libraries/mkl/2018.4:/apps/modules/modulefiles/applications/CDO/1.8.2:/apps/modules/modulefiles/libraries/szip/2.1.1";' export '_LMFILES_;' '_ModuleTable001_="X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtDRE89e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9hcHBsaWNhdGlvbnMvQ0RPLzEuOC4yIixbImZ1bGxOYW1lIl09IkNETy8xLjguMiIsWyJsb2FkT3JkZXIiXT03LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJDRE8vMS44LjIiLH0saGRmNT17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9oZGY1LzEuOC4xOSIsWyJmdWxsTmFtZSJdPSJoZGY1LzEuOC4xOSIsWyJsb2FkT3JkZXIiXT00LHByb3BUPXt9LFsic3RhdHVz";' export '_ModuleTable001_;' '_ModuleTable002_="Il09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJoZGY1LzEuOC4xOSIsfSxpbXBpPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvZW52aXJvbm1lbnQvaW1waS8yMDE4LjQiLFsiZnVsbE5hbWUiXT0iaW1waS8yMDE4LjQiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0iaW1waS8yMDE4LjQiLH0saW50ZWw9e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMvaW50ZWwvMjAxNy40IixbImZ1bGxOYW1lIl09ImludGVsLzIwMTcuNCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJpbnRlbC8yMDE3LjQiLH0sbWtsPXtbImZu";' export '_ModuleTable002_;' '_ModuleTable003_="Il09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzL21rbC8yMDE4LjQiLFsiZnVsbE5hbWUiXT0ibWtsLzIwMTguNCIsWyJsb2FkT3JkZXIiXT02LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJta2wvMjAxOC40Iix9LG5ldGNkZj17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9uZXRjZGYvNC4yIixbImZ1bGxOYW1lIl09Im5ldGNkZi80LjIiLFsibG9hZE9yZGVyIl09Myxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ibmV0Y2RmLzQuMiIsfSxwZXJsPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHMvcGVybC81LjI2IixbImZ1bGxOYW1lIl09";' export '_ModuleTable003_;' '_ModuleTable004_="InBlcmwvNS4yNiIsWyJsb2FkT3JkZXIiXT01LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJwZXJsLzUuMjYiLH0sc3ppcD17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9zemlwLzIuMS4xIixbImZ1bGxOYW1lIl09InN6aXAvMi4xLjEiLFsibG9hZE9yZGVyIl09OCxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ic3ppcC8yLjEuMSIsfSx9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9k";' export '_ModuleTable004_;' '_ModuleTable005_="dWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ==";' export '_ModuleTable005_;' '_ModuleTable_Sz_="5";' export '_ModuleTable_Sz_;'
CC="icc"; export CC; CFLAGS="-I/apps/SZIP/2.1.1/INTEL/include -I/apps/HDF5/1.8.19/INTEL/IMPI/include"; export CFLAGS; CPLUS_INCLUDE_PATH="/apps/HDF5/1.8.19/INTEL/IMPI/include"; export CPLUS_INCLUDE_PATH; CXX="icpc"; export CXX; CXXFLAGS="-I/apps/SZIP/2.1.1/INTEL/include -I/apps/HDF5/1.8.19/INTEL/IMPI/include"; export CXXFLAGS; C_INCLUDE_PATH="/apps/SZIP/2.1.1/INTEL/include:/apps/INTEL/2018.4.057/mkl/include:/apps/HDF5/1.8.19/INTEL/IMPI/include"; export C_INCLUDE_PATH; F77="ifort"; export F77; F90="ifort"; export F90; F95="ifort"; export F95; FC="ifort"; export FC; HDF5_DIR="/apps/HDF5/1.8.19/INTEL/IMPI"; export HDF5_DIR; INTEL_HOME="/apps/INTEL/2017.4"; export INTEL_HOME; INTEL_INC="/apps/INTEL/2017.4/include"; export INTEL_INC; INTEL_VERSION="2017.4"; export INTEL_VERSION; I_MPI_CC="icc"; export I_MPI_CC; I_MPI_CXX="icpc"; export I_MPI_CXX; I_MPI_F77="ifort"; export I_MPI_F77; I_MPI_F90="ifort"; export I_MPI_F90; I_MPI_ROOT="/apps/INTEL/2018.4.057/impi/2018.4.274"; export I_MPI_ROOT; LDFLAGS="-L/apps/SZIP/2.1.1/INTEL/lib -lsz -L/apps/HDF5/1.8.19/INTEL/IMPI/lib -lhdf5 -lhdf5_hl"; export LDFLAGS; LD_LIBRARY_PATH="/apps/SZIP/2.1.1/INTEL/lib:/apps/INTEL/2018.4.057/mkl/lib/intel64:/apps/HDF5/1.8.19/INTEL/IMPI/lib:/apps/NETCDF/4.2/INTEL/IMPI/lib:/apps/INTEL/2018.4.057/impi/2018.4.274/lib64:/apps/INTEL/2017.4/lib/intel64"; export LD_LIBRARY_PATH; LIBRARY_PATH="/apps/HDF5/1.8.19/INTEL/IMPI/lib"; export LIBRARY_PATH; LOADEDMODULES="intel/2017.4:impi/2018.4:netcdf/4.2:hdf5/1.8.19:perl/5.26:mkl/2018.4:CDO/1.8.2:szip/2.1.1"; export LOADEDMODULES; MANPATH="/apps/PERL/5.26/man:/apps/INTEL/2018.4.057/impi/2018.4.274/man:/apps/INTEL/2017.4/man/common:/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man"; export MANPATH; MKLROOT="/apps/INTEL/2018.4.057/mkl"; export MKLROOT; MKL_HOME="/apps/INTEL/2018.4.057/mkl"; export MKL_HOME; MODULEPATH="/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace"; export MODULEPATH; MPI="impi"; export MPI; MPICH_CC="icc"; export MPICH_CC; MPICH_CXX="icpc"; export MPICH_CXX; MPICH_F77="ifort"; export MPICH_F77; MPICH_F90="ifort"; export MPICH_F90; MPICH_FC="ifort"; export MPICH_FC; MPI_ROOT="/apps/INTEL/2018.4.057/impi/2018.4.274"; export MPI_ROOT; MPI_V="2018.4.057"; export MPI_V; MP_COMPILER="intel"; export MP_COMPILER; NETCDF="/apps/NETCDF/4.2/INTEL/IMPI"; export NETCDF; NETCDF_HOME="/apps/NETCDF/4.2/INTEL/IMPI"; export NETCDF_HOME; NETCDF_INC="/apps/NETCDF/4.2/INTEL/IMPI/include"; export NETCDF_INC; NETCDF_LIB="/apps/NETCDF/4.2/INTEL/IMPI/lib"; export NETCDF_LIB; NETCDF_PREFIX="/apps/NETCDF/4.2/INTEL/IMPI"; export NETCDF_PREFIX; NETCDF_ROOT="/apps/NETCDF/4.2/INTEL/IMPI"; export NETCDF_ROOT; OMPI_CC="icc"; export OMPI_CC; OMPI_CXX="icpc"; export OMPI_CXX; OMPI_F77="ifort"; export OMPI_F77; OMPI_F90="ifort"; export OMPI_F90; OMPI_FC="ifort"; export OMPI_FC; PATH="/apps/CDO/1.8.2/INTEL/IMPI/bin:/apps/PERL/5.26/bin:/apps/HDF5/1.8.19/INTEL/IMPI/bin:/apps/NETCDF/4.2/INTEL/IMPI/bin:/apps/INTEL/2018.4.057/impi/2018.4.274/bin64:/apps/INTEL/2017.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin"; export PATH; PERL5LIB="/apps/PERL/5.26/lib/perl5/site_perl/5.26.0:/apps/PERL/5.26/lib/perl5/5.26.0:/apps/PERL/5.26/lib/perl5/site_perl/5.26.0/x86_64-linux"; export PERL5LIB; _LMFILES_="/apps/modules/modulefiles/compilers/intel/2017.4:/apps/modules/modulefiles/environment/impi/2018.4:/apps/modules/modulefiles/libraries/netcdf/4.2:/apps/modules/modulefiles/libraries/hdf5/1.8.19:/apps/modules/modulefiles/tools/perl/5.26:/apps/modules/modulefiles/libraries/mkl/2018.4:/apps/modules/modulefiles/applications/CDO/1.8.2:/apps/modules/modulefiles/libraries/szip/2.1.1"; export _LMFILES_; _ModuleTable001_="X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtDRE89e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9hcHBsaWNhdGlvbnMvQ0RPLzEuOC4yIixbImZ1bGxOYW1lIl09IkNETy8xLjguMiIsWyJsb2FkT3JkZXIiXT03LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJDRE8vMS44LjIiLH0saGRmNT17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9oZGY1LzEuOC4xOSIsWyJmdWxsTmFtZSJdPSJoZGY1LzEuOC4xOSIsWyJsb2FkT3JkZXIiXT00LHByb3BUPXt9LFsic3RhdHVz"; export _ModuleTable001_; _ModuleTable002_="Il09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJoZGY1LzEuOC4xOSIsfSxpbXBpPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvZW52aXJvbm1lbnQvaW1waS8yMDE4LjQiLFsiZnVsbE5hbWUiXT0iaW1waS8yMDE4LjQiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0iaW1waS8yMDE4LjQiLH0saW50ZWw9e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMvaW50ZWwvMjAxNy40IixbImZ1bGxOYW1lIl09ImludGVsLzIwMTcuNCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJpbnRlbC8yMDE3LjQiLH0sbWtsPXtbImZu"; export _ModuleTable002_; _ModuleTable003_="Il09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzL21rbC8yMDE4LjQiLFsiZnVsbE5hbWUiXT0ibWtsLzIwMTguNCIsWyJsb2FkT3JkZXIiXT02LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJta2wvMjAxOC40Iix9LG5ldGNkZj17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9uZXRjZGYvNC4yIixbImZ1bGxOYW1lIl09Im5ldGNkZi80LjIiLFsibG9hZE9yZGVyIl09Myxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ibmV0Y2RmLzQuMiIsfSxwZXJsPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHMvcGVybC81LjI2IixbImZ1bGxOYW1lIl09"; export _ModuleTable003_; _ModuleTable004_="InBlcmwvNS4yNiIsWyJsb2FkT3JkZXIiXT01LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJwZXJsLzUuMjYiLH0sc3ppcD17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9zemlwLzIuMS4xIixbImZ1bGxOYW1lIl09InN6aXAvMi4xLjEiLFsibG9hZE9yZGVyIl09OCxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ic3ppcC8yLjEuMSIsfSx9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9k"; export _ModuleTable004_; _ModuleTable005_="dWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ=="; export _ModuleTable005_; _ModuleTable_Sz_="5"; export _ModuleTable_Sz_;
++ CC=icc
++ export CC
++ CFLAGS='-I/apps/SZIP/2.1.1/INTEL/include -I/apps/HDF5/1.8.19/INTEL/IMPI/include'
++ export CFLAGS
++ CPLUS_INCLUDE_PATH=/apps/HDF5/1.8.19/INTEL/IMPI/include
++ export CPLUS_INCLUDE_PATH
++ CXX=icpc
++ export CXX
++ CXXFLAGS='-I/apps/SZIP/2.1.1/INTEL/include -I/apps/HDF5/1.8.19/INTEL/IMPI/include'
++ export CXXFLAGS
++ C_INCLUDE_PATH=/apps/SZIP/2.1.1/INTEL/include:/apps/INTEL/2018.4.057/mkl/include:/apps/HDF5/1.8.19/INTEL/IMPI/include
++ export C_INCLUDE_PATH
++ F77=ifort
++ export F77
++ F90=ifort
++ export F90
++ F95=ifort
++ export F95
++ FC=ifort
++ export FC
++ HDF5_DIR=/apps/HDF5/1.8.19/INTEL/IMPI
++ export HDF5_DIR
++ INTEL_HOME=/apps/INTEL/2017.4
++ export INTEL_HOME
++ INTEL_INC=/apps/INTEL/2017.4/include
++ export INTEL_INC
++ INTEL_VERSION=2017.4
++ export INTEL_VERSION
++ I_MPI_CC=icc
++ export I_MPI_CC
++ I_MPI_CXX=icpc
++ export I_MPI_CXX
++ I_MPI_F77=ifort
++ export I_MPI_F77
++ I_MPI_F90=ifort
++ export I_MPI_F90
++ I_MPI_ROOT=/apps/INTEL/2018.4.057/impi/2018.4.274
++ export I_MPI_ROOT
++ LDFLAGS='-L/apps/SZIP/2.1.1/INTEL/lib -lsz -L/apps/HDF5/1.8.19/INTEL/IMPI/lib -lhdf5 -lhdf5_hl'
++ export LDFLAGS
++ LD_LIBRARY_PATH=/apps/SZIP/2.1.1/INTEL/lib:/apps/INTEL/2018.4.057/mkl/lib/intel64:/apps/HDF5/1.8.19/INTEL/IMPI/lib:/apps/NETCDF/4.2/INTEL/IMPI/lib:/apps/INTEL/2018.4.057/impi/2018.4.274/lib64:/apps/INTEL/2017.4/lib/intel64
++ export LD_LIBRARY_PATH
++ LIBRARY_PATH=/apps/HDF5/1.8.19/INTEL/IMPI/lib
++ export LIBRARY_PATH
++ LOADEDMODULES=intel/2017.4:impi/2018.4:netcdf/4.2:hdf5/1.8.19:perl/5.26:mkl/2018.4:CDO/1.8.2:szip/2.1.1
++ export LOADEDMODULES
++ MANPATH=/apps/PERL/5.26/man:/apps/INTEL/2018.4.057/impi/2018.4.274/man:/apps/INTEL/2017.4/man/common:/apps/modules/LMOD/7.5/lmod/lmod/share/man:/usr/local/man:/usr/share/man
++ export MANPATH
++ MKLROOT=/apps/INTEL/2018.4.057/mkl
++ export MKLROOT
++ MKL_HOME=/apps/INTEL/2018.4.057/mkl
++ export MKL_HOME
++ MODULEPATH=/apps/modules/modulefiles/applications:/apps/modules/modulefiles/compilers:/apps/modules/modulefiles/environment:/apps/modules/modulefiles/libraries:/apps/modules/modulefiles/tools:/apps/modules/modulefiles/prace
++ export MODULEPATH
++ MPI=impi
++ export MPI
++ MPICH_CC=icc
++ export MPICH_CC
++ MPICH_CXX=icpc
++ export MPICH_CXX
++ MPICH_F77=ifort
++ export MPICH_F77
++ MPICH_F90=ifort
++ export MPICH_F90
++ MPICH_FC=ifort
++ export MPICH_FC
++ MPI_ROOT=/apps/INTEL/2018.4.057/impi/2018.4.274
++ export MPI_ROOT
++ MPI_V=2018.4.057
++ export MPI_V
++ MP_COMPILER=intel
++ export MP_COMPILER
++ NETCDF=/apps/NETCDF/4.2/INTEL/IMPI
++ export NETCDF
++ NETCDF_HOME=/apps/NETCDF/4.2/INTEL/IMPI
++ export NETCDF_HOME
++ NETCDF_INC=/apps/NETCDF/4.2/INTEL/IMPI/include
++ export NETCDF_INC
++ NETCDF_LIB=/apps/NETCDF/4.2/INTEL/IMPI/lib
++ export NETCDF_LIB
++ NETCDF_PREFIX=/apps/NETCDF/4.2/INTEL/IMPI
++ export NETCDF_PREFIX
++ NETCDF_ROOT=/apps/NETCDF/4.2/INTEL/IMPI
++ export NETCDF_ROOT
++ OMPI_CC=icc
++ export OMPI_CC
++ OMPI_CXX=icpc
++ export OMPI_CXX
++ OMPI_F77=ifort
++ export OMPI_F77
++ OMPI_F90=ifort
++ export OMPI_F90
++ OMPI_FC=ifort
++ export OMPI_FC
++ PATH=/apps/CDO/1.8.2/INTEL/IMPI/bin:/apps/PERL/5.26/bin:/apps/HDF5/1.8.19/INTEL/IMPI/bin:/apps/NETCDF/4.2/INTEL/IMPI/bin:/apps/INTEL/2018.4.057/impi/2018.4.274/bin64:/apps/INTEL/2017.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/games:/usr/lpp/mmfs/bin
++ export PATH
++ PERL5LIB=/apps/PERL/5.26/lib/perl5/site_perl/5.26.0:/apps/PERL/5.26/lib/perl5/5.26.0:/apps/PERL/5.26/lib/perl5/site_perl/5.26.0/x86_64-linux
++ export PERL5LIB
++ _LMFILES_=/apps/modules/modulefiles/compilers/intel/2017.4:/apps/modules/modulefiles/environment/impi/2018.4:/apps/modules/modulefiles/libraries/netcdf/4.2:/apps/modules/modulefiles/libraries/hdf5/1.8.19:/apps/modules/modulefiles/tools/perl/5.26:/apps/modules/modulefiles/libraries/mkl/2018.4:/apps/modules/modulefiles/applications/CDO/1.8.2:/apps/modules/modulefiles/libraries/szip/2.1.1
++ export _LMFILES_
++ _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPWZhbHNlLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtDRE89e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9hcHBsaWNhdGlvbnMvQ0RPLzEuOC4yIixbImZ1bGxOYW1lIl09IkNETy8xLjguMiIsWyJsb2FkT3JkZXIiXT03LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJDRE8vMS44LjIiLH0saGRmNT17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9oZGY1LzEuOC4xOSIsWyJmdWxsTmFtZSJdPSJoZGY1LzEuOC4xOSIsWyJsb2FkT3JkZXIiXT00LHByb3BUPXt9LFsic3RhdHVz
++ export _ModuleTable001_
++ _ModuleTable002_=Il09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJoZGY1LzEuOC4xOSIsfSxpbXBpPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvZW52aXJvbm1lbnQvaW1waS8yMDE4LjQiLFsiZnVsbE5hbWUiXT0iaW1waS8yMDE4LjQiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0iaW1waS8yMDE4LjQiLH0saW50ZWw9e1siZm4iXT0iL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMvaW50ZWwvMjAxNy40IixbImZ1bGxOYW1lIl09ImludGVsLzIwMTcuNCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJpbnRlbC8yMDE3LjQiLH0sbWtsPXtbImZu
++ export _ModuleTable002_
++ _ModuleTable003_=Il09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzL21rbC8yMDE4LjQiLFsiZnVsbE5hbWUiXT0ibWtsLzIwMTguNCIsWyJsb2FkT3JkZXIiXT02LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJta2wvMjAxOC40Iix9LG5ldGNkZj17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9uZXRjZGYvNC4yIixbImZ1bGxOYW1lIl09Im5ldGNkZi80LjIiLFsibG9hZE9yZGVyIl09Myxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ibmV0Y2RmLzQuMiIsfSxwZXJsPXtbImZuIl09Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHMvcGVybC81LjI2IixbImZ1bGxOYW1lIl09
++ export _ModuleTable003_
++ _ModuleTable004_=InBlcmwvNS4yNiIsWyJsb2FkT3JkZXIiXT01LHByb3BUPXt9LFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJwZXJsLzUuMjYiLH0sc3ppcD17WyJmbiJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2xpYnJhcmllcy9zemlwLzIuMS4xIixbImZ1bGxOYW1lIl09InN6aXAvMi4xLjEiLFsibG9hZE9yZGVyIl09OCxwcm9wVD17fSxbInN0YXR1cyJdPSJhY3RpdmUiLFsidXNlck5hbWUiXT0ic3ppcC8yLjEuMSIsfSx9LG1wYXRoQT17Ii9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvYXBwbGljYXRpb25zIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9jb21waWxlcnMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50IiwiL2FwcHMvbW9k
++ export _ModuleTable004_
++ _ModuleTable005_=dWxlcy9tb2R1bGVmaWxlcy9saWJyYXJpZXMiLCIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL3Rvb2xzIiwiL2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2FwcGxpY2F0aW9uczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2NvbXBpbGVyczovYXBwcy9tb2R1bGVzL21vZHVsZWZpbGVzL2Vudmlyb25tZW50Oi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvbGlicmFyaWVzOi9hcHBzL21vZHVsZXMvbW9kdWxlZmlsZXMvdG9vbHM6L2FwcHMvbW9kdWxlcy9tb2R1bGVmaWxlcy9wcmFjZSIsfQ==
++ export _ModuleTable005_
++ _ModuleTable_Sz_=5
++ export _ModuleTable_Sz_
${LMOD_SETTARG_CMD:-:} -s sh
++ : -s sh
+ eval
+ set -eu
+ '[' -n /apps/GRIB/1.14.0/INTEL/lib ']'
+ export LD_LIBRARY_PATH=/apps/SZIP/2.1.1/INTEL/lib:/apps/INTEL/2018.4.057/mkl/lib/intel64:/apps/HDF5/1.8.19/INTEL/IMPI/lib:/apps/NETCDF/4.2/INTEL/IMPI/lib:/apps/INTEL/2018.4.057/impi/2018.4.274/lib64:/apps/INTEL/2017.4/lib/intel64:/apps/GRIB/1.14.0/INTEL/lib
+ LD_LIBRARY_PATH=/apps/SZIP/2.1.1/INTEL/lib:/apps/INTEL/2018.4.057/mkl/lib/intel64:/apps/HDF5/1.8.19/INTEL/IMPI/lib:/apps/NETCDF/4.2/INTEL/IMPI/lib:/apps/INTEL/2018.4.057/impi/2018.4.274/lib64:/apps/INTEL/2017.4/lib/intel64:/apps/GRIB/1.14.0/INTEL/lib
echo "$use_machinefile" | tr '[:upper:]' '[:lower:]'
++ echo TRUE
++ tr '[:upper:]' '[:lower:]'
+ [[ true == true ]]
+ use_machinefile=true
+ ulimit -s unlimited
+ configure_impi
+ '[' -z 1 ']'
+ export I_MPI_DEBUG=5
+ I_MPI_DEBUG=5

# -----------------------------------------------------------------------------
# *** Time step settings
# -----------------------------------------------------------------------------
if has_config ifs
then
    case "${ifs_grid}" in

        T159L*) ifs_time_step_sec=3600 ;;
        T255L*) ifs_time_step_sec=2700 ;;
        T511L*) ifs_time_step_sec=900  ;;

        *)  error "Can't set time steps for unknown horizontal grid: ${ifs_grid}"
            ;;
    esac
fi
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
+ case "${ifs_grid}" in
+ ifs_time_step_sec=900

if has_config nemo
then
    case "${nem_grid}" in

        ORCA1L*)   nem_time_step_sec=2700; lim_time_step_sec=2700 ;;
        ORCA025L*) nem_time_step_sec=900 ; lim_time_step_sec=900  ;;

        *)  error "Can't set time steps for unknown horizontal grid: ${nem_grid}"
            ;;
    esac
fi
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ case "${nem_grid}" in
+ nem_time_step_sec=900
+ lim_time_step_sec=900

if has_config ifs nemo
then
    case "${ifs_grid}--${nem_grid}" in

        T159L*--ORCA1L*)
            ifs_time_step_sec=3600; nem_time_step_sec=2700; lim_time_step_sec=2700; cpl_freq_atm_oce_sec=10800
            ;;
        T255L*--ORCA1L*)
            ifs_time_step_sec=2700; nem_time_step_sec=2700; lim_time_step_sec=2700; cpl_freq_atm_oce_sec=2700
            ;;
        T511L*--ORCA025L*)
            ifs_time_step_sec=900 ; nem_time_step_sec=900 ; lim_time_step_sec=900 ; cpl_freq_atm_oce_sec=2700
            ;;

        *)  error "Can't set time steps for unknown combination of horizontal grids: ${ifs_grid}-${nem_grid}"
            ;;
    esac
fi
+ has_config ifs nemo
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ case "${ifs_grid}--${nem_grid}" in
+ ifs_time_step_sec=900
+ nem_time_step_sec=900
+ lim_time_step_sec=900
+ cpl_freq_atm_oce_sec=2700

# -----------------------------------------------------------------------------
# *** IFS configuration
# -----------------------------------------------------------------------------

ifs_version=36r4
+ ifs_version=36r4

ifs_di_freq=$(( 24 * 3600 / ifs_time_step_sec ))
+ ifs_di_freq=96
ifs_ddh_freq=$(( 120 * 3600 / ifs_time_step_sec ))
+ ifs_ddh_freq=480

export ifs_res_hor=$(echo ${ifs_grid} | sed 's:T\([0-9]\+\)L\([0-9]\+\):\1:')
echo ${ifs_grid} | sed 's:T\([0-9]\+\)L\([0-9]\+\):\1:'
++ sed 's:T\([0-9]\+\)L\([0-9]\+\):\1:'
++ echo T511L91
+ export ifs_res_hor=511
+ ifs_res_hor=511
ifs_res_ver=$(echo ${ifs_grid} | sed 's:T\([0-9]\+\)L\([0-9]\+\):\2:')
echo ${ifs_grid} | sed 's:T\([0-9]\+\)L\([0-9]\+\):\2:'
++ sed 's:T\([0-9]\+\)L\([0-9]\+\):\2:'
++ echo T511L91
+ ifs_res_ver=91

export ifs_numproc=912
+ export ifs_numproc=912
+ ifs_numproc=912

ifs_exe_file=${ecearth_src_dir}/ifs-${ifs_version}/bin/ifsmaster-${build_arch}
+ ifs_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf

ifs_lastout=false
+ ifs_lastout=false

ifs_cmip5=TRUE
+ ifs_cmip5=TRUE
ifs_cmip5_rcp=0
+ ifs_cmip5_rcp=0
export ifs_cmip_fixyear=0
+ export ifs_cmip_fixyear=0
+ ifs_cmip_fixyear=0
[ -z "${ifs_cmip_fixyear}" ] && ifs_cmip_fixyear=0
+ '[' -z 0 ']'
export ifs_cmip_fixyear_ch4=0
+ export ifs_cmip_fixyear_ch4=0
+ ifs_cmip_fixyear_ch4=0
[ -z "${ifs_cmip_fixyear_ch4}" ] && ifs_cmip_fixyear_ch4=0
+ '[' -z 0 ']'

# Repeat trap from ifs/suecrad.F90 for early catch
if ! has_config tm5:ch4fb && (( $ifs_cmip_fixyear != $ifs_cmip_fixyear_ch4 ))
then
    error 'CH4 in IFS is not provided by TM5, NCMIPFIXYR_CH4 should be set equal to NCMIPFIXYR'
fi
+ has_config tm5:ch4fb
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:ch4fb == any ']'
+ [[ tm5:ch4fb == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ ((  0 != 0  ))

ifs_cmip6=TRUE
+ ifs_cmip6=TRUE
ifs_mac2sp=TRUE
+ ifs_mac2sp=TRUE
ifs_cmip6piaer=TRUE
+ ifs_cmip6piaer=TRUE
ifs_cmip6_scenario=historical
+ ifs_cmip6_scenario=historical

# enable optional COVID-19 scenarios, requires ifs_cmip6_scenario=SSP2-4.5
ifs_covid19=FALSE
+ ifs_covid19=FALSE
# choose one scenario : Base TwoYearBlip ModerateGreen StrongGreen FossilFuel
ifs_covid19scen=Base
+ ifs_covid19scen=Base
# basic sanity checks when covid19 is activated (SSP scenario and no support for LPJ-GUESS, PISCES nor TM5)
if [ ${ifs_covid19} == TRUE ] ; then
    [ ${ifs_cmip6_scenario} != SSP2-4.5 ] && info "with ifs_covid19=TRUE IFS uses ifs_cmip6_scenario=SSP2-4.5 not ${ifs_cmip6_scenario}"
    has_config any lpjg pisces tm5 && error "ifs_covid19=TRUE is not supported with LPJ-GUESS, PISCES nor TM5"
fi
+ '[' FALSE == TRUE ']'

lcmip6_strataer_simp=FALSE
+ lcmip6_strataer_simp=FALSE
lcmip6_strataer_full=TRUE
+ lcmip6_strataer_full=TRUE
lcmip6_strataer_bckgd=FALSE
+ lcmip6_strataer_bckgd=FALSE

export ifs_A4xCO2=FALSE
+ export ifs_A4xCO2=FALSE
+ ifs_A4xCO2=FALSE
export ifs_1PCTCO2=FALSE
+ export ifs_1PCTCO2=FALSE
+ ifs_1PCTCO2=FALSE
export bgc_1PCTCO2=FALSE
+ export bgc_1PCTCO2=FALSE
+ bgc_1PCTCO2=FALSE

# Time-varying orbital forcing (Qiong Zhang, SU-2013-09)
# https://dev.ec-earth.org/projects/ecearth3/wiki/Orbital_forcing_in_EC-Earth_3
#
#   ifs_orb_switch=false, no orbital calculations applied
#   ifs_orb_switch=true, use orbital calculations according to ifs_orb_mode
#   ifs_orb_mode="fixed_year", or "variable_year", or "fixed_parameters"
#     fixed_year: calculate the orbital parameters at ifs_orb_iyear, e.g.,1850
#     variable_year: calculate orbital parameters annually start from ifs_orb_iyear
#     fixed_parameters: prescribe orbital parameters for given year
case "${ifs_grid}" in
    T159*) ifs_orb_switch=true ;;
    *)     ifs_orb_switch=false ;;
esac
+ case "${ifs_grid}" in
+ ifs_orb_switch=false
ifs_orb_mode="variable_year"
+ ifs_orb_mode=variable_year
ifs_orb_iyear=$(date -u -d "${run_start_date}" +%Y)
date -u -d "${run_start_date}" +%Y
++ date -u -d 19931101 +%Y
+ ifs_orb_iyear=1993

# Relaxation of soil moisture (Wilhelm May, LU; October 2017)
#  
# LRXSM: Parameter indicating the levels to be nudged 
#
#   LRXSM =  0: no nudging 
#   LRXSM = 12: 4xdaily data and 3 levels (excluding level 1)      
#   LRXSM = 13: 4xdaily data and 4 levels
#
# LRXSMTx: time scale of the relaxation for level X (in hours)
#  
#   LRXSMTx =   0: actual values relpaced by external ones 
#   LRXSMTx =  24: 1 day
#   LRXSMTx = 120: 5 days
#
# LRXSMS: indicates when the relaxation is done 
#
#   LRXSMS = 0: before the time step
#   LRXSMS = 1:  after the time step
#
has_config soilnudg && ifs_lrxsm=13 || ifs_lrxsm=0
+ has_config soilnudg
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' soilnudg == any ']'
+ [[ soilnudg == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ soilnudg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ soilnudg ]]
+ for __m in '$config'
+ [[ lim3 =~ soilnudg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ soilnudg ]]
+ for __m in '$config'
+ [[ xios:detached =~ soilnudg ]]
+ for __m in '$config'
+ [[ oasis =~ soilnudg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ soilnudg ]]
+ ((  __f  ))
+ return 1
+ ifs_lrxsm=0
ifs_lrxsmt1=96
+ ifs_lrxsmt1=96
ifs_lrxsmt2=72
+ ifs_lrxsmt2=72
ifs_lrxsmt3=48
+ ifs_lrxsmt3=48
ifs_lrxsmt4=24
+ ifs_lrxsmt4=24
ifs_lrxsms=1
+ ifs_lrxsms=1

# IFS tuning parameters
variant=
+ variant=
has_config tm5:chem && variant=-AerChem
+ has_config tm5:chem
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:chem == any ']'
+ [[ tm5:chem == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
ifs_tuning_parameter_file=${ctrl_file_dir}/ifs-tuning-parameters-${ifs_grid}${variant}.sh
+ ifs_tuning_parameter_file=/gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/ifs-tuning-parameters-T511L91.sh
if [ -f ${ifs_tuning_parameter_file} ]
then
    source ${ifs_tuning_parameter_file}
else
    error "Sorry, ${ifs_tuning_parameter_file} not found, exiting."
fi
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/ifs-tuning-parameters-T511L91.sh ']'
+ source /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/ifs-tuning-parameters-T511L91.sh
# *** IFS tuning (the commented values are EC-Earth 3.2beta and IFS cy36r4)
# *** for resolution T511L91 

##############################################
# It is a copy of T255L91 tunning parameters #
# !!!  THE T511L91 HAS NOT BEEN TUNED !!!    #
##############################################

# Default based on the v16 LPJG vegetation dataset discussed in #449-197 (jcn4)
# The default values are WITH 2nd indirect effect NCLOUDACT=2, NAERCLD=9
# jvg6 is the best alternative configuration found in #449 with NCLOUDACT=0
#                    jvg6     ECE32b     IFS cy36r4
RPRCON=1.34E-3      # 1.52e-4  1.2E-3     1.4E-3
++ RPRCON=1.34E-3
RVICE=0.137         # 0.126    0.13       0.15
++ RVICE=0.137
RLCRITSNOW=4.0E-5   # 4.2e-5   3.0E-5     5.0E-5
++ RLCRITSNOW=4.0E-5
RSNOWLIN2=0.035     # 0.035    0.035      0.025
++ RSNOWLIN2=0.035
ENTRORG=1.70E-4     # 1.58e-4  1.5E-4     1.8E-4
++ ENTRORG=1.70E-4
DETRPEN=0.75E-4     # 0.75e-4  0.75E-4    0.75E-4
++ DETRPEN=0.75E-4
ENTRDD=3.0E-4       # 3.5e-4   3.0E-4     2.0E-4
++ ENTRDD=3.0E-4
RMFDEPS=0.3         # 0.27     0.3        0.35
++ RMFDEPS=0.3
RCLDIFF=3.E-6       # 3.6e-6   3.E-6
++ RCLDIFF=3.E-6
RCLDIFFC=5.0        # 5.0
++ RCLDIFFC=5.0
RLCRIT_UPHYS=0.875e-5
++ RLCRIT_UPHYS=0.875e-5


# Select source of vegetation data:
#  ifs       climatology from IFS
#  era20c    vegetation from an off-line LPJ-Guess run forced with ERA20C
#            (currently available only for T255 and T159)
#  cmip6     vegetation from an EC-Earth3-Veg (interactive LPJ-Guess) run 
#            (currently available only for T255)
#  custom_exp vegetation from any EC-Earth3-Veg run exp
#            (must contain same variables as era20c & cmip6 and located in icmcl_exp folder)
#  none      don't create an ICMCL file with vegetation data (this is set
#            automatically if LPJG is used with feedback)
#
# set above in AS runtime

has_config lpjg:fdbck && ifs_veg_source="none"
+ has_config lpjg:fdbck
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lpjg:fdbck == any ']'
+ [[ lpjg:fdbck == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1

case ${ifs_veg_source} in
"ifs" )
    # Use Lambert-Beer to compute effective vegetation cover
    n_compute_eff_veg_fraction=2
    ;;
"era20c" )
    # LPJG vegetation is provided as effective cover
    # Don't use Lambert-Beer
    n_compute_eff_veg_fraction=0

    case "${ifs_grid}" in
        T159L*) veg_version=v29 ;;
        T255L*) veg_version=v16 ;;
        *)  error "Vegetation from off-line LPJ-Guess not available for ${ifs_grid}" ;;
    esac    
    ;;
"cmip6" )
    # LPJG vegetation is provided as effective cover
    # Don't use Lambert-Beer
    n_compute_eff_veg_fraction=0

    case "${ifs_grid}" in
        T255L*) veg_version=v32 ;;
        *)  error "Vegetation from CMIP6 EC-Earth3-Veg not available for ${ifs_grid}" ;;
    esac    
    ;;
"custom_"* )
    # LPJG vegetation is provided as effective cover
    # Don't use Lambert-Beer
    n_compute_eff_veg_fraction=0

    veg_version=${ifs_veg_source:7}
    if [ ! -d ${ini_data_dir}/ifs/${ifs_grid}/icmcl_${veg_version} ]
    then
        error "requested IFS_VEG_SOURCE = ${ifs_veg_source} but not found in ${ini_data_dir}/ifs/${ifs_grid}/icmcl_${veg_version}"
    fi
    ;;
"none" )
    # LPJG with feedback
    n_compute_eff_veg_fraction=0
    ! has_config lpjg:fdbck && error "IFS requires an offline source of vegetation"
    ;;
* )
    error "Vegetation from ${ifs_veg_source} not implemented"
    ;;
esac
+ case ${ifs_veg_source} in
+ n_compute_eff_veg_fraction=2

# use DMI land ice physics and varying snow albedo
case "${ifs_grid}" in
    T159*) ifs_landice=true ;;
    *)     ifs_landice=false ;;
esac
+ case "${ifs_grid}" in
+ ifs_landice=false

# -----------------------------------------------------------------------------
# *** NEMO/LIM configuration
# -----------------------------------------------------------------------------

# This is only needed if the experiment is started from an existing set of NEMO
# restart files
nem_restart_file_path=${ini_data_dir}
+ nem_restart_file_path=/gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata

nem_restart_offset=0
+ nem_restart_offset=0

nem_res_hor=$(echo ${nem_grid} | sed 's:ORCA\([0-9]\+\)L[0-9]\+:\1:')
echo ${nem_grid} | sed 's:ORCA\([0-9]\+\)L[0-9]\+:\1:'
++ echo ORCA025L75
++ sed 's:ORCA\([0-9]\+\)L[0-9]\+:\1:'
+ nem_res_hor=025

nem_config=${nem_grid}
+ nem_config=ORCA025L75
has_config lim3           && nem_config=${nem_config}_LIM3
+ has_config lim3
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lim3 == any ']'
+ [[ lim3 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lim3 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lim3 ]]
+ for __m in '$config'
+ [[ lim3 =~ lim3 ]]
+ [[ lim3 =~ lim3 ]]
+ __f=1
+ for __m in '$config'
+ [[ rnfmapper =~ lim3 ]]
+ for __m in '$config'
+ [[ xios:detached =~ lim3 ]]
+ for __m in '$config'
+ [[ oasis =~ lim3 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lim3 ]]
+ ((  __f  ))
+ return 0
+ nem_config=ORCA025L75_LIM3

if has_config pisces tm5:co2
then
    nem_config=${nem_config}_CarbonCycle
elif has_config pisces
then
    nem_config=${nem_config}_PISCES
fi
+ has_config pisces tm5:co2
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1

# TODO - nemo standalone configs are not accounted for in this script, but this would set the required nem_config
! has_config ifs && nem_config=${nem_config}_standalone
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0

nem_exe_file=${ecearth_src_dir}/nemo-3.6/CONFIG/${nem_config}/BLD/bin/nemo.exe
+ nem_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe

nem_numproc=1392
+ nem_numproc=1392

# Thermal conductivity of snow, see comment in ctrl/namelist.lim3.ref.sh
case "${ifs_grid}" in
    T159L* ) nem_rn_cdsn=0.25 ;;
    * )      nem_rn_cdsn=0.27 ;;
esac
+ case "${ifs_grid}" in
+ nem_rn_cdsn=0.27

# -----------------------------------------------------------------------------
# *** Runoff mapper configuration
# -----------------------------------------------------------------------------

rnf_exe_file=${ecearth_src_dir}/runoff-mapper/bin/runoff-mapper.exe
+ rnf_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
rnf_numproc=1
+ rnf_numproc=1

# -----------------------------------------------------------------------------
# *** LPJ-GUESS configuration
# -----------------------------------------------------------------------------

lpjg_time_step_sec=86400
+ lpjg_time_step_sec=86400
lpjg_numproc=
+ lpjg_numproc=

has_config lpjg       && lpjg_on=1
+ has_config lpjg
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lpjg == any ']'
+ [[ lpjg == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1
has_config lpjg:fdbck && lpjg_fdbck=1
+ has_config lpjg:fdbck
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lpjg:fdbck == any ']'
+ [[ lpjg:fdbck == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1
has_config tm5:co2    && lpjg_fdbck_tm5=1 || lpjg_fdbck_tm5=0
+ has_config tm5:co2
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:co2 == any ']'
+ [[ tm5:co2 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ lpjg_fdbck_tm5=0

lpjg_fixNdepafter=-1
+ lpjg_fixNdepafter=-1
lpjg_fixLUafter=-1
+ lpjg_fixLUafter=-1
[ -z "${lpjg_fixNdepafter}" ] && lpjg_fixNdepafter=-1
+ '[' -z -1 ']'
[ -z "${lpjg_fixLUafter}" ] && lpjg_fixLUafter=-1
+ '[' -z -1 ']'
export lpjg_fixNdepafter lpjg_fixLUafter
+ export lpjg_fixNdepafter lpjg_fixLUafter

info '!!!! CMIP FIX YEAR SETTINGS:'
+ info '!!!! CMIP FIX YEAR SETTINGS:'
+ echo '*II* !!!! CMIP FIX YEAR SETTINGS:'
info "ifs_cmip_fixyear:  $ifs_cmip_fixyear"
+ info 'ifs_cmip_fixyear:  0'
+ echo '*II* ifs_cmip_fixyear:  0'
info "lpjg_fixNDepAfter: $lpjg_fixNdepafter"
+ info 'lpjg_fixNDepAfter: -1'
+ echo '*II* lpjg_fixNDepAfter: -1'
info "lpjg_fixLUAfter:   $lpjg_fixLUafter"
+ info 'lpjg_fixLUAfter:   -1'
+ echo '*II* lpjg_fixLUAfter:   -1'
info '!!!!'  
+ info '!!!!'
+ echo '*II* !!!!'

lpjg_res=T${ifs_res_hor}
+ lpjg_res=T511
lpjg_exe_file=${ecearth_src_dir}/lpjg/build/guess_${lpjg_res}
+ lpjg_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/lpjg/build/guess_T511

# -----------------------------------------------------------------------------
# *** AMIP-reader configuration
# -----------------------------------------------------------------------------

amip_exe_file=${ecearth_src_dir}/amip-forcing/bin/amip-forcing.exe
+ amip_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/amip-forcing/bin/amip-forcing.exe
amip_numproc=1
+ amip_numproc=1

# -----------------------------------------------------------------------------
# *** TM5 configuration
# -----------------------------------------------------------------------------

if $(has_config tm5)
then
    # With TM5, NPRTRV is set to 1 in the namelist. To avoid some out-of-bound
    # arrays in IFS, we must limit the number of cores for IFS
    if (( ifs_numproc > (ifs_res_hor+1) ))
    then
        error "too much cores requested for IFS, max is $((ifs_res_hor+1))"
    fi

    # TM5 settings
    has_config tm5:co2 && tmversion="co2" || tmversion="cb05"
    has_config tm5:co2 && export tm5_co2=1 || export tm5_co2=0
    export tm5_exch_nlevs=34
    tm5_time_step_sec=3600
    export tm5_numproc_x=1
    export tm5_numproc_y=45
    tm5_numproc=$(( tm5_numproc_x * tm5_numproc_y ))
    export tm5_emiss_fixyear=0

    # limited number of levels for feedback (aerosols, currently set to lmax_conv in TM5)
    case ${tm5_exch_nlevs} in
        34) export tm5_exch_nlevs_cutoff=23 ;;
        10) export tm5_exch_nlevs_cutoff=10 ;;
         4) export tm5_exch_nlevs_cutoff=4  ;;
         *) error "not supported number of levels for TM5"
    esac

    # executable
    tm5_exe_file=${ecearth_src_dir}/tm5mp/build-${tmversion}-ml${tm5_exch_nlevs}/appl-tm5-${tmversion}.x

    # path to initial conditions, modify as needed
    tm5_restart_file_path=${ini_data_dir}/tm5/restart/${tmversion}-ml${tm5_exch_nlevs}

    # fields sent back to IFS
    has_config tm5:o3fb   && tm5_to_ifs=O3 || tm5_to_ifs=
    has_config tm5:ch4fb  && tm5_to_ifs=${tm5_to_ifs},CH4
    has_config tm5:aerfb && tm5_to_ifs=${tm5_to_ifs},"\
N2,SU2,BC2,OC2,N3,SU3,BC3,OC3,SS3,DU3,\
N4,SU4,BC4,OC4,SS4,DU4,N5,BC5,OC5,N6,DU6,N7,DU7,\
NO3,MSA,\
AOD_01,AOD_02,AOD_03,AOD_04,AOD_05,AOD_06,AOD_07,AOD_08,AOD_09,AOD_10,AOD_11,AOD_12,AOD_13,AOD_14,\
SSA_01,SSA_02,SSA_03,SSA_04,SSA_05,SSA_06,SSA_07,SSA_08,SSA_09,SSA_10,SSA_11,SSA_12,SSA_13,SSA_14,\
ASF_01,ASF_02,ASF_03,ASF_04,ASF_05,ASF_06,ASF_07,ASF_08,ASF_09,ASF_10,ASF_11,ASF_12,ASF_13,ASF_14"
    has_config tm5:co2fb && tm5_to_ifs=${tm5_to_ifs},CO2

    export tm5_to_ifs=$(echo ${tm5_to_ifs} | sed "s/^,//")

    # coupled to LPJ-Guess and/or PISCES?
    has_config tm5:co2 lpjg   && export cpl_tm_guess=T  || export cpl_tm_guess=F
    has_config tm5:co2 pisces && export cpl_tm_pisces=T || export cpl_tm_pisces=F
fi
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1

# -----------------------------------------------------------------------------
# *** OASIS configuration
# -----------------------------------------------------------------------------

# Restart files for the coupling fields (note 8 character limit in OASIS)
#   rstas.nc : atmosphere single-category fields
#   rstam.nc : atmosphere multi-category fields
#   rstos.nc : ocean single-category fields
#   rstom.nc : ocean multi-category fields
oas_rst_ifs_nemo="rstas.nc rstos.nc"
+ oas_rst_ifs_nemo='rstas.nc rstos.nc'

oas_rst_ifs_lpjg="vegin.nc lpjgv.nc"
+ oas_rst_ifs_lpjg='vegin.nc lpjgv.nc'

# Met fields from IFS to TM (always required)
oas_rst_ifs_tm5="r_hum.nc r_g2d.nc r_udr.nc r_div.nc r_vor.nc \
                 r_ddr.nc r_tmp.nc r_dmf.nc r_s2d.nc r_umf.nc"
+ oas_rst_ifs_tm5='r_hum.nc r_g2d.nc r_udr.nc r_div.nc r_vor.nc                  r_ddr.nc r_tmp.nc r_dmf.nc r_s2d.nc r_umf.nc'

has_config tm5:chem && \
    oas_rst_ifs_tm5=${oas_rst_ifs_tm5}' r_cc_.nc r_clw.nc r_cco.nc r_ciw.nc r_ccu.nc'
+ has_config tm5:chem
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:chem == any ']'
+ [[ tm5:chem == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1

has_config tm5:o3fb || has_config tm5:ch4fb && oas_rst_ifs_tm5=$oas_rst_ifs_tm5' o3ch4.nc'
+ has_config tm5:o3fb
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:o3fb == any ']'
+ [[ tm5:o3fb == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ has_config tm5:ch4fb
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:ch4fb == any ']'
+ [[ tm5:ch4fb == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
has_config tm5:aerfb && oas_rst_ifs_tm5=$oas_rst_ifs_tm5' C???????'
+ has_config tm5:aerfb
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:aerfb == any ']'
+ [[ tm5:aerfb == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1

# C-cycle configuration
has_config tm5:co2 lpjg   && oas_rst_ifs_tm5=$oas_rst_ifs_tm5' l_co2.nc rlpjg.nc'
+ has_config tm5:co2 lpjg
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:co2 == any ']'
+ [[ tm5:co2 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
has_config tm5:co2 pisces && oas_rst_ifs_tm5=$oas_rst_ifs_tm5' o_co2.nc pisce.nc'
+ has_config tm5:co2 pisces
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:co2 == any ']'
+ [[ tm5:co2 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1
has_config tm5:co2fb      && oas_rst_ifs_tm5=$oas_rst_ifs_tm5' co2mx.nc'
+ has_config tm5:co2fb
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' tm5:co2fb == any ']'
+ [[ tm5:co2fb == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1

# final list of files depends on the activated components - this is used in save_ic as well
#oas_rst_files="${oas_rst_ifs_nemo} ${oas_rst_ifs_tm5} vegin.nc lpjgv.nc"
oas_rst_files=""
+ oas_rst_files=
has_config ifs nemo && oas_rst_files+=" ${oas_rst_ifs_nemo}"
+ has_config ifs nemo
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ oas_rst_files+=' rstas.nc rstos.nc'
has_config ifs lpjg && oas_rst_files+=" ${oas_rst_ifs_lpjg}"
+ has_config ifs lpjg
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1
has_config ifs tm5 && oas_rst_files+=" ${oas_rst_ifs_tm5}"
+ has_config ifs tm5
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ ((  __f  ))
+ return 1

# Decide whether the OASIS weight files for interpolation should be linked from
# the setup directory (true) or not (false). In the latter case, the weights
# are re-computed at the start of the run.
oas_link_weights=true
+ oas_link_weights=true

# Flux correction for runoff (not calving) sent from Oasis to ocean.
# 1.07945 is computed to compensate for a P-E=-0.016 mm/day (valid for std res)
case "${ifs_grid}" in
    T159L* ) has_config nemo && oas_mb_fluxcorr=1.08652 ;;
    * ) has_config nemo && oas_mb_fluxcorr=1.07945 ;;
esac
+ case "${ifs_grid}" in
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ oas_mb_fluxcorr=1.07945

# -----------------------------------------------------------------------------
# *** XIOS configuration
# -----------------------------------------------------------------------------

xio_exe_file=${ecearth_src_dir}/xios-2.5/bin/xios_server.exe
+ xio_exe_file=/gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe

xio_numproc=95
+ xio_numproc=95

# -----------------------------------------------------------------------------
# *** Extra initial conditions saved during the run
# -----------------------------------------------------------------------------
if has_config save_ic
then
    source ./libsave_ic.sh
    declare -a save_ic_date save_ic_date1 save_ic_sec save_ic_day save_ic_ppt_file save_ic_nemo_ts
    oas_rst_files="${oas_rst_ifs_nemo} ${oas_rst_ifs_tm5} vegin.nc lpjgv.nc"
fi
+ has_config save_ic
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' save_ic == any ']'
+ [[ save_ic == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ save_ic ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ save_ic ]]
+ for __m in '$config'
+ [[ lim3 =~ save_ic ]]
+ for __m in '$config'
+ [[ rnfmapper =~ save_ic ]]
+ for __m in '$config'
+ [[ xios:detached =~ save_ic ]]
+ for __m in '$config'
+ [[ oasis =~ save_ic ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ save_ic ]]
+ [[ save_ic:end_leg =~ save_ic ]]
+ __f=1
+ ((  __f  ))
+ return 0
+ source ./libsave_ic.sh
#================================================================================
# save_ic functions - these are used to save EC-Earth states during a run,
# which can be used as Initial Conditions (ICs) for other runs.
#
# save_ic_get_config : define the config to use based on the save_ic config parameter
#
# save_ic has two options available:
#   save_ic:end_leg (save ICs at the end of every leg)
#   save_ic:end_run (save ICs at the end of the run)
#
# By default, without an option, ICs are saved at given offsets from the leg
# start, possibly if conditions are met. These offset(s) and condition(s) must
# be coded in the "else" clause below. See commented example.
#
function save_ic_get_config ()
{
    do_save_ic=false
    save_ic_custom=false
    if $(has_config save_ic)
    then
        if $(has_config save_ic:end_leg)
        then
            # save ICs at the end of every leg
            do_save_ic=true
            save_ic_date_offset=( "+ ${leg_length_sec} sec" )
        elif $(has_config save_ic:end_run)
        then
            # save ICs at the end of the run
            leg_end_date_yyyymmdd=$(date -u -d "${leg_end_date}" +%Y%m%d)
            run_end_date_yyyymmdd=$(date -u -d "${run_end_date}" +%Y%m%d)
            if [ ${leg_end_date_yyyymmdd} -eq ${run_end_date_yyyymmdd} ]
            then
                do_save_ic=true && save_ic_date_offset=( "+ ${leg_length_sec} sec" )
            fi
        else
            echo "WARNING: save_ic requires to define condition and offset here or in the runscript"
            save_ic_custom=true
            do_save_ic=false
            save_ic_date_offset=( )
            # edit here or in the runscript the conditional statement to decide which legs to save ICs and the offset from leg start
            # e.g. to save at the end of every 10 legs:
            #EXAMPLE if (( leg_number%10 == 0 ))
            #EXAMPLE then
            #EXAMPLE     do_save_ic=true
            #EXAMPLE     save_ic_date_offset=( "+ ${leg_length_sec} sec" )
            #EXAMPLE fi
        fi
    fi
}

# save_ic_define_vars : define variables used in the save_ic functions
#
# The following variables must be defined in the runscript before calling this function
#
# 1) do_save_ic : set to true/false to enable save_ic feature
#
# 2) save_ic_date_offset : array of dates (offset from start of chunk, at 00:00h) to save ICs.
#    e.g. save_ic_date_offset=( "+1 month" "+2 month" )
#    The following restrictions apply, it is up to the user to ensure compliance
#     - first timestep of run is not supported
#     - if requesting first timestep of leg start, NEMO restarts from previous legs will
#       be used if present
#     - only one IC per month is supported (to simplify the IFS filter)
#     - maximum 9 ICs per leg (because of current restrictions in NEMO namelist)
#     - if requesting model-level output for IFS (e.g. for PRIMAVERA),
#       there will be no model-level variables in output on the timestep which
#       ICs are requested, unless requesting the last timestep of the leg
#
function save_ic_define_vars ()
{
    if true
    then
        # save original value of ifs_lastout
        has_config ifs && [[ -z "${save_ic_ifs_lastout_orig:-}" ]] && save_ic_ifs_lastout_orig=${ifs_lastout}
        save_ic_ifs_lastout=false

        # sanity checks
        [ ${#save_ic_date_offset[@]} -gt 9 ] && error "Cannot create more than 9 ICs in a given leg"

        # fill vars
        for (( i=0; i< ${#save_ic_date_offset[@]}; i++ ))
        do
            #save_ic_date1[$i]=${save_ic_date[$i]}
            save_ic_date1[$i]=$(date -u -d "${leg_start_date} ${save_ic_date_offset[$i]}" +%Y%m%d)
            save_ic_date[$i]=$(date -uR -d "${save_ic_date1[$i]}")
            save_ic_sec[$i]=$(( $(date -d "${save_ic_date[$i]}" +%s) - $(date -d "${run_start_date}" +%s) ))
            # Correct for leap days because NEMO standalone uses no-leap calendar
            has_config nemo && ! has_config ifs && save_ic_sec[$i]=$(( save_ic_sec[$i] - $(leap_days "${run_start_date}" "${save_ic_date[$i]}")*24*3600 ))
            save_ic_day[$i]=$(( ${save_ic_sec[$i]} / 86400 ))
            has_config ifs && save_ic_ppt_files[$i]="ppt"$(printf %06d ${save_ic_day[$i]})"0000"
            has_config nemo && save_ic_nemo_ts[$i]=$(( save_ic_sec[$i] / nem_time_step_sec ))
            # sanity checks
            if [ ${save_ic_sec[$i]} -eq 0 ]
            then
                info "Initial conditions cannot be created for first timestep of run"
                has_config ifs && save_ic_ppt_files[$i]=""
                has_config nemo && save_ic_nemo_ts[$i]=-1
            elif [ ${save_ic_sec[$i]} -eq $leg_start_sec ]
            then
                if has_config nemo
                then
                    info "Cannot create NEMO ICs for first timestep of leg at save_ic_date1[$i], will use restarts from previous leg"
                    save_ic_nemo_ts[$i]=-1
                fi
            fi
            # if saving ICs at the end of the leg, set ifs_lastout=true
            if [ ${save_ic_sec[$i]} -eq $leg_end_sec ]
            then
                if $(has_config ifs) && ! ${save_ic_ifs_lastout_orig}
                then
                    ifs_lastout=true
                    save_ic_ifs_lastout=true
                fi
            fi
        done
    fi
}

# prepare output configuration (NEMO namelist, IFS ppt file)
function save_ic_prepare_output()
{
    # For NEMO this is handled in the namelist variables ln_rst_list and nn_stocklist in namelist.nemo.ref.sh
    if has_config nemo
    then
        nemo_stocklist=""
        #for (( i=0; i< ${#save_ic_date[@]}; i++ )) ; do nemo_stocklist+=$(( save_ic_sec[$i] / nem_time_step_sec )), ; done
        for (( i=0; i< ${#save_ic_date[@]}; i++ ))
        do
            [ ${save_ic_nemo_ts[$i]} -ne -1 ] && nemo_stocklist+=${save_ic_nemo_ts[$i]},
        done
        nemo_stocklist+=$(( leg_end_sec / nem_time_step_sec )),
        for (( i=${#save_ic_date[@]}; i<9 ; i++ )) ; do nemo_stocklist+=0, ; done
        nemo_stocklist+=$'\n'
    fi

    # For IFS we need to create links to special ppt file
    if has_config ifs
    then
        # create the special ppt file
        save_ic_ppt_filename=pptdddddd0000_save_ic
        save_ic_ppt_ifile=pptdddddd0000 # change this for e.g. primavera
        # these are the codes which must be added to the special ppt file used for generating
        # required IFS model-level output at each requested timestep
        save_ic_MFP2DF_param_ids="129,152"
        save_ic_MFPPHY_param_ids="139,170,183,236,39,40,41,42,141,198,235,31,238,32,33,34,35,36,37,38,148,172,173,174,15,17,16,18,66,67,74,43,160,161,162,163,234,28,27,30,29" #all variables needed
        #save_ic_MFPPHY_param_ids="198,36,37,38,148,172,173,174,15,17,16,18,66,67,74,43,160,161,162,163,234,28,27,30,29" #all variables (old)
        #save_ic_MFPPHY_param_ids="198,36,37,38,148,172,173,174,15,17,16,18,74,43,160,161,162,163,234" #trunk
        #save_ic_MFPPHY_param_ids="173,174,15,17,16,18,66,67,74,43,160,161,162,163,234,28,27,30,29" #primavera
        save_ic_filter_param_ids=""
        # get requested output codes as a single line without space and without the last comma
        NFPPHY=`grep NFPPHY postins/$save_ic_ppt_ifile | sed -e 's/^\s*NFPPHY\s*=\s*//' -e 's/[,]$//'`
        MFPPHY=$(sed -e '1h;2,$H;$!d;g' -re 's/.*MFPPHY *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//' <postins/$save_ic_ppt_ifile)
        [[ $MFPPHY == "" ]] && error "IFS ppt file postins/$save_ic_ppt_ifile does not contain any entries in MFPPHY."

        NFP2DF=`grep NFP2DF postins/$save_ic_ppt_ifile | sed -e 's/^\s*NFP2DF\s*=\s*//' -e 's/[,]$//'`
        MFP2DF=$(sed -e '1h;2,$H;$!d;g' -re 's/.*MFP2DF *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//' <postins/$save_ic_ppt_ifile)
        [[ $MFP2DF == "" ]] && NFP2DF=0 && MFP2DF=","

        IFS=","
        old_MFPPHY_params=( ${MFPPHY} )
        old_MFP2DF_params=( ${MFP2DF} )
        new_MFPPHY_params=( ${save_ic_MFPPHY_param_ids} )
        new_MFP2DF_params=( ${save_ic_MFP2DF_param_ids} )
        unset IFS
        # update requested output codes by adding necessary variables
        for new_param_id in ${new_MFPPHY_params[@]}
        do
            new_param_id=`printf "%0*d" 3 $new_param_id`
            found=false
            for old_param_id in ${old_MFPPHY_params[@]}
            do
                old_param_id=`printf "%03g" $old_param_id`
                [ ${old_param_id} -eq ${new_param_id} ] && found=true && break
            done
            if ! $found
            then
                NFPPHY=$(( $NFPPHY + 1 ))
                MFPPHY="${MFPPHY},$new_param_id"
                save_ic_filter_param_ids="${save_ic_filter_param_ids}$new_param_id,"
            fi
        done
        for new_param_id in ${new_MFP2DF_params[@]}
        do
            new_param_id=`printf "%0*d" 3 $new_param_id`
            found=false
            for old_param_id in ${old_MFP2DF_params[@]}
            do
                old_param_id=`printf "%03g" $old_param_id`
                [ ${old_param_id} -eq ${new_param_id} ] && found=true && break
            done
            if ! $found
            then
                NFP2DF=$(( $NFP2DF + 1 ))
                MFP2DF="${MFP2DF},$new_param_id"
            fi
        done

        # create special ppt file with modified codes from original ppt file
        sed -r -e '1h;2,$H;$!d;g' \
            -e 's|(NFPPHY\s*=)[0-9 ]+|\1'${NFPPHY}'|' \
            -e 's|(MFPPHY\s*=)[0-9, \n]+\n|\1'${MFPPHY}',\n|' \
            -e 's|(NFP2DF\s*=)\s*[0-9]+|\1'${NFP2DF}'|' \
            -e 's|(MFP2DF\s*=)[0-9, \n]+\n|\1'${MFP2DF}',\n|' \
            -e 's|NFP3DFS\s*=\s*[0-9]+,||' \
            -e 's|MFP3DFS\s*=[0-9, \n]+\n|\n|' \
            -e 's|NRFP3S\s*=\s*\-?[0-9]+,||' \
            -e 's/&NAMFPC/\&NAMFPC\n    NFP3DFS = 9,\n    MFP3DFS = 133,75,76,246,247,248,138,155,130,\n    NRFP3S  = -99\n    NFP2DF = 2,\n    MFP2DF = 152,129,/' \
            <postins/$save_ic_ppt_ifile >postins/${save_ic_ppt_filename}

        # cleanup existing links from previous legs (required when save_ic_ifs_lastout=true)
        ls -ltr postins
        find -L postins/ -xtype l -samefile postins/${save_ic_ppt_filename} -exec rm {} \;
        # create links to ppt file for all requested timesteps
        for (( i=0; i< ${#save_ic_date[@]}; i++ ))
        do
            if [ ! -f postins/$save_ic_ppt_filename ]
            then
                error "IFS IC file $save_ic_ppt_filename does not exist."
            elif [ "${save_ic_ppt_files[$i]}" != "" ]  ; then
                ln -sf $save_ic_ppt_filename postins/${save_ic_ppt_files[$i]}
            fi
        done
        /bin/ls -1 postins/* > dirlist
        ls -ltr postins
    fi
}

# post-process save_ic results
function save_ic_postproc()
{
    # cleanup existing links for subsequent legs (see issue #345)
    if has_config ifs
    then
        ls -ltr postins
        find -L  postins/ -xtype l -samefile postins/${save_ic_ppt_filename} -exec rm {} \;
        /bin/ls -1 postins/* > dirlist
        ls -ltr postins
    fi
    for (( i=0; i< ${#save_ic_date[@]}; i++ ))
    do
        outdir="save_ic/"${save_ic_date1[$i]}

        # save IFS ICs
        if has_config ifs
        then
            [ "${save_ic_ppt_files[$i]}" != "" ] && save_ic_ifs_out2init $i
        fi
        # copy oasis restarts
        if has_config oasis
        then
            # copy oasis restarts if this is the last or first timestep of the leg
            # oasis files depend on the components and configuration
            # so they go in their own sub-directory, easier to separate from ifs and nemo files
            if [ ${save_ic_sec[$i]} -eq $leg_end_sec ]
            then
                mkdir -p ${outdir}/oasis
                for f in ${oas_rst_files} ; do test -f ${f} && cp ${f} ${outdir}/oasis ; done
            elif [ ${save_ic_sec[$i]} -eq $leg_start_sec ]
            then
                mkdir -p ${outdir}/oasis
                oas_rst_dir="restart/oasis/$(printf %03d $((leg_number)))"
                for f in ${oas_rst_files} ; do test -f ${oas_rst_dir}/${f} && cp ${oas_rst_dir}/${f} ${outdir}/oasis ; done
            fi
        fi
        # copy NEMO restarts
        if has_config nemo
        then
            nemo_ts=$(( save_ic_sec[$i] / nem_time_step_sec ))
            ns=$(printf %08d $(( nemo_ts - nem_restart_offset )))
	    # copy each restart type seperately, depending on config
	    extensions="oce"
	    has_config lim3 && extensions+=" ice"
	    has_config pisces && extensions+=" trc"
	    for ext in $extensions
	    do
		if ls ${exp_name}_${ns}_restart_${ext}_????.nc > /dev/null 2>&1
		then
                    mkdir -p ${outdir}/nemo
                    if [[ ${save_ic_sec[$i]} -eq $leg_start_sec ]] || [[ ${save_ic_sec[$i]} -eq $leg_end_sec ]]
                    then
			cp -f ${exp_name}_${ns}_restart_${ext}_????.nc ${outdir}/nemo
                    else
			mv -f ${exp_name}_${ns}_restart_${ext}_????.nc ${outdir}/nemo
                    fi
		else
                    info "Cannot find NEMO ($ext) initial conditions for date ${save_ic_date1[$i]}"
		fi
	    done
        fi
        # copy TM5 restarts
        leg_end_date_yyyymmdd=$(date -u -d "${leg_end_date}" +%Y%m%d)
        if has_config tm5 && [[ $leg_end_date_yyyymmdd == ${save_ic_date1[$i]} ]]
        then
	    found=false
	    for f in TM5_restart_${leg_end_date_yyyymmdd}_0000_glb300x200.nc save_${leg_end_date_yyyymmdd}00_glb300x200.hdf
	    do
		if [[ -f "$f" ]] ; then
		    mkdir -p ${outdir}/tm5
		    cp -f $f ${outdir}/tm5
		    found=true
		fi
	    done
            ! $found && info "Cannot find TM5 restarts for date ${save_ic_date1[$i]}" || true
	fi
    done
}

# Function to create IC files for IFS from special output based on a script from K. Wyser
function save_ic_ifs_out2init()
{
    icdate=${save_ic_date1[$1]}
    #srcdir=$2
    filter_output=true
    grib_filter=${GRIB_BIN_PATH}${GRIB_BIN_PATH:+/}grib_filter

    # temporary directory
    tmpdir=tmp_save_ic
    [ -d $tmpdir ] && rm -rf ${tmpdir}
    mkdir -p $tmpdir

    # first IFS timestep of a month is saved in last output file
    if [[ "$(date -d "${icdate}" +%d)" == "01" ]] ; then
        yyyymm=$(date -d "${icdate} - 6 hours" +%Y%m)
    else
        yyyymm=$(date -d "${icdate}" +%Y%m)
    fi

    # find the ICMSH/GG files containing the last timestep, which are in $srcdir/output/ifs/???
    #local ifile_sh=`find $srcdir -name ICMSH${exp_name}+$yyyymm -print -quit`
    #local ifile_gg=`find $srcdir -name ICMGG${exp_name}+$yyyymm -print -quit`
    ifile_sh=ICMSH${exp_name}+$yyyymm
    ifile_gg=ICMGG${exp_name}+$yyyymm
    if [[ ! -f "$ifile_sh" ]] ; then info "cannot find ICMSH file $ifile_sh to create initial conditions at $icdate!" ; return 0 ; fi
    if [[ ! -f "$ifile_gg" ]] ; then info "cannot find ICMGG file $ifile_gg to create initial conditions at $icdate!" ; return 0 ; fi

    if $filter_output
    then
        # define grib filters to separate data for IC from normal output
        # filter_time_init is to define which timestep contains the ICs, currently only one per month is supported
        filter_time_init="dataDate == ${icdate} && dataTime == 0"
        # filter_time_out is to filter any timesteps which might contain ICs
        filter_time_out="dataTime == 0 && ( 0 "
        for (( j=0; j< ${#save_ic_date[@]}; j++ )) ; do filter_time_out+=" || ( dataDate == ${save_ic_date1[$j]} )"; done
        filter_time_out+=" )"
        $save_ic_ifs_lastout && filter_last="( dataTime == 0 ) && ( dataDate == ${save_ic_date1[$((j-1))]} )" || filter_last="0"
        # build expression to filter the paramIDs which we have to filter out, set them in ini_filter_param_ids in the runscript
        #save_ic_filter_param_ids="198,36,37,38,148,172,173,174,15,17,16,18,74,43,160,161,162,163,234"
        filter_params="1"
        IFS=","
        for p in $save_ic_filter_param_ids ; do filter_params+=" && paramId != $p" ; done
        unset IFS

        # SH file
        ofile_sh_init=${tmpdir}/sh_init.grb
        ofile_sh_out=${tmpdir}/sh_out.grb
        ofile_sh_last=${tmpdir}/sh_last.grb
        filter_sh=${tmpdir}/filter_sh
        write_sh_init="if ( $filter_time_init ) { write \"${ofile_sh_init}\"; }"
        write_sh_out="if ( $filter_last ) { write \"${ofile_sh_last}\"; } else { write \"${ofile_sh_out}\"; }"

        cat > $filter_sh << EOT
if ( ! ( $filter_time_out ) ) { write "${ofile_sh_out}"; }
else {
if ( typeOfLevel is "hybrid" ) { ${write_sh_init}; }
else { ${write_sh_out}; }
}
EOT

        #GG file
        ofile_gg_init=${tmpdir}/gg_init.grb
        ofile_gg_out=${tmpdir}/gg_out.grb
        ofile_gg_last=${tmpdir}/gg_last.grb
        filter_gg=${tmpdir}/filter_gg
        write_gg_init="if ( $filter_time_init ) { write \"${ofile_gg_init}\"; }"
        write_gg_out="if ( $filter_last ) { write \"${ofile_gg_last}\"; } else { write \"${ofile_gg_out}\"; }"

        cat > $filter_gg << EOT
if ( ! ( $filter_time_out ) ) { write "${ofile_gg_out}"; }
else {
if ( levelType is "ml" ) { ${write_gg_init}; }
else {
  if ( levelType is "pl" ) { ${write_gg_out}; }
  else {
    if ( $filter_params ) {
      ${write_gg_init};
      ${write_gg_out};
    }
    else {
      ${write_gg_init};
    }
  }
}
}
EOT

        #run grib_filter on SH and GG files
        $grib_filter $filter_sh $ifile_sh
        $grib_filter $filter_gg $ifile_gg
        if [[ ! -f "$ofile_sh_init" ]] ; then info "ICMSH file $ifile_sh does not contain data to create initial conditions at $icdate" ; return 0 ; fi
        if [[ ! -f "$ofile_gg_init" ]] ; then info "ICMGG file $ifile_gg does not contain data to create initial conditions at $icdate" ; return 0 ; fi

        #rename files
        ifile_sh=${tmpdir}/$(basename $ifile_sh)
        ifile_gg=${tmpdir}/$(basename $ifile_gg)
        mv ${ofile_sh_init} ${ifile_sh}
        mv ${ofile_gg_init} ${ifile_gg}
        #srcdir=${tmpdir}

    fi # $filter_output

    if [[ ! -f "$ifile_sh" ]] ; then info "cannot find ICMSH file $ifile_sh to create initial conditions at $icdate!" ; return 0 ; fi
    if [[ ! -f "$ifile_gg" ]] ; then info "cannot find ICMGG file $ifile_gg to create initial conditions at $icdate!" ; return 0 ; fi

    tgtdir=save_ic/$icdate/ifs
    ofile_sh=${tgtdir}/ICMSH${exp_name}INIT
    ofile_gg_init=${tgtdir}/ICMGG${exp_name}INIT
    ofile_gg_iniua=${tgtdir}/ICMGG${exp_name}INIUA

    # make sure the output folder is created and delete any existing files
    #[ -d $tgtdir ] && rm -rf ${tgtdir}/* || mkdir -p $tgtdir
    mkdir -p $tgtdir
    rm -f $ofile_sh $ofile_gg_init $ofile_gg_iniua

    cat > ${tmpdir}/gf1 << EOT
if ( typeOfLevel is "hybrid" ) { write "${tmpdir}/shinit.[shortName].[level]"; }
EOT
    $grib_filter ${tmpdir}/gf1 $ifile_sh

    cp -f ${tmpdir}/shinit.lnsp.1 $ofile_sh
    for lev in {1..91}
    do
        for var in vo d t
        do
            cat ${tmpdir}/shinit.$var.$lev >> $ofile_sh
        done
    done
    cat ${tmpdir}/shinit.z.1 >> $ofile_sh

    cat > ${tmpdir}/gf2 << EOT
write "${tmpdir}/gginit.[shortName]";
EOT
    $grib_filter ${tmpdir}/gf2 $ifile_gg

    for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn \
        rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid \
        lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
    do
        cat ${tmpdir}/gginit.$var >> $ofile_gg_init
    done

    cat > ${tmpdir}/gf3 << EOT
write "${tmpdir}/gginiua.[shortName].[level]";
EOT
    $grib_filter ${tmpdir}/gf3 $ifile_gg

    #   ${tmpdir}/gginiua.o3 \ check this!
    for lev in {1..91}
    do
        for var in q
        do
            cat ${tmpdir}/gginiua.$var.$lev >> $ofile_gg_iniua
        done
    done

    for lev in {1..91}
    do
        for var in crwc cswc clwc ciwc cc
        do
            cat ${tmpdir}/gginiua.$var.$lev >> $ofile_gg_iniua
        done
    done

    # copy filtered files to the appropriate location
    if $filter_output
    then
        # move filter files to $tgtdir, in case something went wrong
        mv -f $filter_sh $filter_gg $tgtdir
        ifile_sh=$(basename $ifile_sh)
        ifile_gg=$(basename $ifile_gg)
        # keep the full output files as a backup
        mv -f $ifile_sh $tgtdir/${ifile_sh}-out+init
        mv -f $ifile_gg $tgtdir/${ifile_gg}-out+init
        # move the filtered output file to the  runtime folder
        [ -f $ofile_sh_out ] && mv -f $ofile_sh_out $ifile_sh || error "save_ic_ifs_out2init - warning! SH file $ofile_sh_out missing!"
        [ -f $ofile_gg_out ] && mv -f $ofile_gg_out $ifile_gg || error "save_ic_ifs_out2init - warning! GG file $ofile_gg_out missing!"
        # keep a copy of the last timestep
        if $save_ic_ifs_lastout
        then
            [ -f $ofile_sh_last ] && mv -f $ofile_sh_last $tgtdir/${ifile_sh}-ifs_lastout
            [ -f $ofile_gg_last ] && mv -f $ofile_gg_last $tgtdir/${ifile_gg}-ifs_lastout
        fi
    fi #$filter_output

    # delete tmp folder
    rm -rf $tmpdir

    echo "save_ic_ifs_out2init ended successfully, results are in $tgtdir"
}
+ declare -a save_ic_date save_ic_date1 save_ic_sec save_ic_day save_ic_ppt_file save_ic_nemo_ts
+ oas_rst_files='rstas.nc rstos.nc r_hum.nc r_g2d.nc r_udr.nc r_div.nc r_vor.nc                  r_ddr.nc r_tmp.nc r_dmf.nc r_s2d.nc r_umf.nc vegin.nc lpjgv.nc'

# -----------------------------------------------------------------------------
# *** Carbon cycle configuration
# -----------------------------------------------------------------------------
# set to true to write co2 fluxes sent to TM5
ccycle_debug_fluxes=true
+ ccycle_debug_fluxes=true

# =============================================================================
# *** END of User configuration
# =============================================================================

# =============================================================================
# *** This is where the code begins ...
# =============================================================================

# -----------------------------------------------------------------------------
# *** Create the run dir if necessary and go there
#     Everything is done from here.
# -----------------------------------------------------------------------------
if [ ! -d ${run_dir} ]
then
    mkdir -p ${run_dir}
fi
+ '[' '!' -d /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/runtime ']'
+ mkdir -p /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/runtime
cd ${run_dir}
+ cd /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/runtime

# -----------------------------------------------------------------------------
# Autosubmit sanity check
# -----------------------------------------------------------------------------
CHUNK=1
+ CHUNK=1
if [ -f ece.info ]; then
  ece_info_leg_number=$(grep leg_number ece.info | tail -n 1 | awk -F"=" '{print $2}')
  current_leg_number=$((ece_info_leg_number + 1))
  if [[ "${CHUNK}" != "${current_leg_number}" ]]; then
    echo "Runscript leg_number" $current_leg_number
    echo "Don't match with Autosubmit CHUNK" ${CHUNK}
    exit 1
  fi
fi
+ '[' -f ece.info ']'

# -----------------------------------------------------------------------------
# *** Determine the time span of this run and whether it's a restart leg
# -----------------------------------------------------------------------------

# Regularise the format of the start and end date of the simulation
run_start_date=$(date -uR -d "${run_start_date}")
date -uR -d "${run_start_date}"
++ date -uR -d 19931101
+ run_start_date='Mon, 01 Nov 1993 00:00:00 +0000'
run_end_date=$(date -uR -d "${run_end_date}")
date -uR -d "${run_end_date}"
++ date -uR -d '19931101 + 1 month'
+ run_end_date='Wed, 01 Dec 1993 00:00:00 +0000'


# -----------------------------------------------------------------------------
# *** Set path to grib_set
# -----------------------------------------------------------------------------

grib_set=${GRIB_BIN_PATH}${GRIB_BIN_PATH:+/}grib_set
+ grib_set=/apps/GRIB/1.14.0/INTEL//bin/grib_set

# Loop over the number of legs
for (( ; run_num_legs>0 ; run_num_legs-- ))
do

    # Check for restart information file and set the current leg start date
    #   Ignore restart information file if force_run_from_scratch is true
    if ${force_run_from_scratch} || ! [ -r ${ece_info_file} ]
    then
        leg_is_restart=false
        leg_start_date=${run_start_date}
        leg_number=1
    else
        leg_is_restart=true
        . ./${ece_info_file}
        leg_start_date=${leg_end_date}
        leg_number=$((leg_number+1))
    fi

    # Compute the end date of the current leg
    if [ -n "${rst_freq}" ]
    then
        leg_end_date=$(date -uR -d "${leg_start_date} + ${rst_freq}")
    else
        leg_end_date=${run_end_date}
    fi

    # Check if legs are integer multiples of full years if LPJG is used
    if has_config lpjg
    then
        
        if [[ $(date +%m%d%T -u -d "${leg_start_date}") != "010100:00:00" || \
            $(date +%m%d%T -u -d "${leg_start_date} + ${rst_freq}") != "010100:00:00" ]]
        then
            error "LPJ-GUESS runs must start on Jan 1 and end on Dec 31. Multi-year legs are allowed."
        fi
    fi              

    if [[ "FALSE" == "TRUE" ]]
    then
        leg_end_date=${run_end_date}
        ifs_lastout=true
    fi

    # Some time variables needed later
    leg_length_sec=$(( $(date -u -d "${leg_end_date}" +%s) - $(date -u -d "${leg_start_date}" +%s) ))
    leg_start_sec=$(( $(date -u -d "${leg_start_date}" +%s) - $(date -u -d "${run_start_date}" +%s) ))
    leg_end_sec=$(( $(date -u -d "${leg_end_date}" +%s) - $(date -u -d "${run_start_date}" +%s) ))
    leg_start_date_yyyymmdd=$(date -u -d "${leg_start_date}" +%Y%m%d)
    leg_start_date_yyyy=$(date -u -d "${leg_start_date}" +%Y)
    leg_end_date_yyyy=$(date -u -d "${leg_end_date}" +%Y)

    # Check whether there's actually time left to simulate - exit otherwise
    if [ ${leg_length_sec} -le 0 ]
    then
        info "Leg start date equal to or after end of simulation."
        info "Nothing left to do. Exiting."
        exit 0
    fi

    # Initial conditions saved during the run
    do_save_ic=false
    save_ic_custom=false
    has_config save_ic && save_ic_get_config
    # if you do not use an option with save_ic, you must define 'do_save_ic' and
    # 'save_ic_date_offset' here or in ../libsave_ic.sh/save_ic_get_config()
    # with AS runtime, no need to edit the script, set SAVE_IC_OFFSET (and optionally SAVE_IC_COND)
    if $save_ic_custom
    then
        [[ "true" = "" ]] && save_ic_cond=true || save_ic_cond='true'
        if eval $save_ic_cond ; then do_save_ic=true ; else do_save_ic=false ; fi
        save_ic_date_offset=(  )
    fi
    ${do_save_ic} && save_ic_define_vars

    # -------------------------------------------------------------------------
    # *** Prepare the run directory for a run from scratch
    # -------------------------------------------------------------------------
    if ! $leg_is_restart
    then
        # ---------------------------------------------------------------------
        # *** Check if run dir is empty. If not, and if we are allowed to do so
        #     by ${force_run_from_scratch}, remove everything
        # ---------------------------------------------------------------------
        if $(ls * >& /dev/null)
        then
            if ${force_run_from_scratch}
            then
                rm -fr ${run_dir}/*
            else
                error "Run directory not empty and \$force_run_from_scratch not set."
            fi
        fi

        # ---------------------------------------------------------------------
        # *** Copy executables of model components
        # *** Additionally, create symlinks to the original place for reference
        # ---------------------------------------------------------------------
        cp    ${ifs_exe_file} .
        ln -s ${ifs_exe_file} $(basename ${ifs_exe_file}).lnk

        if $(has_config amip)
        then
            cp    ${amip_exe_file} .
            ln -s ${amip_exe_file} $(basename ${amip_exe_file}).lnk
        fi

        if $(has_config nemo)
        then
            cp    ${nem_exe_file} .
            ln -s ${nem_exe_file} $(basename ${nem_exe_file}).lnk

            cp    ${rnf_exe_file} .
            ln -s ${rnf_exe_file} $(basename ${rnf_exe_file}).lnk

            cp    ${xio_exe_file} .
            ln -s ${xio_exe_file} $(basename ${xio_exe_file}).lnk
        fi

        if $(has_config lpjg)
        then
            cp    ${lpjg_exe_file} .
            ln -s ${lpjg_exe_file} $(basename ${lpjg_exe_file}).lnk
        fi

        if $(has_config tm5)
        then
            cp    ${tm5_exe_file} .
            ln -s ${tm5_exe_file} $(basename ${tm5_exe_file}).lnk
        fi

        # ---------------------------------------------------------------------
        # *** Files needed for IFS (linked)
        # ---------------------------------------------------------------------

        # Initial data
        ln -s \
        ${ini_data_dir}/ifs/${ifs_grid}/${leg_start_date_yyyymmdd}/ICMGGECE3INIUA \
                                                            ICMGG${exp_name}INIUA
        ln -s \
        ${ini_data_dir}/ifs/${ifs_grid}/${leg_start_date_yyyymmdd}/ICMSHECE3INIT \
                                                            ICMSH${exp_name}INIT
        rm -f ICMGG${exp_name}INIT
        cp ${ini_data_dir}/ifs/${ifs_grid}/${leg_start_date_yyyymmdd}/ICMGGECE3INIT \
                                                            ICMGG${exp_name}INIT

        # add bare_soil_albedo to ICMGG*INIT
        tempfile=tmp.$$
        ${grib_set} -s dataDate=$(date -u -d "$run_start_date" +%Y%m%d) \
            ${ini_data_dir}/ifs/${ifs_grid}/climate/bare_soil_albedos.grb \
            ${tempfile}

        cat ${tempfile} >> ICMGG${exp_name}INIT
        rm -f ${tempfile}

        # add land ice mask if needed
        if ${ifs_landice}
        then
            tempfile=tmp.$$
            cdo divc,10 -setcode,82 -selcode,141 ICMGG${exp_name}INIT ${tempfile}
            ${grib_set} -s gridType=reduced_gg ${tempfile} ${tempfile}
            cat ${tempfile} >> ICMGG${exp_name}INIT
            rm -f ${tempfile}
        fi

        # Other stuff
        ln -s ${ini_data_dir}/ifs/rtables/* .
      
        if $(has_config atmnudg) ; then
            ln -s ${ini_data_dir}/rlxml* .
        fi
        
        # Output control (ppt files)
        if [ ! -f ${output_control_files_dir}/pptdddddd0600 ] &&  [ ! -f ${output_control_files_dir}/pptdddddd0300 ];then
           echo "Error from ece-esm.sh: Neither the file pptdddddd0600 or pptdddddd0300 exists in the directory:"
           echo " " ${output_control_files_dir}
           exit -1
        fi
        mkdir postins
        cp ${output_control_files_dir}/ppt* postins/
        if [ -f postins/pptdddddd0600 ];then
           ln -s pptdddddd0600 postins/pptdddddd0000
           ln -s pptdddddd0600 postins/pptdddddd1200
           ln -s pptdddddd0600 postins/pptdddddd1800
        fi
        if [ -f postins/pptdddddd0300 ];then
           ln -s pptdddddd0300 postins/pptdddddd0900
           ln -s pptdddddd0300 postins/pptdddddd1500
           ln -s pptdddddd0300 postins/pptdddddd2100
           if [ ! -f postins/pptdddddd0600 ];then
               ln -s pptdddddd0300 postins/pptdddddd0000
               ln -s pptdddddd0300 postins/pptdddddd0600
               ln -s pptdddddd0300 postins/pptdddddd1200
               ln -s pptdddddd0300 postins/pptdddddd1800
           fi
        fi
        /bin/ls -1 postins/* > dirlist

        # ---------------------------------------------------------------------
        # *** Files needed for LPJ-GUESS
        # ---------------------------------------------------------------------
        if $(has_config lpjg)
        then
            # Check for valid grid
            if [ $lpjg_res != "T255" -a $lpjg_res != "T159" ]
            then
                error "LPJG-gridlist doesn't exist for ifs-grid: ${ifs_grid}" 
            fi
            # Initial data - saved state for LPJ-GUESS (.bin format)
            lpjgstartdir=$(printf "lpjg_state_%04d" $leg_start_date_yyyy)
            ln -sf ${ini_data_dir}/lpjg/ini_state/${lpjg_res}/${lpjgstartdir} ${run_dir}/${lpjgstartdir}

            # Control files (i.e. .ins, landuse, N deposition, soil type files etc.)
            cp  -f ${ecearth_src_dir}/lpjg/data/ins/*.ins .
            # activate the new litterfall scheme for C4MIP - for the coupled model this is done when both pisces and lpjg are activated
            has_config pisces lpjg && echo -e "!override for EC-Earth-CC in runscript\nifpftlitterfall 1\ncalc_phen_after_restart 0" >> global.ins
            mkdir -p ${run_dir}/landuse

        fi

        # ---------------------------------------------------------------------
        # *** Files needed for NEMO (linked)
        # ---------------------------------------------------------------------
        if $(has_config nemo)
        then
            # Link initialisation files for matching ORCA grid
            for f in \
                bathy_meter.nc coordinates.nc \
                ahmcoef.nc \
                K1rowdrg.nc M2rowdrg.nc mask_itf.nc \
                decay_scale_bot.nc decay_scale_cri.nc \
                mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc \
                runoff_depth.nc subbasins.nc
            do
                [ -f ${ini_data_dir}/nemo/initial/${nem_grid}/$f ] && ln -s ${ini_data_dir}/nemo/initial/${nem_grid}/$f
            done

            # Copying the time independent NEMO files for the matching ORCA grid in order to facilitate cmorisation:
            for f in \
                bathy_meter.nc subbasins.nc
            do
                mkdir -p output/nemo/ofx-data
                [ -f ${ini_data_dir}/nemo/initial/${nem_grid}/$f ] && cp -f ${ini_data_dir}/nemo/initial/${nem_grid}/$f output/nemo/ofx-data/
            done

            # Link geothermal heating file (independent of grid) and matching weight file
            ln -s ${ini_data_dir}/nemo/initial/Goutorbe_ghflux.nc
            ln -s ${ini_data_dir}/nemo/initial/weights_Goutorbe1_2_orca${nem_res_hor}_bilinear.nc

            # Link the salinity climatology file (needed for diagnostics)
            ln -s ${ini_data_dir}/nemo/climatology/${nem_grid}/sali_ref_clim_monthly.nc

            # Link either restart files or climatology files for the initial state
            if $(has_config nemo:start_from_restart)
            then
                # When linking restart files, we accept three options:
                # (1) Merged files for ocean and ice, i.e.
                #     restart_oce.nc and restart_ice.nc
                # (2) One-file-per-MPI-rank, i.e.
                #     restart_oce_????.nc and restart_ice_????.nc
                #     No check is done whether the number of restart files agrees
                #     with the number of MPI ranks for NEMO!
                # (3) One-file-per-MPI-rank with a prefix, i.e.
                #     <exp_name>_<time_step>_restart_oce_????.nc (similar for the ice)
                #     The prefix is ignored.
                # The code assumes that one of the options can be applied! If more
                # options are applicable, the first is chosen. If none of the
                # options apply, NEMO will crash with missing restart file.
                if   ls -U ${nem_restart_file_path}/restart_[oi]ce.nc > /dev/null 2>&1
                then
                    ln -s ${nem_restart_file_path}/restart_[oi]ce.nc ./

                elif ls -U ${nem_restart_file_path}/restart_[oi]ce_????.nc > /dev/null 2>&1
                then
                    ln -s ${nem_restart_file_path}/restart_[oi]ce_????.nc ./

                else
                    for f in ${nem_restart_file_path}/????_????????_restart_[oi]ce_????.nc
                    do
                        ln -s $f $(echo $f | sed 's/.*_\(restart_[oi]ce_....\.nc\)/\1/')
                    done
                fi
            else

                # Temperature and salinity files for initialisation
                ln -s ${ini_data_dir}/nemo/climatology/absolute_salinity_WOA13_decav_Reg1L75_clim.nc
                ln -s ${ini_data_dir}/nemo/climatology/conservative_temperature_WOA13_decav_Reg1L75_clim.nc
                ln -s ${ini_data_dir}/nemo/climatology/weights_WOA13d1_2_orca${nem_res_hor}_bilinear.nc

                # Grid dependent runoff files
                case ${nem_grid} in
                    ORCA1*)   ln -s ${ini_data_dir}/nemo/climatology/runoff-icb_DaiTrenberth_Depoorter_ORCA1_JD.nc ;;
                    ORCA025*) ln -s ${ini_data_dir}/nemo/climatology/ORCA_R025_runoff_v1.1.nc ;;
                esac
            fi

            # for ocean_nudging
            if $(has_config nemo:ocenudg) ; then
                ln -s ${ini_data_dir}/nemo/oce_nudg/resto.nc
            fi

            # XIOS files
            . ${ctrl_file_dir}/iodef.xml.sh > iodef.xml
            ln -s ${ctrl_file_dir}/context_nemo.xml
            ln -s ${ctrl_file_dir}/domain_def_nemo.xml
            ln -s ${ctrl_file_dir}/axis_def_nemo.xml
            ln -s ${ctrl_file_dir}/grids_def_nemo.xml
            ln -s ${ctrl_file_dir}/field_def_nemo-lim.xml
            ln -s ${ctrl_file_dir}/field_def_nemo-opa.xml
            ln -s ${ctrl_file_dir}/field_def_nemo-pisces.xml
            ln -s ${ctrl_file_dir}/field_def_nemo-inerttrc.xml
            ln -s ${output_control_files_dir}/file_def_nemo-lim3.xml file_def_nemo-lim.xml
            ln -s ${output_control_files_dir}/file_def_nemo-opa.xml
            ln -s ${output_control_files_dir}/file_def_nemo-pisces.xml

            if [ -f ${ini_data_dir}/xios/ORCA${nem_res_hor}/coordinates_xios.nc ]
            then
                cp ${ini_data_dir}/xios/ORCA${nem_res_hor}/coordinates_xios.nc ./
            else
                info "File 'coordinates_xios.nc' not found. NEMO can not be run with land domain removal!"
            fi

            # Files needed for TOP/PISCES
            if $(has_config pisces)
            then
                ln -fs ${ini_data_dir}/nemo/pisces/dust_INCA_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/ndeposition_Duce_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/pmarge_etopo_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/river_global_news_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/Solubility_T62_Mahowald_ORCA_R1.nc

                ln -fs ${ini_data_dir}/nemo/pisces/par_fraction_gewex_clim90s00s_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/DIC_GLODAP_annual_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/Alkalini_GLODAP_annual_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/O2_WOA2009_monthly_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/PO4_WOA2009_monthly_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/Si_WOA2009_monthly_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/DOC_PISCES_monthly_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/Fer_PISCES_monthly_ORCA_R1.nc
                ln -fs ${ini_data_dir}/nemo/pisces/NO3_WOA2009_monthly_ORCA_R1.nc

                # create co2 concentration file atcco2.txt if required
                if { [ $ifs_cmip_fixyear -gt 0 ] || [[ "${ifs_A4xCO2}" = "TRUE" ]]; } && [[ "${bgc_1PCTCO2}" = "FALSE" ]]
                then
                    rm -f atcco2.txt
                elif [[ "${bgc_1PCTCO2}" = "TRUE" ]]
                then
                    cp -f ${ini_data_dir}/nemo/pisces/mole-fraction-of-carbon-dioxide-in-air_1pctCO2_1849-2016.txt atcco2.txt
                else
                    # determine scenario-name and co2-file middle-fix
                    case $(echo ${ifs_cmip6_scenario} | tr '[:upper:]' '[:lower:]') in
                        hist*)     pis_scen="ssp585"; pis_sco2_mfix="REMIND-MAGPIE-ssp585-1-2-1";;
                        ssp2-4.5*) pis_scen="ssp245"; pis_sco2_mfix="MESSAGE-GLOBIOM-ssp245-1-2-1";;
                        ssp5-3.4*) pis_scen="ssp534os"; pis_sco2_mfix="REMIND-MAGPIE-ssp534-over-1-2-1";;
                        ssp5-8.5*) pis_scen="ssp585"; pis_sco2_mfix="REMIND-MAGPIE-ssp585-1-2-1";;
                        *)  error "Scenario ${ifs_cmip6_scenario} not defined for PISCES" ;;
                    esac

                    # concatenate historic and scenario (2015+) co2 concentration file
                    pis_sco2_pfix="${ini_data_dir}/nemo/pisces/mole-fraction-of-carbon-dioxide-in-air_input4MIPs_GHGConcentrations"
                    cat ${pis_sco2_pfix}_CMIP_UoM-CMIP-1-2-0_gr1-GMNHSH_1849-2014.txt ${pis_sco2_pfix}_ScenarioMIP_UoM-${pis_sco2_mfix}_gr1-GMNHSH_2015-2500.txt > atcco2.txt
                fi
            fi

            #linking surface boundary conditions for CFCs (even if CFCs are not included)
            ln -fs ${ini_data_dir}/nemo/cfc/CFCs_CDIAC_extension_1637_2019.dat CFCs_CDIAC.dat

            if $(has_config pisces:start_from_restart)
            then
            # Same three options as for nemo:start_from_restart
                if   ls -U ${nem_restart_file_path}/restart_trc.nc > /dev/null 2>&1
                then
                    ln -s ${nem_restart_file_path}/restart_trc.nc ./

                elif ls -U ${nem_restart_file_path}/restart_trc_????.nc > /dev/null 2>&1
                then
                    ln -s ${nem_restart_file_path}/restart_trc_????.nc ./

                else
                    for f in ${nem_restart_file_path}/????_????????_restart_trc_????.nc
                    do
                        ln -s $f $(echo $f | sed 's/.*_\(restart_trc_....\.nc\)/\1/')
                    done
                fi
            fi

        fi

        # ---------------------------------------------------------------------
        # *** Files needed for the Runoff mapper (linked)
        # ---------------------------------------------------------------------

        has_config rnfmapper && \
            ln -s ${ini_data_dir}/runoff-mapper/runoff_maps.nc

        # -------------------------------------------------------------------------
        # *** File and dir needed for TM5
        # -------------------------------------------------------------------------
        if $(has_config tm5)
        then
            tm5_istart=33

            case ${tm5_istart} in
                33|32) ln -s \
                    ${tm5_restart_file_path}/TM5_restart_${leg_start_date_yyyymmdd}_0000_glb300x200.nc
                    ;;
                31) ln -s ${tm5_restart_file_path}/tm5_save.hdf
                    ;;
                5)  ln -s ${tm5_restart_file_path}/tm5_mmix.hdf
                    ;;
                2|9) 
                    ;;
                *)  error "Unsupported initial fields option (TM5): ${tm5_istart}"
                    ;;
            esac

            # spectral info
            ln -s ${ini_data_dir}/tm5/TM5_INPUT/T${ifs_res_hor}_info.txt

            # Profiling dir for TM5
            mkdir -p ${run_dir}/tm5_profile
        fi

        # ---------------------------------------------------------------------
        # *** Files needed for OASIS (linked)
        # ---------------------------------------------------------------------

        # Name table file
        ln -s ${ini_data_dir}/oasis/cf_name_table.txt

        # -- Get grid definition and weight files for IFS/NEMO or IFS/AMIP coupling
        has_config nemo && \
            oas_grid_dir=${ini_data_dir}/oasis/T${ifs_res_hor}-ORCA${nem_res_hor} && \
            mycp='cp'

        has_config amip && \
            oas_grid_dir=${ini_data_dir}/oasis/AMIP && \
            mycp='cdo -f nc copy' # to enforce nc format, needed for 'cdo merge' to work (have nc4c with Primavera files)

        # Grid definition files
        if $(has_config tm5)
        then
            ${mycp} ${oas_grid_dir}/areas.nc gcm_areas.nc
            ${mycp} ${oas_grid_dir}/grids.nc gcm_grids.nc
            ${mycp} ${oas_grid_dir}/masks.nc gcm_masks.nc
        else
            ln -s ${oas_grid_dir}/areas.nc
            ln -s ${oas_grid_dir}/grids.nc
            ln -s ${oas_grid_dir}/masks.nc
        fi

        # Weight files
        case ${ifs_res_hor} in
            159)  oas_agrd=080
                  ;;
            255)  oas_agrd=128
                  ;;
            511)  oas_agrd=256
                  ;;
            799)  oas_agrd=400
                  ;;
            *)    error "Unsupported horizontal resolution (IFS): ${ifs_res_hor}"
                  ;;
        esac

        if $(has_config nemo)
        then
            case ${nem_res_hor} in
                1)  oas_ogrd=O1t0
                    ;;
                025)  oas_ogrd=Ot25
                    ;;
                *)  error "Unsupported horizontal resolution (NEMO): ${nem_res_hor}"
                    ;;
            esac
        fi

        if ${oas_link_weights}
        then
            for f in ${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc
            do
                ln -s $f
            done
        fi

        if $(has_config ifs nemo)
        then
            for f in ${oas_rst_ifs_nemo}
            do
                cp ${oas_grid_dir}/rst/$f .
            done
        fi

        # -- Get grid definition, weight and restart files for TM5 coupling
        if $(has_config tm5)
        then
            oas_grid_dir=${ini_data_dir}/oasis/T${ifs_res_hor}-TM5-LPJG

            cp ${oas_grid_dir}/tm5_areas.nc .
            cp ${oas_grid_dir}/tm5_grids.nc .
            cp ${oas_grid_dir}/tm5_masks.nc .

            if ${oas_link_weights}
            then
                for f in ${oas_grid_dir}/rmp_????_to_????_*.nc
                do
                    ln -s $f
                done
            fi

            # -- Get restart files for TM5-IFS/LPJG/PISCES 
            for f in ${oas_rst_ifs_tm5}
            do
                cp ${oas_grid_dir}/rst/${tm5_exch_nlevs}-levels/$f .
            done

            # -- Merge grid definition files
            cdo merge gcm_areas.nc tm5_areas.nc areas.nc
            cdo merge gcm_grids.nc tm5_grids.nc grids.nc
            cdo merge gcm_masks.nc tm5_masks.nc masks.nc
        fi

    else # i.e. $leg_is_restart == true

        # ---------------------------------------------------------------------
        # *** Remove all leftover output files from previous legs
        # ---------------------------------------------------------------------

        # IFS files
        rm -f ICM{SH,GG}${exp_name}+??????

        # NEMO files
        rm -f ${exp_name}_??_????????_????????_{grid_U,grid_V,grid_W,grid_T,icemod,SBC,scalar,SBC_scalar,diad_T}.nc

        # TM5 restart file type
        tm5_istart=33

        if [ $tm5_istart -eq 31 ] && $(has_config tm5)
        then
            ln -sf save_${leg_start_date_yyyymmdd}00_glb300x200.hdf tm5_save.hdf
        fi

    fi # ! $leg_is_restart

    #--------------------------------------------------------------------------
    # *** Surface restoring and ocean nudging options
    #--------------------------------------------------------------------------
    if $(has_config nemo:ocenudg) ; then
        ln -fs ${ini_data_dir}/nemo/oce_nudg/temp_sal*.nc ./
    fi

    if $(has_config nemo:surfresto) ; then
        ln -fs ${ini_data_dir}/nemo/surface_restoring/sss_restore_data*.nc  ./
        ln -fs ${ini_data_dir}/nemo/surface_restoring/sst_restore_data*.nc  ./
        ln -fs ${ini_data_dir}/nemo/surface_restoring/mask_restore*.nc ./
    fi

    # -------------------------------------------------------------------------
    # *** Remove land grid-points
    # -------------------------------------------------------------------------
    if $(has_config nemo:elpin)
    then
        if [ ! -f coordinates_xios.nc ]
        then
            error "ELpIN requested, but file 'coordinates_xios.nc' was not found"
        fi
        jpns=($(${ecearth_src_dir}/util/ELPiN/ELPiNv2.cmd ${nem_numproc}))
        info "nemo domain decompostion from ELpIN: ${jpns[@]}"
        nem_numproc=${jpns[0]}
        nem_jpni=${jpns[1]}
        nem_jpnj=${jpns[2]}
    elif has_config nemo
    then
        info "nemo original domain decomposition (not using ELPiN)"
    fi

    # -------------------------------------------------------------------------
    # *** Initial conditions saved during the run
    # -------------------------------------------------------------------------
    ${do_save_ic} && save_ic_prepare_output

    # -------------------------------------------------------------------------
    # *** Create some control files
    # -------------------------------------------------------------------------

    # Create TM5 runtime rcfile
    tm5_start_date=$(date -u -d "${leg_start_date}" +%F\ %T)
    tm5_end_date=$(date -u -d "${leg_end_date}" +%F\ %T)

    if $(has_config tm5)
    then
        cp -f ${ctrl_file_dir}/tm5-config-run.rc ${run_dir}
        ${ecearth_src_dir}/tm5mp/setup_tm5 --no-compile \
            --time-start="${tm5_start_date}" --time-final="${tm5_end_date}" \
            --istart=${tm5_istart} ${run_dir}/tm5-config-run.rc
    fi

    # IFS frequency output for namelist
    if [ -f postins/pptdddddd0300 ]
    then
        ifs_output_freq=$(( 3 * 3600 / ifs_time_step_sec ))
    elif [ -f postins/pptdddddd0600 ]
    then
        ifs_output_freq=$(( 6 * 3600 / ifs_time_step_sec ))
    else
        error "IFS output frequency undefined."
    fi

    # IFS, NEMO, LIM, AMIP namelist and OASIS namcouple files
    has_config ifs       && . ${ctrl_file_dir}/namelist.ifs.sh                          > fort.4
    has_config nemo      && . ${ctrl_file_dir}/namelist.nemo.ref.sh                     > namelist_ref
    has_config ifs nemo  && . ${ctrl_file_dir}/namelist.nemo-${nem_grid}-coupled.cfg.sh > namelist_cfg
    has_config lim3      && . ${ctrl_file_dir}/namelist.lim3.ref.sh                     > namelist_ice_ref
    has_config lim3      && . ${ctrl_file_dir}/namelist.lim3-${nem_grid}.cfg.sh         > namelist_ice_cfg
    has_config rnfmapper && . ${ctrl_file_dir}/namelist.runoffmapper.sh                 > namelist.runoffmapper
    has_config amip      && . ${ctrl_file_dir}/namelist.amip.sh                         > namelist.amip
    has_config pisces    && . ${ctrl_file_dir}/namelist.nemo.top.ref.sh                 > namelist_top_ref
    has_config pisces    && . ${ctrl_file_dir}/namelist.nemo.top.cfg.sh                 > namelist_top_cfg
    has_config pisces    && . ${ctrl_file_dir}/namelist.nemo.pisces.ref.sh              > namelist_pisces_ref
    has_config pisces    && . ${ctrl_file_dir}/namelist.nemo.pisces.cfg.sh              > namelist_pisces_cfg
    has_config nemo      && . ${ctrl_file_dir}/namelist.nemo.age.ref.sh                 > namelist_age_ref
    has_config nemo      && . ${ctrl_file_dir}/namelist.nemo.age.cfg.sh                 > namelist_age_cfg
    #include CFCs namelist even if CFCs are not included
    has_config nemo      && . ${ctrl_file_dir}/namelist.nemo.cfc.ref.sh                 > namelist_cfc_ref
    has_config nemo      && . ${ctrl_file_dir}/namelist.nemo.cfc.cfg.sh                 > namelist_cfc_cfg
    # C-cycle - overwrite coupled nemo namelist
    has_config pisces tm5:co2  && \
        . ${ctrl_file_dir}/namelist.nemo-${nem_grid}-carboncycle.cfg.sh > namelist_cfg

    lucia=
    . ${ctrl_file_dir}/namcouple.sh > namcouple

    # -------------------------------------------------------------------------
    # *** LPJ-GUESS initial data
    # -------------------------------------------------------------------------
    if $(has_config lpjg)
    then
        # LPJG runtime rcfile - update with leg dates
        . ${ctrl_file_dir}/namelist.lpjg.sh > lpjg_steps.rc

        # determine lpjg scenario-name and co2-file middle-fix
        case $(echo ${ifs_cmip6_scenario} | tr '[:upper:]' '[:lower:]') in
            hist*)     lpjg_scen="ssp370"; lu_src="AIM"    ; lpjg_sco2_mfix="AIM-ssp370-1-2-1"            ; lu_file_posfix="2018_10_08.txt";;
            ssp1-1.9*) lpjg_scen="ssp119"; lu_src="IMAGE"  ; lpjg_sco2_mfix="IMAGE-ssp119-1-2-1"          ; lu_file_posfix="2019_03_13.txt";;
            ssp1-2.6*) lpjg_scen="ssp126"; lu_src="IMAGE"  ; lpjg_sco2_mfix="IMAGE-ssp126-1-2-1"          ; lu_file_posfix="2018_10_08.txt";;
            ssp2-4.5*) lpjg_scen="ssp245"; lu_src="MESSAGE"; lpjg_sco2_mfix="MESSAGE-GLOBIOM-ssp245-1-2-1"; lu_file_posfix="2018_10_08.txt";;
            ssp3-7.0*) lpjg_scen="ssp370"; lu_src="AIM"    ; lpjg_sco2_mfix="AIM-ssp370-1-2-1"            ; lu_file_posfix="2018_10_08.txt";;
            ssp4-3.4*) lpjg_scen="ssp434"; lu_src="GCAM"   ; lpjg_sco2_mfix="GCAM4-ssp434-1-2-1"            ; lu_file_posfix="2018_10_08.txt";;
            ssp5-3.4*) lpjg_scen="ssp534os"; lu_src="MAGPIE"; lpjg_sco2_mfix="REMIND-MAGPIE-ssp534-over-1-2-1"            ; lu_file_posfix="2019_05_10.txt";;
            ssp5-8.5*) lpjg_scen="ssp585"; lu_src="MAGPIE" ; lpjg_sco2_mfix="REMIND-MAGPIE-ssp585-1-2-1"  ; lu_file_posfix="2018_10_08.txt";;
            *)  error "Scenario ${ifs_cmip6_scenario} not defined for LPJ-GUESS" ;;
        esac

        lpjg_scenario_new="historical + $lpjg_sco2_mfix"
        lpjg_scenario_info=${run_dir}/lpjg_scenario.info

        if [ -f $lpjg_scenario_info ]
        then
            source $lpjg_scenario_info
            if [ "$lpjg_scenario_new" = "$lpjg_scenario" ]
            then
                lpjg_copy_rte=false
            else
                lpjg_copy_rte=true
            fi
        else
            lpjg_copy_rte=true
        fi

        # copy RTE only if necessary (at beginning of a run or when scenario changes)
        if $lpjg_copy_rte
        then
            # write info about installed scenarios to file
            echo "lpjg_scenario=\"historical + $lpjg_sco2_mfix\"" > $lpjg_scenario_info
            # set file prefixes depending on scenario
            lu_file_prefix="1850_2100_luh2_Hist_ScenarioMIP_UofMD"
            lu_file_midfix="2_1_f"

            lu_path="${ini_data_dir}/lpjg/landuse/${lpjg_res}/${lpjg_scen}"

            # copy and reference-link landuse,  gross transitions, crops, n-fertilisation
            for inp in lu gross crop nfert
            do
                if [ $inp == "crop" -o $inp == "nfert" ]
                then
                    lu_src_file="${lu_path}/${inp}_rfirr_${lu_file_prefix}_${lu_src}_${lpjg_scen}_${lu_file_midfix}_${lpjg_res}_${lu_file_posfix}"
                else
                    lu_src_file="${lu_path}/${inp}_${lu_file_prefix}_${lu_src}_${lpjg_scen}_${lu_file_midfix}_${lpjg_res}_${lu_file_posfix}"
                fi
                cp -f $lu_src_file ${run_dir}/landuse/${inp}_luh2.txt
                ln -fs $lu_src_file ${run_dir}/landuse/${inp}_luh2.txt.lnk
            done
            
            # nitrogen deposition files
            mkdir -p ${run_dir}/ndep
            for inp in drynhx2 drynoy2 wetnhx2 wetnoy2
            do
                ndep_src_file="${ini_data_dir}/lpjg/ndep/${lpjg_res}/${lpjg_scen}/${lpjg_scen}_${lpjg_res}_${inp}.nc"
                cp -f  $ndep_src_file ${run_dir}/ndep/${inp}.nc
                ln -fs  $ndep_src_file ${run_dir}/ndep/${inp}.nc.lnk
            done

            # concatenate historic and scenario (2015+) co2 concentration file
            # hist co2 file 
            lpjg_hco2_file="${ini_data_dir}/ifs/cmip6-data/mole-fraction-of-carbon-dioxide-in-air_input4MIPs_GHGConcentrations_CMIP_UoM-CMIP-1-2-0_gr1-GMNHSH_0000-2014.nc"
            # scenario co2 file 
            lpjg_sco2_file="${ini_data_dir}/ifs/cmip6-data/mole-fraction-of-carbon-dioxide-in-air_input4MIPs_GHGConcentrations_ScenarioMIP_UoM-${lpjg_sco2_mfix}_gr1-GMNHSH_2015-2500.nc"
            # combined file
            lpjg_co2_file="${run_dir}/mole_fraction_of_carbon_dioxide_in_air_input4MIPs_lpjg.nc"
            rm -f $lpjg_co2_file
            cdo mergetime $lpjg_hco2_file $lpjg_sco2_file $lpjg_co2_file
        fi

        # Populate or update LPJG run directories
        for (( n=1; n<=${lpjg_numproc}; n++ ))
        do
            # if run from scratch or number of procs has been extended
            if ! $leg_is_restart || [ ! -d ${run_dir}/run${n} ]
            then
                # Make output directories
                mkdir -p ${run_dir}/run${n}/output

                # Copy *.ins, lpjg_steps.rc and OASIS-MCT restart files
                cp ${run_dir}/*.ins ${run_dir}/run${n}

                # Copy output control files
                cp ${output_control_files_dir}/lpjg_cmip6_output.ins ${run_dir}/run${n}
                ln -s ${output_control_files_dir}/lpjg_cmip6_output.ins ${run_dir}/run${n}/lpjg_cmip6_output.ins.lnk

                cp ${ini_data_dir}/lpjg/oasismct/ghg*.txt ${run_dir}/run${n}
                cp ${ini_data_dir}/lpjg/oasismct/${lpjg_res}/ece_gridlist_${lpjg_res}.txt ${run_dir}/run${n}/ece_gridlist.txt
                ln -s ${ini_data_dir}/lpjg/oasismct/${lpjg_res}/ece_gridlist_${lpjg_res}.txt ${run_dir}/run${n}/ece_gridlist.txt.lnk

                # Data only needed by master
                if [ $n == 1 ]
                then
                    cp ${ini_data_dir}/lpjg/oasismct/${lpjg_res}/*.nc ${run_dir}
                    cp ${ini_data_dir}/lpjg/oasismct/lpjgv.txt ${run_dir}/run${n}
                fi
            fi
            # Refresh output-dirs after they hav been removed at end of the last leg
            mkdir -p ${run_dir}/run${n}/output/CMIP6
            mkdir -p ${run_dir}/run${n}/output/CRESCENDO
        done

        if $leg_is_restart
        then
            lpjg_restart_dir="restart/lpjg/$(printf %03d $((leg_number-1)))"
            lpjg_rst_state="${lpjg_restart_dir}/lpjg_state_${leg_start_date_yyyy}"
            if [ -d "$lpjg_rst_state" ]
            then
                ln -sf $lpjg_rst_state
            else
                echo "lpjg restart dir $lpjg_rst_state not available"
                exit -1
            fi
        fi
    fi


    # -------------------------------------------------------------------------
    # *** Create ICMCL file with vegetation fields
    #     not needed if LPJG is used with feedback
    # -------------------------------------------------------------------------
    tempfile=tmp.$$

    case ${ifs_veg_source} in
    "ifs" )
        # Vegetation from IFS (climatology)

        icmclfile=${ini_data_dir}/ifs/${ifs_grid}/climate/ICMCL_ONLY_VEG_PD

        # Create data for december, the year before the leg starts
        ${grib_set} \
            -s dataDate=$(printf "%04d" $((leg_start_date_yyyy-1)))1215 \
            ${icmclfile}-12 ICMCL${exp_name}INIT

        # Create data for all month in the years of the leg
        for (( y=${leg_start_date_yyyy} ; y<=${leg_end_date_yyyy} ; y++ ))
        do
            yy=$(printf "%04d" $y)
            for m in {1..12}
            do
                mm=$(printf "%02d" $m)
                ${grib_set} -s dataDate=${yy}${mm}15 ${icmclfile}-${mm} ${tempfile}
                cat ${tempfile} >> ICMCL${exp_name}INIT
            done
        done

        # Create data for january, the year after the leg ends
        ${grib_set} \
            -s dataDate=$(printf "%04d" $((leg_end_date_yyyy+1)))0115 \
            ${icmclfile}-01 ${tempfile}
        cat ${tempfile} >> ICMCL${exp_name}INIT
        ;;
    "era20c"|"cmip6"|"custom_"* )
        # Vegetation from a LPJG run (off-line or EC-Earth3-Veg)

        rm -f ICMCL${exp_name}INIT

        # Create data for all years of the leg, including one year
        # before and one year after
        for (( yr=leg_start_date_yyyy-1 ; yr<=leg_end_date_yyyy+1 ; yr+=1 ))
        do

            case ${ifs_veg_source} in
            'era20c' )
                # no scenario needed with era20c
                icmcl_scenario="" ;;
            'custom_'* )
                # no scenario implemented yet with custom_dir
                icmcl_scenario="" ;;
            'cmip6' )
                # select scenario, use SSP3-7.0 as default
                # if not otherwise specified
                icmcl_scenario="historical"
                if ( [ $ifs_cmip_fixyear -le 0 ] && [ $yr -ge 2015 ] ) || \
                     [ $ifs_cmip_fixyear -ge 2015 ]
                then
                    [[ ${ifs_cmip6_scenario} =~ ^SSP ]] \
                        && icmcl_scenario=${ifs_cmip6_scenario} \
                        || if [ ${ifs_covid19}  == TRUE ]
                           then
                               icmcl_scenario='SSP2-4.5'
                           else
                               icmcl_scenario='SSP3-7.0'
                           fi
                fi ;;
            esac
            
            if [ $ifs_cmip_fixyear -le 0 ] || [[ ${ifs_veg_source} == custom_* ]]
            then
                cat ${ini_data_dir}/ifs/${ifs_grid}/icmcl_${veg_version}/${icmcl_scenario}/icmcl_$yr.grb >> ICMCL${exp_name}INIT
            else
                # Fixed year forcing, requires cdo! (only when not using ifs_veg_source=custom_exp*)
                # If cdo is not available at runtime you need to fix proper
                # icmcl files beforehand and use them here
                cdo setyear,$yr ${ini_data_dir}/ifs/${ifs_grid}/icmcl_${veg_version}/${icmcl_scenario}/icmcl_${ifs_cmip_fixyear}.grb ${tempfile}
                cat ${tempfile} >> ICMCL${exp_name}INIT
            fi
        done
        ;;
    "none" )
        info "no ICMCL file is created"
        ;;
    * )
        error "Vegetation from ${ifs_veg_source} not implemented"
        ;;
    esac

    # Clean up
    rm -f ${tempfile}

    # -------------------------------------------------------------------------
    # *** Link the appropriate NEMO restart files of the previous leg
    # -------------------------------------------------------------------------
    if $leg_is_restart && $(has_config nemo)
    then
        ns=$(printf %08d $(( leg_start_sec / nem_time_step_sec - nem_restart_offset )))
        for (( n=0 ; n<nem_numproc ; n++ ))
        do
            np=$(printf %04d ${n})
            ln -fs ${exp_name}_${ns}_restart_oce_${np}.nc restart_oce_${np}.nc
            ln -fs ${exp_name}_${ns}_restart_ice_${np}.nc restart_ice_${np}.nc
            has_config pisces && \
                ln -fs ${exp_name}_${ns}_restart_trc_${np}.nc restart_trc_${np}.nc
        done

        # Make sure there are no global restart files
        # If links are found, they will be removed. We are cautious and do
        # _not_ remove real files! However, if real global restart files are
        # present, NEMO/LIM will stop because time stamps will not match.
        [ -h restart_oce.nc ] && rm restart_oce.nc
        [ -h restart_ice.nc ] && rm restart_ice.nc
        [ -h restart_trc.nc ] && rm restart_trc.nc
    fi

    # -------------------------------------------------------------------------
    # *** Remove some OASIS files of the previous leg
    # -------------------------------------------------------------------------
    if $leg_is_restart
    then
        rm -f anaisout_*
    fi

    # -------------------------------------------------------------------------
    # *** Remove any ccycle debug output files
    # -------------------------------------------------------------------------
    if ${ccycle_debug_fluxes} && $leg_is_restart && $(has_config tm5:co2)
    then
      if $(has_config lpjg)
      then
          rm -f GUE_{CNAT,CANT,CNPP}_*.nc run1/GUE_{CNAT,CANT,CNPP}_*.nc
          rm -f TM5_Land{CNAT,CANT,CNPP}_*.nc
      fi
      if $(has_config pisces)
      then
          rm -f O_CO2FLX_*.nc
          rm -f TM5_OceCFLX_*.nc
      fi
    fi

    # -------------------------------------------------------------------------
    # *** Restart sanity check before launch
    # -------------------------------------------------------------------------
    # This code must run before launch command don't put anything in between

    echo "Restart files sanity check before launch:"
    if $leg_is_restart  ; then
      # oasis
      for oasis_restart_file in $(ls restart/oasis/$(printf %03d $((leg_number)))/*); do
        [ -n "$( diff $(basename ${oasis_restart_file}) ${oasis_restart_file} -q )" ] && \
        cp -f ${oasis_restart_file} . || true
      done
      # ifs rcf
      rcf_restart_file=restart/ifs/$(printf %03d $((leg_number)))/rcf
      [ -n "$(diff $(basename ${rcf_restart_file}) ${rcf_restart_file} -q )" ] && \
      cp -f ${rcf_restart_file} . || true
    fi
    # -------------------------------------------------------------------------
    # *** End restart sanity check before launch
    # -------------------------------------------------------------------------
    # -------------------------------------------------------------------------
    # *** Start the run
    # -------------------------------------------------------------------------
    export DR_HOOK_IGNORE_SIGNALS='-1'
    export CPLNG='active'

    # Use the launch function from the platform configuration file
    has_config nemo && \
        cmd="${xio_numproc} ${xio_exe_file} -- \
             ${nem_numproc} ${nem_exe_file} -- \
             ${ifs_numproc} ${ifs_exe_file} -v ecmwf -e ${exp_name}" || \
        cmd="${ifs_numproc} ${ifs_exe_file} -v ecmwf -e ${exp_name}"

    has_config lpjg && cmd=${cmd}" -- ${lpjg_numproc} ${lpjg_exe_file} guess.ins -parallel"
    has_config tm5  && cmd=${cmd}" -- ${tm5_numproc}  ${tm5_exe_file} tm5-run.rc"
    has_config amip && cmd=${cmd}" -- ${amip_numproc} ${amip_exe_file}"
    has_config nemo && cmd=${cmd}" -- ${rnf_numproc} ${rnf_exe_file}" 

    t1=$(date +%s)
    launch $cmd
    t2=$(date +%s)

    tr=$(date -d "0 -$t1 sec + $t2 sec" +%T)

    # -------------------------------------------------------------------------
    # *** Check for signs of success
    #     Note the tests provide no guarantee that things went fine! They are
    #     just based on the IFS, NEMO and TM5 log files. More tests (e.g. checking
    #     restart files) could be implemented.
    # -------------------------------------------------------------------------

    # Checking for IFS success
    if [ -f ifs.stat ]
    then
        if [ "$(awk 'END{print $3}' ifs.stat)" == "CNT0" ]
        then
            info "Leg successfully completed according to IFS log file 'ifs.stat'."
        else
            error "Leg not completed according to IFS log file 'ifs.stat'."
        fi
    else
        error "IFS log file 'ifs.stat' not found after run."
    fi

    # Check for NEMO success
    if $(has_config nemo)
    then
        if [ -f ocean.output ]
        then
            if [ "$(sed -n '/New day/h; ${g;s:.*\([0-9/]\{10\}\).*:\1:;p;}' ocean.output)" == "$(date -u -d "${leg_end_date} - 1 day" +%Y/%m/%d)" ]
            then
                info "Leg successfully completed according to NEMO log file 'ocean.output'."
            else
                error "Leg not completed according to NEMO log file 'ocean.output'."
            fi
        else
            error "NEMO log file 'ocean.output' not found after run."
        fi
    fi

    # Check for TM5 success
    if $(has_config tm5)
    then
        if [ -f tm5.ok ]
        then
            info "Leg successfully completed according to existing TM5 file 'tm5.ok'."
        else
            error "Leg not completed according to non-existing TM5 file 'tm5.ok'."
        fi
    fi

    # -------------------------------------------------------------------------
    # *** Post-process initial conditions saved during the run if requested
    # -------------------------------------------------------------------------
    ${do_save_ic} && save_ic_postproc

    # -------------------------------------------------------------------------
    # *** Move IFS output files to archive directory
    # -------------------------------------------------------------------------
    outdir="output/ifs/$(printf %03d $((leg_number)))"
    mkdir -p ${outdir}

    prv_leg=$(printf %03d $((leg_number-1)))

    # This takes care of a special IFS feature: The output for the last time
    # step of each leg is written at the first time step of the new leg. The
    # following code makes sure that the output is appended to the appropriate
    # file. Since GRIB files are just streams, its done with a simple cat
    # command.
    for f in ICMSH${exp_name}+?????? ICMGG${exp_name}+??????
    do
        if [ -f output/ifs/${prv_leg}/${f} ]
        then
            cat ${f} >> output/ifs/${prv_leg}/${f}
            rm -f ${f}
        else
            mv ${f} ${outdir}
        fi
    done

    # -------------------------------------------------------------------------
    # *** Move NEMO output files to archive directory
    # -------------------------------------------------------------------------
    if $(has_config nemo)
    then
        outdir="output/nemo/$(printf %03d $((leg_number)))"
        mkdir -p ${outdir}

        for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar \
                 grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D \
                 grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum \
                 grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D \
                 zoom_700_sum zoom_300_sum zoom_2000_sum
        do
            for f in ${exp_name}_*_????????_????????_*${v}.nc
            do
                test -f $f && mv $f $outdir/
            done
        done
    fi

    # -------------------------------------------------------------------------
    # *** Move LPJ-GUESS output files to archive directory
    # -------------------------------------------------------------------------
    if $(has_config lpjg)
    then
        outdir="output/lpjg/$(printf %03d $((leg_number)))"
        if [ -d ${outdir} ]
        then
            rm -rf  ${outdir}
        fi
        mkdir -p ${outdir}

        # LPJG run directories
        # concatenate *.out (or compressed *.out.gz) files from each run* into output dir
        flist=$(cd ${run_dir}/run1/output && find *.out.gz -type f 2>/dev/null || true)
        if [ "$flist" = "" ]
        then
            lpjg_compress_output=false
            flist=$(cd ${run_dir}/run1/output && find *.out -type f 2>/dev/null)
        else
            lpjg_compress_output=true
        fi

        mkdir ${outdir}/CMIP6

        for (( n=1; n<=${lpjg_numproc}; n++ ))
        do
            for ofile in $flist
            do
                if $lpjg_compress_output
                then
                    [ $n == 1 ] && gzip -c ${run_dir}/run${n}/output/`basename ${ofile} .gz`.hdr > ${outdir}/$ofile
                    cat ${run_dir}/run${n}/output/${ofile} >> ${outdir}/$ofile
                else
                    if (( n == 1 ))
                    then
                        cat ${run_dir}/run${n}/output/${ofile} > ${outdir}/$ofile
                    else
                        awk '(FNR!=1){print $0}' ${run_dir}/run${n}/output/${ofile} >> ${outdir}/$ofile
                    fi
                fi
            done
            rm -rf ${run_dir}/run${n}/output
        done
        
        # move monthly file if available
        if [ -f ${run_dir}/LPJ-GUESS_monthlyoutput.txt ]
        then
            mv ${run_dir}/LPJ-GUESS_monthlyoutput.txt ${outdir}
        fi
    fi

    # -------------------------------------------------------------------------
    # *** Move TM5 output files to archive directory
    # -------------------------------------------------------------------------
    if $(has_config tm5)
    then
        outdir="output/tm5/$(printf %03d $((leg_number)))"
        mkdir -p ${outdir}

        set +e
        mv budget_??????????_??????????_global.hdf      ${outdir}
        mv j_statistics_??????????_??????????.hdf       ${outdir}
        mv mmix_??????????_??????????_glb???x???.hdf    ${outdir}
        mv aerocom?_TM5_*_????????_daily.nc             ${outdir}
        mv aerocom?_TM5_*_??????_monthly.nc             ${outdir}
        mv AOD_????_??_??.nc                            ${outdir}
        mv -f TM5MP_${exp_name}_griddef.nc              ${outdir}
        mv TM5MP_${exp_name}_TP_????_??_??.nc           ${outdir}
        mv TM5MP_${exp_name}_vmr3_????_??_??.nc         ${outdir}
        mv general_TM5_${exp_name}_??????????_hourly.nc ${outdir}
        mv general_TM5_${exp_name}_??????_monthly.nc    ${outdir}
        mv *EC-Earth3-*_${exp_name}_*.nc                ${outdir}
        set -e

        # move profiling files if any
        if [ "$(ls -A ${run_dir}/tm5_profile)" ]
        then
            outdir="output/tm5/profile_$(printf %03d $((leg_number)))"
            mkdir -p ${outdir}

            for f in ${run_dir}/tm5_profile/*
            do
                test -f ${f} && mv $f ${outdir}
            done
        fi
    fi

    # -------------------------------------------------------------------------
    # *** Move IFS restart files to archive directory
    # -------------------------------------------------------------------------
    if $leg_is_restart
    then
        outdir="restart/ifs/$(printf %03d $((leg_number)))"
        mkdir -p ${outdir}

        # Figure out the time part of the restart files (cf. CTIME on rcf files)
        # NOTE: Assuming that restarts are at full days (time=0000) only!
        nd="$(printf %06d $((leg_start_sec/(24*3600))))0000"

        mv srf${nd}.???? ${outdir}

    fi

    # -------------------------------------------------------------------------
    # *** Move ccycle debug output files to archive directory
    # -------------------------------------------------------------------------
    if ${ccycle_debug_fluxes} && $(has_config tm5:co2)
    then
      outdir="output/tm5/$(printf %03d $((leg_number)))"
      mkdir -p ${outdir}
      if $(has_config lpjg)
      then
          for f in CNAT CANT CNPP ; do
              mv TM5_Land${f}_*.nc ${outdir}
              rm -f GUE_${f}_*.nc run1/GUE_${f}_*.nc
              #gf=`ls -1 GUE_${f}_*.nc | head -n 1`
              #cdo mergetime ${gf} run1/${gf} ${outdir}/${gf}
          done
      fi
      if $(has_config pisces)
      then
          mv TM5_OceCFLX_*.nc ${outdir}
          rm -f O_CO2FLX_*.nc
          #mv O_CO2FLX_*.nc ${outdir}
      fi
    fi

    # -------------------------------------------------------------------------
    # *** Move LPJ-GUESS restart files to archive directory
    # -------------------------------------------------------------------------
    if $(has_config lpjg)
    then
        outdir="restart/lpjg/$(printf %03d $((leg_number)))"
        if [ -d ${outdir} ]
        then
            rm -rf  ${outdir}
        fi
        mkdir -p ${outdir}

        state_dir="./lpjg_state_$(printf %04d $((leg_end_date_yyyy)))"
        mv ${state_dir} ${outdir}
        # LPJG writes into run1 dir, so mv to main rundir
        mv -f run1/lpjgv.nc .
        has_config tm5:co2 lpjg && mv -f run1/rlpjg.nc .

        # remove restart link
        if $leg_is_restart
        then
            old_state_dir="./lpjg_state_$(printf %04d $((leg_start_date_yyyy)))"
            if [ -L $old_state_dir ]
            then
                rm -f "$old_state_dir"
            fi
        fi
    fi

    # -------------------------------------------------------------------------
    # *** Move NEMO restart files to archive directory
    # -------------------------------------------------------------------------
    if $leg_is_restart && $(has_config nemo)
    then
        outdir="restart/nemo/$(printf %03d $((leg_number)))"
        mkdir -p ${outdir}

        ns=$(printf %08d $(( leg_start_sec / nem_time_step_sec - nem_restart_offset )))
        for f in oce ice
        do
            mv ${exp_name}_${ns}_restart_${f}_????.nc ${outdir}
        done

        if has_config pisces
        then
            mv ${exp_name}_${ns}_restart_trc_????.nc ${outdir}
        fi
    fi

    # -------------------------------------------------------------------------
    # *** Move TM5 restart file to archive directory
    # -------------------------------------------------------------------------
    if $leg_is_restart && $(has_config tm5)
    then
        outdir="restart/tm5/$(printf %03d $((leg_number)))"
        mkdir -p ${outdir}

        case ${tm5_istart} in
            33|32) f=TM5_restart_${leg_start_date_yyyymmdd}_0000_glb300x200.nc
                ;;
            31) f=save_${leg_start_date_yyyymmdd}00_glb300x200.hdf
                ;;
        esac

        mv $f ${outdir}
    fi

    # -------------------------------------------------------------------------
    # *** Copy OASIS restart files to archive directory
    #     NOTE: These files are copied and not moved as they are used in the
    #           next leg!
    #           Note also that the OASIS restart files present at the end of
    #           the leg correspond to the start of the next leg!
    # -------------------------------------------------------------------------
    outdir="restart/oasis/$(printf %03d $((leg_number+1)))"
    mkdir -p ${outdir}

    for f in ${oas_rst_files}
    do
        test -f ${f} && cp ${f} ${outdir}
    done

    # -------------------------------------------------------------------------
    # *** Copy rcf files to the archive directory (of the next leg!)
    # -------------------------------------------------------------------------
    outdir="restart/ifs/$(printf %03d $((leg_number+1)))"
    mkdir -p ${outdir}

    for f in rcf
    do
        test -f ${f} && cp ${f} ${outdir}
    done

    # -------------------------------------------------------------------------
    # *** Move log files to archive directory
    # -------------------------------------------------------------------------
    outdir="log/$(printf %03d $((leg_number)))"
    mkdir -p ${outdir}

    for f in \
        ifs.log ifs.stat fort.4 ocean.output \
        time.step solver.stat guess.log run1/guess0.log \
        amip.log namelist.amip \
        nout.000000 debug.root.?? debug.??.?????? lucia.??.?????? \
        ctm.tm5.log.0
    do
        test -f ${f} && mv ${f} ${outdir}
    done
    has_config pisces && cp ocean.carbon ${outdir}

    for f in ctm.tm5.log.*
    do
        if [[ -f ${f} ]]
        then
            [[ -s ${f} ]] && mv ${f} ${outdir} || \rm -f ${f}
        fi
    done

    # -------------------------------------------------------------------------
    # *** Write the restart control file
    # -------------------------------------------------------------------------

    # Compute CPMIP performance
    sypd="$(cpmip_sypd $leg_length_sec $(($t2 - $t1)))"
    ncores=0
    has_config nemo      && (( ncores+=${nem_numproc}  )) || :
    has_config ifs       && (( ncores+=${ifs_numproc}  )) || :
    has_config xios      && (( ncores+=${xio_numproc}  )) || :
    has_config rnfmapper && (( ncores+=${rnf_numproc}  )) || :
    has_config lpjg      && (( ncores+=${lpjg_numproc} )) || :
    has_config tm5       && (( ncores+=${tm5_numproc}  )) || :
    has_config amip      && (( ncores+=${amip_numproc} )) || :
    chpsy="$(cpmip_chpsy  $leg_length_sec $(($t2 - $t1)) $ncores)"

    echo "#"                                             | tee -a ${ece_info_file}
    echo "# Finished leg at `date '+%F %T'` after ${tr} (hh:mm:ss)" \
                                                         | tee -a ${ece_info_file}
    echo "# CPMIP performance: $sypd SYPD   $chpsy CHPSY"| tee -a ${ece_info_file}
    echo "leg_number=${leg_number}"                      | tee -a ${ece_info_file}
    echo "leg_start_date=\"${leg_start_date}\""          | tee -a ${ece_info_file}
    echo "leg_end_date=\"${leg_end_date}\""              | tee -a ${ece_info_file}

    # Need to reset force_run_from_scratch in order to avoid destroying the next leg
    force_run_from_scratch=false

done # loop over legs
+ (( 1 ))
+ (( run_num_legs>0  ))
+ true
+ leg_is_restart=false
+ leg_start_date='Mon, 01 Nov 1993 00:00:00 +0000'
+ leg_number=1
+ '[' -n '1 month' ']'
date -uR -d "${leg_start_date} + ${rst_freq}"
++ date -uR -d 'Mon, 01 Nov 1993 00:00:00 +0000 + 1 month'
+ leg_end_date='Wed, 01 Dec 1993 00:00:00 +0000'
+ has_config lpjg
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lpjg == any ']'
+ [[ lpjg == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ ((  __f  ))
+ return 1
+ [[ FALSE == \T\R\U\E ]]
date -u -d "${leg_end_date}" +%s
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000' +%s
date -u -d "${leg_start_date}" +%s
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%s
+ leg_length_sec=2592000
date -u -d "${leg_start_date}" +%s
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%s
date -u -d "${run_start_date}" +%s
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%s
+ leg_start_sec=0
date -u -d "${leg_end_date}" +%s
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000' +%s
date -u -d "${run_start_date}" +%s
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%s
+ leg_end_sec=2592000
date -u -d "${leg_start_date}" +%Y%m%d
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%Y%m%d
+ leg_start_date_yyyymmdd=19931101
date -u -d "${leg_start_date}" +%Y
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%Y
+ leg_start_date_yyyy=1993
date -u -d "${leg_end_date}" +%Y
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000' +%Y
+ leg_end_date_yyyy=1993
+ '[' 2592000 -le 0 ']'
+ do_save_ic=false
+ save_ic_custom=false
+ has_config save_ic
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' save_ic == any ']'
+ [[ save_ic == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ save_ic ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ save_ic ]]
+ for __m in '$config'
+ [[ lim3 =~ save_ic ]]
+ for __m in '$config'
+ [[ rnfmapper =~ save_ic ]]
+ for __m in '$config'
+ [[ xios:detached =~ save_ic ]]
+ for __m in '$config'
+ [[ oasis =~ save_ic ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ save_ic ]]
+ [[ save_ic:end_leg =~ save_ic ]]
+ __f=1
+ ((  __f  ))
+ return 0
+ save_ic_get_config
+ do_save_ic=false
+ save_ic_custom=false
has_config save_ic
++ has_config save_ic
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' save_ic == any ']'
++ [[ save_ic == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ save_ic ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ save_ic ]]
++ for __m in '$config'
++ [[ lim3 =~ save_ic ]]
++ for __m in '$config'
++ [[ rnfmapper =~ save_ic ]]
++ for __m in '$config'
++ [[ xios:detached =~ save_ic ]]
++ for __m in '$config'
++ [[ oasis =~ save_ic ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ save_ic ]]
++ [[ save_ic:end_leg =~ save_ic ]]
++ __f=1
++ ((  __f  ))
++ return 0
has_config save_ic:end_leg
++ has_config save_ic:end_leg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' save_ic:end_leg == any ']'
++ [[ save_ic:end_leg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ save_ic ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ save_ic ]]
++ for __m in '$config'
++ [[ lim3 =~ save_ic ]]
++ for __m in '$config'
++ [[ rnfmapper =~ save_ic ]]
++ for __m in '$config'
++ [[ xios:detached =~ save_ic ]]
++ for __m in '$config'
++ [[ oasis =~ save_ic ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ save_ic ]]
++ [[ save_ic:end_leg =~ end_leg ]]
++ __f=1
++ ((  __f  ))
++ return 0
+ do_save_ic=true
+ save_ic_date_offset=("+ ${leg_length_sec} sec")
+ false
+ true
+ save_ic_define_vars
+ true
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
+ [[ -z '' ]]
+ save_ic_ifs_lastout_orig=false
+ save_ic_ifs_lastout=false
+ '[' 1 -gt 9 ']'
+ (( i=0 ))
+ (( i< 1 ))
date -u -d "${leg_start_date} ${save_ic_date_offset[$i]}" +%Y%m%d
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000 + 2592000 sec' +%Y%m%d
+ save_ic_date1[$i]=19931201
date -uR -d "${save_ic_date1[$i]}"
++ date -uR -d 19931201
+ save_ic_date[$i]='Wed, 01 Dec 1993 00:00:00 +0000'
date -d "${save_ic_date[$i]}" +%s
++ date -d 'Wed, 01 Dec 1993 00:00:00 +0000' +%s
date -d "${run_start_date}" +%s
++ date -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%s
+ save_ic_sec[$i]=2592000
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
+ save_ic_day[$i]=30
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
printf %06d ${save_ic_day[$i]}
++ printf %06d 30
+ save_ic_ppt_files[$i]=ppt0000300000
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ save_ic_nemo_ts[$i]=2880
+ '[' 2592000 -eq 0 ']'
+ '[' 2592000 -eq 0 ']'
+ '[' 2592000 -eq 2592000 ']'
has_config ifs
++ has_config ifs
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ return 0
+ false
+ ifs_lastout=true
+ save_ic_ifs_lastout=true
+ (( i++  ))
+ (( i< 1 ))
+ false
ls * >& /dev/null
++ ls '*'
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf .
basename ${ifs_exe_file}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf ifsmaster-ecconf.lnk
has_config amip
++ has_config amip
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' amip == any ']'
++ [[ amip == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ amip ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ amip ]]
++ for __m in '$config'
++ [[ lim3 =~ amip ]]
++ for __m in '$config'
++ [[ rnfmapper =~ amip ]]
++ for __m in '$config'
++ [[ xios:detached =~ amip ]]
++ for __m in '$config'
++ [[ oasis =~ amip ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ amip ]]
++ ((  __f  ))
++ return 1
has_config nemo
++ has_config nemo
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo == any ']'
++ [[ nemo == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe .
basename ${nem_exe_file}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe nemo.exe.lnk
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe .
basename ${rnf_exe_file}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe runoff-mapper.exe.lnk
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe .
basename ${xio_exe_file}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe xios_server.exe.lnk
has_config lpjg
++ has_config lpjg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ ((  __f  ))
++ return 1
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/19931101/ICMGGECE3INIUA ICMGGt0niINIUA
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/19931101/ICMSHECE3INIT ICMSHt0niINIT
+ rm -f ICMGGt0niINIT
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/19931101/ICMGGECE3INIT ICMGGt0niINIT
+ tempfile=tmp.242402
date -u -d "$run_start_date" +%Y%m%d
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' +%Y%m%d
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19931101 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/bare_soil_albedos.grb tmp.242402
+ cat tmp.242402
+ rm -f tmp.242402
+ false
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_12021 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_12042 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_12063 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_12106 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_12213 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2021 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2042 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2063 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2106 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2170 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2213 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtable_2426 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2063 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2095 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2159 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2255 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2319 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2511 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2639 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/rtables/rtablel_2799 .
has_config atmnudg
++ has_config atmnudg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' atmnudg == any ']'
++ [[ atmnudg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atmnudg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atmnudg ]]
++ for __m in '$config'
++ [[ lim3 =~ atmnudg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atmnudg ]]
++ for __m in '$config'
++ [[ xios:detached =~ atmnudg ]]
++ for __m in '$config'
++ [[ oasis =~ atmnudg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atmnudg ]]
++ ((  __f  ))
++ return 1
+ '[' '!' -f /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/pptdddddd0600 ']'
+ mkdir postins
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/ppt0000000000 /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/pptdddddd0600 postins/
+ '[' -f postins/pptdddddd0600 ']'
+ ln -s pptdddddd0600 postins/pptdddddd0000
+ ln -s pptdddddd0600 postins/pptdddddd1200
+ ln -s pptdddddd0600 postins/pptdddddd1800
+ '[' -f postins/pptdddddd0300 ']'
+ /bin/ls -1 postins/ppt0000000000 postins/pptdddddd0000 postins/pptdddddd0600 postins/pptdddddd1200 postins/pptdddddd1800
has_config lpjg
++ has_config lpjg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ ((  __f  ))
++ return 1
has_config nemo
++ has_config nemo
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo == any ']'
++ [[ nemo == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/bathy_meter.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/bathy_meter.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/coordinates.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/coordinates.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/ahmcoef.nc ']'
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/K1rowdrg.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/K1rowdrg.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/M2rowdrg.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/M2rowdrg.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mask_itf.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mask_itf.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/decay_scale_bot.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/decay_scale_bot.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/decay_scale_cri.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/decay_scale_cri.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_bot.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_bot.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_cri.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_cri.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_pyc.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/mixing_power_pyc.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/runoff_depth.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/runoff_depth.nc
+ for f in bathy_meter.nc coordinates.nc ahmcoef.nc K1rowdrg.nc M2rowdrg.nc mask_itf.nc decay_scale_bot.nc decay_scale_cri.nc mixing_power_bot.nc mixing_power_cri.nc mixing_power_pyc.nc runoff_depth.nc subbasins.nc
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/subbasins.nc ']'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/subbasins.nc
+ for f in bathy_meter.nc subbasins.nc
+ mkdir -p output/nemo/ofx-data
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/bathy_meter.nc ']'
+ cp -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/bathy_meter.nc output/nemo/ofx-data/
+ for f in bathy_meter.nc subbasins.nc
+ mkdir -p output/nemo/ofx-data
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/subbasins.nc ']'
+ cp -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/ORCA025L75/subbasins.nc output/nemo/ofx-data/
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/Goutorbe_ghflux.nc
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/initial/weights_Goutorbe1_2_orca025_bilinear.nc
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/climatology/ORCA025L75/sali_ref_clim_monthly.nc
has_config nemo:start_from_restart
++ has_config nemo:start_from_restart
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo:start_from_restart == any ']'
++ [[ nemo:start_from_restart == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ start_from_restart ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ ls -U /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/restart_ice.nc /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/restart_oce.nc
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/restart_ice.nc /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/restart_oce.nc ./
has_config nemo:ocenudg
++ has_config nemo:ocenudg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo:ocenudg == any ']'
++ [[ nemo:ocenudg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ ocenudg ]]
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 1
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/iodef.xml.sh
# Find out if we run attached or detached (default is detached)
has_config xios:attached && using_server=false || using_server=true
++ has_config xios:attached
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' xios:attached == any ']'
++ [[ xios:attached == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ xios ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ xios ]]
++ for __m in '$config'
++ [[ lim3 =~ xios ]]
++ for __m in '$config'
++ [[ rnfmapper =~ xios ]]
++ for __m in '$config'
++ [[ xios:detached =~ xios ]]
++ [[ xios:detached =~ attached ]]
++ for __m in '$config'
++ [[ oasis =~ xios ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ xios ]]
++ ((  __f  ))
++ return 1
++ using_server=true
has_config xios:detached && using_server=true
++ has_config xios:detached
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' xios:detached == any ']'
++ [[ xios:detached == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ xios ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ xios ]]
++ for __m in '$config'
++ [[ lim3 =~ xios ]]
++ for __m in '$config'
++ [[ rnfmapper =~ xios ]]
++ for __m in '$config'
++ [[ xios:detached =~ xios ]]
++ [[ xios:detached =~ detached ]]
++ __f=1
++ for __m in '$config'
++ [[ oasis =~ xios ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ xios ]]
++ ((  __f  ))
++ return 0
++ using_server=true

# Find out if we are using OASIS and set using_oasis accordingly
has_config oasis && using_oasis=true || using_oasis=false
++ has_config oasis
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' oasis == any ']'
++ [[ oasis == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ oasis ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ oasis ]]
++ for __m in '$config'
++ [[ lim3 =~ oasis ]]
++ for __m in '$config'
++ [[ rnfmapper =~ oasis ]]
++ for __m in '$config'
++ [[ xios:detached =~ oasis ]]
++ for __m in '$config'
++ [[ oasis =~ oasis ]]
++ [[ oasis =~ oasis ]]
++ __f=1
++ for __m in '$config'
++ [[ save_ic:end_leg =~ oasis ]]
++ ((  __f  ))
++ return 0
++ using_oasis=true

# Buffer allocation mode for XIOS2, either "memory" or "performance". In
# "memory" mode, XIOS will try to use buffers as small as possible. In
# "performance" mode, XIOS will ensure that all active fields can be buffered
# without flushes. This is default since it allows more asynchronism and thus
# better performance at the cost of being quite memory hungry
optimal_buffer_size="performance"
++ optimal_buffer_size=performance

cat << EOF
<?xml version="1.0"?>
<simulation> 

<!-- ============================================================================================ -->
<!-- XIOS context                                                                                 -->
<!-- ============================================================================================ -->

  <context id="xios" >

      <variable_definition>
	
	  <variable id="info_level"                type="int">5</variable>

	  <variable id="using_server"              type="bool">$using_server</variable>
	  <variable id="using_oasis"               type="bool">$using_oasis</variable>
	  <variable id="oasis_codes_id"            type="string" >oceanx</variable>

	  <variable id="optimal_buffer_size"       type="string" >$optimal_buffer_size</variable>
	
      </variable_definition>
  </context>

<!-- ============================================================================================ -->
<!-- NEMO  CONTEXT add and suppress the components you need                                       -->
<!-- ============================================================================================ -->

  <context id="nemo" src="./context_nemo.xml"/>       <!--  NEMO       -->

</simulation>
EOF
++ cat
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/context_nemo.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/domain_def_nemo.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/axis_def_nemo.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/grids_def_nemo.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/field_def_nemo-lim.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/field_def_nemo-opa.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/field_def_nemo-pisces.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/field_def_nemo-inerttrc.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/file_def_nemo-lim3.xml file_def_nemo-lim.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/file_def_nemo-opa.xml
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni//auto-ecearth3/outclass/reduced/file_def_nemo-pisces.xml
+ '[' -f /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/xios/ORCA025/coordinates_xios.nc ']'
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/xios/ORCA025/coordinates_xios.nc ./
has_config pisces
++ has_config pisces
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ ((  __f  ))
++ return 1
+ ln -fs /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/nemo/cfc/CFCs_CDIAC_extension_1637_2019.dat CFCs_CDIAC.dat
has_config pisces:start_from_restart
++ has_config pisces:start_from_restart
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' pisces:start_from_restart == any ']'
++ [[ pisces:start_from_restart == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ ((  __f  ))
++ return 1
+ has_config rnfmapper
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' rnfmapper == any ']'
+ [[ rnfmapper == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ rnfmapper ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
+ for __m in '$config'
+ [[ lim3 =~ rnfmapper ]]
+ for __m in '$config'
+ [[ rnfmapper =~ rnfmapper ]]
+ [[ rnfmapper =~ rnfmapper ]]
+ __f=1
+ for __m in '$config'
+ [[ xios:detached =~ rnfmapper ]]
+ for __m in '$config'
+ [[ oasis =~ rnfmapper ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ rnfmapper ]]
+ ((  __f  ))
+ return 0
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/runoff-mapper/runoff_maps.nc
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/cf_name_table.txt
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ oas_grid_dir=/gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025
+ mycp=cp
+ has_config amip
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ ((  __f  ))
+ return 1
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/areas.nc
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/grids.nc
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/masks.nc
+ case ${ifs_res_hor} in
+ oas_agrd=256
has_config nemo
++ has_config nemo
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo == any ']'
++ [[ nemo == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ case ${nem_res_hor} in
+ oas_ogrd=Ot25
+ true
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_A256_to_Ot25_GAUSWGT.nc
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_A256_to_Ou25_GAUSWGT.nc
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_A256_to_Ov25_GAUSWGT.nc
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_Ot25_to_L256_GAUSWGT.nc
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_R256_to_RnfA_GAUSWGT.nc
+ for f in '${oas_grid_dir}/rmp_????_to_????_GAUSWGT.nc'
+ ln -s /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rmp_RnfO_to_Ot25_GAUSWGT.nc
has_config ifs nemo
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ for f in '${oas_rst_ifs_nemo}'
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rst/rstas.nc .
+ for f in '${oas_rst_ifs_nemo}'
+ cp /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/oasis/T511-ORCA025/rst/rstos.nc .
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
has_config nemo:ocenudg
++ has_config nemo:ocenudg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo:ocenudg == any ']'
++ [[ nemo:ocenudg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ ocenudg ]]
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 1
has_config nemo:surfresto
++ has_config nemo:surfresto
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo:surfresto == any ']'
++ [[ nemo:surfresto == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ surfresto ]]
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 1
has_config nemo:elpin
++ has_config nemo:elpin
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' nemo:elpin == any ']'
++ [[ nemo:elpin == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ elpin ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
+ '[' '!' -f coordinates_xios.nc ']'
+ jpns=($(${ecearth_src_dir}/util/ELPiN/ELPiNv2.cmd ${nem_numproc}))
${ecearth_src_dir}/util/ELPiN/ELPiNv2.cmd ${nem_numproc}
++ /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/util/ELPiN/ELPiNv2.cmd 1392
+ info 'nemo domain decompostion from ELpIN: 1391' 48 39
+ echo '*II* nemo domain decompostion from ELpIN: 1391' 48 39
+ nem_numproc=1391
+ nem_jpni=48
+ nem_jpnj=39
+ true
+ save_ic_prepare_output
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ nemo_stocklist=
+ (( i=0 ))
+ (( i< 1 ))
+ '[' 2880 -ne -1 ']'
+ nemo_stocklist+=2880,
+ (( i++  ))
+ (( i< 1 ))
+ nemo_stocklist+=2880,
+ (( i=1 ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+=0,
+ (( i++  ))
+ (( i<9  ))
+ nemo_stocklist+='
'
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
+ save_ic_ppt_filename=pptdddddd0000_save_ic
+ save_ic_ppt_ifile=pptdddddd0000
+ save_ic_MFP2DF_param_ids=129,152
+ save_ic_MFPPHY_param_ids=139,170,183,236,39,40,41,42,141,198,235,31,238,32,33,34,35,36,37,38,148,172,173,174,15,17,16,18,66,67,74,43,160,161,162,163,234,28,27,30,29
+ save_ic_filter_param_ids=
grep NFPPHY postins/$save_ic_ppt_ifile | sed -e 's/^\s*NFPPHY\s*=\s*//' -e 's/[,]$//'
++ grep NFPPHY postins/pptdddddd0000
++ sed -e 's/^\s*NFPPHY\s*=\s*//' -e 's/[,]$//'
+ NFPPHY=28
sed -e '1h;2,$H;$!d;g' -re 's/.*MFPPHY *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//' <postins/$save_ic_ppt_ifile
++ sed -e '1h;2,$H;$!d;g' -re 's/.*MFPPHY *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//'
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228
+ [[ 033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228 == '' ]]
grep NFP2DF postins/$save_ic_ppt_ifile | sed -e 's/^\s*NFP2DF\s*=\s*//' -e 's/[,]$//'
++ grep NFP2DF postins/pptdddddd0000
++ sed -e 's/^\s*NFP2DF\s*=\s*//' -e 's/[,]$//'
+ NFP2DF=2
sed -e '1h;2,$H;$!d;g' -re 's/.*MFP2DF *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//' <postins/$save_ic_ppt_ifile
++ sed -e '1h;2,$H;$!d;g' -re 's/.*MFP2DF *=([0-9,\. \n]+).*/\1/' -e 's/[ \n]//g' -e 's/,$//'
+ MFP2DF=129,152
+ [[ 129,152 == '' ]]
+ IFS=,
+ old_MFPPHY_params=(${MFPPHY})
+ old_MFP2DF_params=(${MFP2DF})
+ new_MFPPHY_params=(${save_ic_MFPPHY_param_ids})
+ new_MFP2DF_params=(${save_ic_MFP2DF_param_ids})
+ unset IFS
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 139
+ new_param_id=139
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 139 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 139 ']'
+ false
+ NFPPHY=29
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139
+ save_ic_filter_param_ids=139,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 170
+ new_param_id=170
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 170 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 170 ']'
+ false
+ NFPPHY=30
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170
+ save_ic_filter_param_ids=139,170,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 183
+ new_param_id=183
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 183 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 183 ']'
+ false
+ NFPPHY=31
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183
+ save_ic_filter_param_ids=139,170,183,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 236
+ new_param_id=236
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 236 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 236 ']'
+ false
+ NFPPHY=32
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236
+ save_ic_filter_param_ids=139,170,183,236,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 39
+ new_param_id=039
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 039 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 039 ']'
+ false
+ NFPPHY=33
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039
+ save_ic_filter_param_ids=139,170,183,236,039,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 40
+ new_param_id=040
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 040 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 040 ']'
+ false
+ NFPPHY=34
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040
+ save_ic_filter_param_ids=139,170,183,236,039,040,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 41
+ new_param_id=041
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 041 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 041 ']'
+ false
+ NFPPHY=35
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 42
+ new_param_id=042
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 042 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 042 ']'
+ false
+ NFPPHY=36
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 141
+ new_param_id=141
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 141 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 141 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 141 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 141 ']'
+ found=true
+ break
+ true
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 198
+ new_param_id=198
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 198 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 198 ']'
+ false
+ NFPPHY=37
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 235
+ new_param_id=235
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 235 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 235 ']'
+ false
+ NFPPHY=38
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 31
+ new_param_id=031
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 031 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 031 ']'
+ false
+ NFPPHY=39
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 238
+ new_param_id=238
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 238 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 238 ']'
+ false
+ NFPPHY=40
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 32
+ new_param_id=032
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 032 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 032 ']'
+ false
+ NFPPHY=41
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 33
+ new_param_id=033
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 033 ']'
+ found=true
+ break
+ true
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 34
+ new_param_id=034
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 034 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 034 ']'
+ found=true
+ break
+ true
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 35
+ new_param_id=035
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 035 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 035 ']'
+ false
+ NFPPHY=42
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 36
+ new_param_id=036
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 036 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 036 ']'
+ false
+ NFPPHY=43
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 37
+ new_param_id=037
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 037 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 037 ']'
+ false
+ NFPPHY=44
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 38
+ new_param_id=038
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 038 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 038 ']'
+ false
+ NFPPHY=45
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 148
+ new_param_id=148
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 148 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 148 ']'
+ false
+ NFPPHY=46
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 172
+ new_param_id=172
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 172 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 172 ']'
+ found=true
+ break
+ true
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 173
+ new_param_id=173
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 173 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 173 ']'
+ false
+ NFPPHY=47
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 174
+ new_param_id=174
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 174 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 174 ']'
+ false
+ NFPPHY=48
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 15
+ new_param_id=015
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 015 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 015 ']'
+ false
+ NFPPHY=49
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 17
+ new_param_id=017
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 017 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 017 ']'
+ false
+ NFPPHY=50
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 16
+ new_param_id=016
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 016 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 016 ']'
+ false
+ NFPPHY=51
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 18
+ new_param_id=018
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 018 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 018 ']'
+ false
+ NFPPHY=52
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 66
+ new_param_id=066
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 066 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 066 ']'
+ false
+ NFPPHY=53
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 67
+ new_param_id=067
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 067 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 067 ']'
+ false
+ NFPPHY=54
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 74
+ new_param_id=074
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 074 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 074 ']'
+ false
+ NFPPHY=55
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 43
+ new_param_id=043
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 043 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 043 ']'
+ false
+ NFPPHY=56
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 160
+ new_param_id=160
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 160 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 160 ']'
+ false
+ NFPPHY=57
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 161
+ new_param_id=161
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 161 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 161 ']'
+ false
+ NFPPHY=58
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 162
+ new_param_id=162
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 162 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 162 ']'
+ false
+ NFPPHY=59
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 163
+ new_param_id=163
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 163 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 163 ']'
+ false
+ NFPPHY=60
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 234
+ new_param_id=234
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 234 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 234 ']'
+ false
+ NFPPHY=61
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 28
+ new_param_id=028
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 028 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 028 ']'
+ false
+ NFPPHY=62
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 27
+ new_param_id=027
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 027 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 027 ']'
+ false
+ NFPPHY=63
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 30
+ new_param_id=030
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 030 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 030 ']'
+ false
+ NFPPHY=64
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,030
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,030,
+ for new_param_id in '${new_MFPPHY_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 29
+ new_param_id=029
+ found=false
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 033
+ old_param_id=033
+ '[' 033 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 034
+ old_param_id=034
+ '[' 034 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 134
+ old_param_id=134
+ '[' 134 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 141
+ old_param_id=141
+ '[' 141 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 142
+ old_param_id=142
+ '[' 142 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 143
+ old_param_id=143
+ '[' 143 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 144
+ old_param_id=144
+ '[' 144 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 146
+ old_param_id=146
+ '[' 146 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 147
+ old_param_id=147
+ '[' 147 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 151
+ old_param_id=151
+ '[' 151 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 164
+ old_param_id=164
+ '[' 164 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 165
+ old_param_id=165
+ '[' 165 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 166
+ old_param_id=166
+ '[' 166 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 167
+ old_param_id=167
+ '[' 167 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 168
+ old_param_id=168
+ '[' 168 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 169
+ old_param_id=169
+ '[' 169 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 172
+ old_param_id=172
+ '[' 172 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 175
+ old_param_id=175
+ '[' 175 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 176
+ old_param_id=176
+ '[' 176 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 177
+ old_param_id=177
+ '[' 177 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 178
+ old_param_id=178
+ '[' 178 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 179
+ old_param_id=179
+ '[' 179 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 182
+ old_param_id=182
+ '[' 182 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 201
+ old_param_id=201
+ '[' 201 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 202
+ old_param_id=202
+ '[' 202 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 205
+ old_param_id=205
+ '[' 205 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 212
+ old_param_id=212
+ '[' 212 -eq 029 ']'
+ for old_param_id in '${old_MFPPHY_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 228
+ old_param_id=228
+ '[' 228 -eq 029 ']'
+ false
+ NFPPHY=65
+ MFPPHY=033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,030,029
+ save_ic_filter_param_ids=139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,030,029,
+ for new_param_id in '${new_MFP2DF_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 129
+ new_param_id=129
+ found=false
+ for old_param_id in '${old_MFP2DF_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 129
+ old_param_id=129
+ '[' 129 -eq 129 ']'
+ found=true
+ break
+ true
+ for new_param_id in '${new_MFP2DF_params[@]}'
printf "%0*d" 3 $new_param_id
++ printf '%0*d' 3 152
+ new_param_id=152
+ found=false
+ for old_param_id in '${old_MFP2DF_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 129
+ old_param_id=129
+ '[' 129 -eq 152 ']'
+ for old_param_id in '${old_MFP2DF_params[@]}'
printf "%03g" $old_param_id
++ printf %03g 152
+ old_param_id=152
+ '[' 152 -eq 152 ']'
+ found=true
+ break
+ true
+ sed -r -e '1h;2,$H;$!d;g' -e 's|(NFPPHY\s*=)[0-9 ]+|\165|' -e 's|(MFPPHY\s*=)[0-9, \n]+\n|\1033,034,134,141,142,143,144,146,147,151,164,165,166,167,168,169,172,175,176,177,178,179,182,201,202,205,212,228,139,170,183,236,039,040,041,042,198,235,031,238,032,035,036,037,038,148,173,174,015,017,016,018,066,067,074,043,160,161,162,163,234,028,027,030,029,\n|' -e 's|(NFP2DF\s*=)\s*[0-9]+|\12|' -e 's|(MFP2DF\s*=)[0-9, \n]+\n|\1129,152,\n|' -e 's|NFP3DFS\s*=\s*[0-9]+,||' -e 's|MFP3DFS\s*=[0-9, \n]+\n|\n|' -e 's|NRFP3S\s*=\s*\-?[0-9]+,||' -e 's/&NAMFPC/\&NAMFPC\n    NFP3DFS = 9,\n    MFP3DFS = 133,75,76,246,247,248,138,155,130,\n    NRFP3S  = -99\n    NFP2DF = 2,\n    MFP2DF = 152,129,/'
+ ls -ltr postins
+ find -L postins/ -xtype l -samefile postins/pptdddddd0000_save_ic -exec rm '{}' ';'
+ (( i=0 ))
+ (( i< 1 ))
+ '[' '!' -f postins/pptdddddd0000_save_ic ']'
+ '[' ppt0000300000 '!=' '' ']'
+ ln -sf pptdddddd0000_save_ic postins/ppt0000300000
+ (( i++  ))
+ (( i< 1 ))
+ /bin/ls -1 postins/ppt0000000000 postins/ppt0000300000 postins/pptdddddd0000 postins/pptdddddd0000_save_ic postins/pptdddddd0600 postins/pptdddddd1200 postins/pptdddddd1800
+ ls -ltr postins
date -u -d "${leg_start_date}" +%F\ %T
++ date -u -d 'Mon, 01 Nov 1993 00:00:00 +0000' '+%F %T'
+ tm5_start_date='1993-11-01 00:00:00'
date -u -d "${leg_end_date}" +%F\ %T
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000' '+%F %T'
+ tm5_end_date='1993-12-01 00:00:00'
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ '[' -f postins/pptdddddd0300 ']'
+ '[' -f postins/pptdddddd0600 ']'
+ ifs_output_freq=24
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.ifs.sh
# namelist.ifs.sh

# Set coupling frequencies for ocean and chemistry coupling
(( ${cpl_freq_atm_oce_sec:-} )) && NFRCO=$(( cpl_freq_atm_oce_sec / ifs_time_step_sec )) || NFRCO=0
++ ((  2700  ))
++ NFRCO=3
(( ${cpl_freq_atm_ctm_hrs:-} )) && NFRCO_CHEM=$(( cpl_freq_atm_ctm_hrs * 3600 / ifs_time_step_sec )) || NFRCO_CHEM=0
++ ((    ))
++ NFRCO_CHEM=0
(( ${cpl_freq_atm_lpjg_hrs:-} )) && NFRCO_VEG=$(( cpl_freq_atm_lpjg_hrs * 3600 / ifs_time_step_sec )) || NFRCO_VEG=0
++ ((    ))
++ NFRCO_VEG=0

# Activate warm ocean parametrisation only in AMIP runs
(( ${cpl_freq_amip_sec:-} )) && LEOCWA=TRUE || LEOCWA=FALSE
++ ((    ))
++ LEOCWA=FALSE

# Switch on/off TM5 feedback to IFS, and between CO2-only and full-chemistry TM5 configs 
has_config tm5:o3fb  && LTM5O3=TRUE  || LTM5O3=FALSE
++ has_config tm5:o3fb
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5:o3fb == any ']'
++ [[ tm5:o3fb == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ LTM5O3=FALSE
has_config tm5:ch4fb && LTM5CH4=TRUE || LTM5CH4=FALSE
++ has_config tm5:ch4fb
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5:ch4fb == any ']'
++ [[ tm5:ch4fb == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ LTM5CH4=FALSE
has_config tm5:aerfb && LTM5AER=TRUE || LTM5AER=FALSE
++ has_config tm5:aerfb
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5:aerfb == any ']'
++ [[ tm5:aerfb == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ LTM5AER=FALSE
has_config tm5:co2   && LTM5CO2=TRUE || LTM5CO2=FALSE
++ has_config tm5:co2
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5:co2 == any ']'
++ [[ tm5:co2 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ LTM5CO2=FALSE
has_config tm5:co2fb && LTM5CO2FB=TRUE || LTM5CO2FB=FALSE
++ has_config tm5:co2fb
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5:co2fb == any ']'
++ [[ tm5:co2fb == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ LTM5CO2FB=FALSE
NLEV_TM5=${tm5_exch_nlevs:-999}
++ NLEV_TM5=999

# Switch on/off SPPT and set the ensemble member number (defaults to zero)
has_config sppt && LSPSDT=TRUE || LSPSDT=FALSE
++ has_config sppt
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' sppt == any ']'
++ [[ sppt == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ sppt ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ sppt ]]
++ for __m in '$config'
++ [[ lim3 =~ sppt ]]
++ for __m in '$config'
++ [[ rnfmapper =~ sppt ]]
++ for __m in '$config'
++ [[ xios:detached =~ sppt ]]
++ for __m in '$config'
++ [[ oasis =~ sppt ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ sppt ]]
++ ((  __f  ))
++ return 1
++ LSPSDT=FALSE
has_config sppt && LFIXSPPT=TRUE || LFIXSPPT=FALSE
++ has_config sppt
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' sppt == any ']'
++ [[ sppt == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ sppt ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ sppt ]]
++ for __m in '$config'
++ [[ lim3 =~ sppt ]]
++ for __m in '$config'
++ [[ rnfmapper =~ sppt ]]
++ for __m in '$config'
++ [[ xios:detached =~ sppt ]]
++ for __m in '$config'
++ [[ oasis =~ sppt ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ sppt ]]
++ ((  __f  ))
++ return 1
++ LFIXSPPT=FALSE
NENSFNB=${ifs_ensemble_forecast_number:-0}
++ NENSFNB=0

# Switch on/off LPJ-GUESS feedback to IFS
(( ${lpjg_on:-}   )) && LLPJGON=TRUE  || LLPJGON=FALSE
++ ((      ))
++ LLPJGON=FALSE
(( ${lpjg_fdbck:-}  )) && LLPJGFBON=TRUE || LLPJGFBON=FALSE
++ ((     ))
++ LLPJGFBON=FALSE

# Switch on/off atmospheric nudging
has_config atmnudg && LRLXG=TRUE || LRLXG=FALSE
++ has_config atmnudg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' atmnudg == any ']'
++ [[ atmnudg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atmnudg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atmnudg ]]
++ for __m in '$config'
++ [[ lim3 =~ atmnudg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atmnudg ]]
++ for __m in '$config'
++ [[ xios:detached =~ atmnudg ]]
++ for __m in '$config'
++ [[ oasis =~ atmnudg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atmnudg ]]
++ ((  __f  ))
++ return 1
++ LRLXG=FALSE


cat << EOF
&NAMRES
    NFRRES         = 1,
    NRESTS         = -1,-$(( leg_end_sec / 3600 )),
/
&NAERAD
    NRPROMA        = 0,
    LCMIP6         = ${ifs_cmip6},
    SSPNAME        = ${ifs_cmip6_scenario},
    LCOVID19       = ${ifs_covid19},
    COVID19SCEN    = ${ifs_covid19scen},
    LSSP370_LOWCH4 = FALSE,
    CMIP6DATADIR   = "${ini_data_dir}/ifs/cmip6-data/",
    LA4xCO2        = ${ifs_A4xCO2},
    L1PCTCO2       = ${ifs_1PCTCO2},
    LCMIP5         = ${ifs_cmip5},
    CMIP5DATADIR   = "${ini_data_dir}/ifs/cmip5-data",
    NCMIPFIXYR     = ${ifs_cmip_fixyear},
    NCMIPFIXYR_CH4 = ${ifs_cmip_fixyear_ch4},
    NRCP           = ${ifs_cmip5_rcp},
    LHVOLCA        = TRUE,
    LTM5O3         = ${LTM5O3},
    LTM5CH4        = ${LTM5CH4},
    LTM5CO2FB      = ${LTM5CO2FB},
    LTM5AER        = ${LTM5AER},
    LLPJGON        = ${LLPJGON},
    LLPJGFBON      = ${LLPJGFBON},
    LCMIP6_PI_AEROSOLS = ${ifs_cmip6piaer},
    LCMIP6_STRATAER_SIMP = ${lcmip6_strataer_simp},
    LCMIP6_STRATAER_BCKGD = ${lcmip6_strataer_bckgd},
    LCMIP6_STRATAER_FULL = ${lcmip6_strataer_full},
    CCMIP6_STRAT_SIMP  = "${ini_data_dir}/ifs/cmip6-data/CMIP6_1850_2014_total_AOD_masked_troposphere_mean_3.0.0.txt",
    CCMIP6_STRAT_FULL  = "${ini_data_dir}/ifs/cmip6-data/CMIP6_1850_2014_EC_EARTH_aerosol_radiation_2D_3.0.0_L${ifs_res_ver}.nc",
    AEROPIFIL_OPT      = "${ini_data_dir}/ifs/macv2sp-data/tm5_clim_pi_aerosol_opt_v4.0_L${ifs_res_ver}.nc",
    AEROPIFIL_CONC     = "${ini_data_dir}/ifs/macv2sp-data/tm5_clim_pi_aerosol_conc_v4.0_L${ifs_res_ver}.nc",
    LMAC2SP            = ${ifs_mac2sp},
    MAC2SPDIR          = "${ini_data_dir}/ifs/macv2sp-data/",
    LMAC2SPACI         = TRUE,
/
&NAEPHY
    LEPHYS         = TRUE,
    LEVDIF         = TRUE,
    LESURF         = TRUE,
    LECOND         = TRUE,
    LECUMF         = TRUE,
    LEPCLD         = TRUE,
    LEEVAP         = TRUE,
    LEVGEN         = TRUE,
    LESSRO         = TRUE,
    LECURR         = FALSE,
    LEGWDG         = TRUE,
    LEGWWMS        = TRUE,
    LEOCWA         = ${LEOCWA},
    LEOZOC         = TRUE,
    LEQNGT         = TRUE,
    LERADI         = TRUE,
    LERADS         = TRUE,
    LESICE         = TRUE,
    LEO3CH         = FALSE,
    LEDCLD         = TRUE,
    LDUCTDIA       = FALSE,
    LWCOU          = FALSE,
    LWCOU2W        = TRUE,
    NSTPW          = 1,
    RDEGREW        = 1.5,
    RSOUTW         = -81.0,
    RNORTW         = 81.0,
    N_COMPUTE_EFF_VEG_FRACTION = $n_compute_eff_veg_fraction
/
&NAMPAR1
    LSPLIT         = TRUE,
    NFLDIN         = 0,
    NFLDOUT        = 50,
    NSTRIN         = 1,
/
&NAMPAR0
    LSTATS         = TRUE,
    LDETAILED_STATS= FALSE,
    LSYNCSTATS     = FALSE,
    LSTATSCPU      = FALSE,
    NPRNT_STATS    = 32,
    LBARRIER_STATS = FALSE,
    LBARRIER_STATS2= FALSE,
    NPROC          = ${ifs_numproc},
EOF
++ cat

# enforce layout for passing spectral fields to TM
has_config tm5 &&
cat << EOF
    NPRTRW         = ${ifs_numproc},
    NPRTRV         = 1,
EOF
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1

cat << EOF
    NOUTPUT        = 1,
    MP_TYPE        = 2,
    MBX_SIZE       = 128000000,
/
&NAMRLXSM
    LRXSM          = ${ifs_lrxsm},
    LRXSMT1        = ${ifs_lrxsmt1},
    LRXSMT2        = ${ifs_lrxsmt2},
    LRXSMT3        = ${ifs_lrxsmt3},
    LRXSMT4        = ${ifs_lrxsmt4},
    LRXSMS         = ${ifs_lrxsms},
    RLXSMDIR       = "${ini_data_dir}/ifs/ERAILandClim",
/
&NAMDYNCORE
    LAQUA          = FALSE,
/
&NAMDYN
    TSTEP          = ${ifs_time_step_sec}.0,
    LMASCOR        = TRUE,
    LMASDRY        = TRUE,
/
&NAMNMI
    LASSI          = FALSE,
/
&NAMIOS
    CFRCF          = "rcf",
    CIOSPRF        = "srf",
/
&NAMFPG
/
&NAMCT0
    LNHDYN         = FALSE,
    NCONF          = 1,
    CTYPE          = "fc",
    CNMEXP         = "test",
    CFCLASS        = "se",
    LECMWF         = TRUE,
    LARPEGEF       = FALSE,
    LFDBOP         = FALSE,
    LFPOS          = TRUE,
    LSMSSIG        = FALSE,
    LSPRT          = TRUE,
    LSLAG          = TRUE,
    LTWOTL         = TRUE,
    LVERTFE        = TRUE,
    LAPRXPK        = TRUE,
    LOPT_SCALAR    = TRUE,
    LPC_FULL       = FALSE,
    LPC_CHEAP      = FALSE,
    LPC_NESC       = FALSE,
    LPC_NESCT      = FALSE,
    LSLPHY         = TRUE,
    LRFRIC         = TRUE,
    LFPSPEC        = FALSE,
    N3DINI         = 0,
    NSTOP          = $(( leg_end_sec / ifs_time_step_sec )),
    NFRDHP         = ${ifs_ddh_freq},
    NFRSDI         = ${ifs_di_freq},
    NFRGDI         = ${ifs_di_freq},
    NFRPOS         = ${ifs_output_freq},
    NFRHIS         = ${ifs_output_freq},
    NFRMASSCON     = $(( 6 * 3600 / ifs_time_step_sec )),
    NPOSTS         = 0,
    NHISTS         = 0,
    NMASSCONS      = 0,
    NFRCO          = ${NFRCO},
    NFRCO_CHEM     = ${NFRCO_CHEM},
    NFRCO_VEG      = ${NFRCO_VEG},
    LTM5CO2        = ${LTM5CO2},
    NLEV_TM5       = ${NLEV_TM5},
    NFRDHFZ        = 48,
    NDHFZTS        = 0,
    NDHFDTS        = 0,
    LWROUTLAST     = ${ifs_lastout},
    CFDIRLST       = "dirlist",
    CNPPATH        = "postins",
/
&NAMDDH
    BDEDDH(1,1)    = 4.0,1.0,0.0,50.0,0.0,49.0,
    NDHKD          = 120,
    LHDZON         = FALSE,
    LHDEFZ         = FALSE,
    LHDDOP         = FALSE,
    LHDEFD         = FALSE,
    LHDGLB         = TRUE,
    LHDPRG         = TRUE,
    LHDHKS         = TRUE,
/
&NAMGFL
    LTRCMFIX       = TRUE,
    NERA40         = 0,
    YQ_NL%LGP      = TRUE,
    YQ_NL%LSP      = FALSE,
    YL_NL%LGP      = TRUE,
    YI_NL%LGP      = TRUE,
    YA_NL%LGP      = TRUE,
    YO3_NL%LGP     = FALSE,
    YQ_NL%LGPINGP  = TRUE,
    YL_NL%LQM      = TRUE,
    YI_NL%LQM      = TRUE,
    YR_NL%LQM      = TRUE,
    YS_NL%LQM      = TRUE,
    YQ_NL%LMASSFIX = TRUE,
    YL_NL%LMASSFIX = TRUE,
    YI_NL%LMASSFIX = TRUE,
    YR_NL%LMASSFIX = TRUE,
    YS_NL%LMASSFIX = TRUE,
    YCDNC_NL%LGP   = TRUE,
    YICNC_NL%LGP   = TRUE,
    YRE_LIQ_NL%LGP = TRUE,
    YRE_ICE_NL%LGP = TRUE,
    YCDNC_NL%CNAME = "CDNC",
    YICNC_NL%CNAME = "ICNC",
    YRE_LIQ_NL%CNAME ="Reff_liq",
    YRE_ICE_NL%CNAME ="Reff_ice",
/
&NAMFPC
    CFPFMT         = "MODEL",
    NFP3DFS        = 5,
    NFP3DFP        = 7,
    NFP3DFT        = 1,
    NFP3DFV        = 1,
    MFP3DFS        = 130,135,138,155,133,
    MFP3DFP        = 129,130,135,138,155,157,133,
    MFP3DFT        = 60,
    MFP3DFV        = 133,
    NFP2DF         = 2,
    MFP2DF         = 129,152,
    NFPPHY         = 78,
    MFPPHY         = 31,32,33,34,35,36,37,38,39,40,41,42,44,45,49,50,57,58,59,78,79,129,136,137,139,141,142,143,144,145,146,147,148,151,159,164,165,166,167,168,169,170,172,175,176,177,178,179,180,181,182,183,186,187,188,189,195,196,197,198,201,202,205,208,209,210,211,235,236,238,243,244,245,229,230,231,232,213,
    NRFP3S         = 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,
    RFP3P          = 100000.0,92500.0,85000.0,70000.0,50000.0,40000.0,30000.0,25000.0,20000.0,15000.0,10000.0,7000.0,5000.0,3000.0,2000.0,1000.0,700.0,500.0,300.0,200.0,100.0,
    LFITP          = TRUE,
    LFITT          = FALSE,
    LFITV          = FALSE,
    NFPCLI         = 0,
    LFPQ           = FALSE,
    LASQ           = FALSE,
    LTRACEFP       = FALSE,
    RFPCORR        = 60000.,
/
&NAMFPD
/
&NAMDIM
    NPROMA         = 0,
    NUNDEFLD       = 0,
/
&NAMVAR
    LMODERR        = FALSE,
    LJCDFI         = FALSE,
    LUSEJCDFI      = FALSE,
/
&NAMMCC
    LMCCIEC        = TRUE,
    LMCCEC         = TRUE,
    LMCC04         = TRUE,
    NOACOMM        = 5,
    LMCCICEIC      = FALSE,
    LRDALB         = FALSE, 
    LRDVEG         = TRUE, 
    LPISM          = FALSE,
    LLANDICE       = ${ifs_landice},
/
&NAMPPC
    LRSACC         = TRUE,
/
&NAMORB
    LCORBMD =  $ifs_orb_switch,
    ORBMODE = '$ifs_orb_mode',
    ORBIY   =  $ifs_orb_iyear,
/
EOF
++ cat

# Resolution-dependent gravity wave drag parametrisation - using cy41r2 version
# GFLUXLAUN=GFLUXLAUN*(1.0_JPRB-MIN(1.0_JPRB,atan((MAX(KSMAX,700)-700)/REAL(6000-700))))
case ${ifs_grid} in
T799L91)
GFLUXLAUN=0.00367996
;;
T1279L91)
GFLUXLAUN=0.00334195
;;
*)
GFLUXLAUN=0.00375
;;
esac
++ case ${ifs_grid} in
++ GFLUXLAUN=0.00375

cat << EOF
&NAMGWWMS
    GFLUXLAUN=$GFLUXLAUN
    ZLAUNCHP=45000
    LOZPR=true
    NGAUSS=2
    GGAUSSB=-0.55
/
&NAMGWD
    GTENLIM=0.0222
/
EOF
++ cat

# Add COSP namelist if needed
has_config ifs:cosp && . $ctrl_file_dir/namelist.cosp.sh
++ has_config ifs:cosp
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs:cosp == any ']'
++ [[ ifs:cosp == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ cosp ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ return 1

cat << EOF
&NAEAER
/
&NALBAR
/
&NALORI
/
&NAM_DISTRIBUTED_VECTORS
/
&NAM926
/
&NAMAFN
/
&NAMANA
/
&NAMARPHY
/
&NAMCA
/
&NAMCAPE
/
&NAMCFU
/
&NAMCHK
/
&NAMCHET
/
&NAMCLDP
    NCLDDIAG   = 0,
    RLCRITSNOW = $RLCRITSNOW,
    RVICE      = $RVICE,
    RCLDIFF    = $RCLDIFF,
    RCLDIFFC   = $RCLDIFFC,
    RTAUMEL    = 7200.0,
    RSNOWLIN2  = $RSNOWLIN2,
    RCLCRIT    = 0.4E-3,
    NCLOUDACT  = 2,
    NACTPDF    = 10,
    NAERCLD    = 9,
    RLCRIT_UPHYS=$RLCRIT_UPHYS,
/
&NAMCLTC
/
&NAMCOM
/
&NAMCOS
/
&NAMCTAN
/
&NAMCOSPINPUT
/
&NAMCOSPOUTPUT
/
&NAMCUMF
    ENTRORG = $ENTRORG,
    ENTRDD  = $ENTRDD,
    RPRCON  = $RPRCON,
    DETRPEN = $DETRPEN,
    RMFDEPS = $RMFDEPS,
/
&NAMCUMFS
/
&NAMCT1
/
&NAMCVA
/
&NAMDFHD
/
&NAMDFI
/
&NAMDIF
/
&NAMDIMO
/
&NAMDMSP
/
&NAMDPHY
/
&NAMDYNA
/
&NAMEMIS_CONF
/
&NAMENKF
/
&NAMFA
/
&NAMFFT
/
&NAMFPDY2
/
&NAMFPDYH
/
&NAMFPDYP
/
&NAMFPDYS
/
&NAMFPDYT
/
&NAMFPDYV
/
&NAMFPEZO
/
&NAMFPF
/
&NAMFPIOS
/
&NAMFPPHY
/
&NAMFPSC2
/
&NAMFPSC2_DEP
/
&NAMFY2
/
&NAMGEM
/
&NAMGMS
/
&NAMGOES
/
&NAMGOM
/
&NAMGRIB
    NENSFNB = ${NENSFNB},
/
&NAMGWD
/
&NAMGWWMS
/
&NAMHLOPT
/
&NAMINI
/
&NAMIOMI
/
&NAMJBCODES
/
&NAMJFH
/
&NAMJG
/
&NAMJO
/
&NAMKAP
/
&NAMLCZ
/
&NAMLEG
/
&NAMLFI
/
&NAMMCUF
/
&NAMMETEOSAT
/
&NAMMTS
/
&NAMMTSAT
/
&NAMMTT
/
&NAMMUL
/
&NAMNASA
/
&NAMNN
/
&NAMNPROF
/
&NAMNUD
/
&NAMOBS
/
&NAMONEDVAR
/
&NAMOPH
/
&NAMPARAR
/
&NAMPHY
/
&NAMPHY0
/
&NAMPHY1
/
&NAMPHY2
/
&NAMPHY3
/
&NAMPHYDS
/
&NAMPONG
/
&NAMRAD15
/
&NAMRCOEF
/
&NAMRINC
/
&NAMRIP
/
&NAMRLX
    LRLXG          = ${LRLXG},
    LRLXVO         = FALSE,
    LRLXDI         = FALSE,
    LRLXTE         = FALSE,
    LRLXQ          = FALSE,
    LRLXQL         = FALSE,
    LRLXQI         = FALSE,
    LRLXQC         = FALSE,
    LRLXLP         = FALSE,
    XRLXVO         = 0.1,
    XRLXDI         = 0.1,
    XRLXTE         = 0.1,
    XRLXQ          = 0.1,
    XRLXLP         = 0.1,
    ALATRLX1       = 90,
    ALATRLX2       = -90,
    ALONRLX1       = 0,
    ALONRLX2       = 360,
    AXRLX          = -0.5,
    AYRLX          = -0.5,
    AZRLX          = 1.0,
    NRLXLMIN       = 1,
    NRLXLMAX       = 91,
/
&NAMSCC
/
&NAMSCEN
/
&NAMSCM
/
&NAMSENS
/
&NAMSIMPHL
/
&NAMSKF
/
&NAMSPSDT
    LFIXSPPT	    = ${LFIXSPPT},
    LSPSDT          = ${LSPSDT},
    LCLIP_SPEC_SDT  = TRUE,
    LCLIP_GRID_SDT  = TRUE,
    LWRITE_ARP      = FALSE,
    LUSESETRAN_SDT  = TRUE,
    LRESETSEED_SDT  = FALSE,
    NSCALES_SDT     = 3,
    CSPEC_SHAPE_SDT ='WeaverCourtier',
    SDEV_SDT        = 0.52,0.18,0.06,
    TAU_SDT         = 2.16E4,2.592E5,2.592E6,
    XLCOR_SDT       = 500.E3,1000.E3,2000.E3,
    XCLIP_RATIO_SDT = 1.8,
    LTAPER_BL0      = TRUE,
    XSIGMATOP       = 0.87,
    XSIGMABOT       = 0.97,
    LTAPER_ST0      = TRUE,
    XPRESSTOP_ST0   = 50.E2,
    XPRESSBOT_ST0   = 100.E2,
    LQPERTLIMIT2    = TRUE,
/
&NAMSTA
/
&NAMSTOPH
/
&NAMTCWV
/
&NAMTESTVAR
/
&NAMTLEVOL
/
&NAMTOPH
/
&NAMTOVS
/
&NAMTRAJP
/
&NAMTRANS
/
&NAMTRM
/
&NAMVARBC
/
&NAMVARBC_AIREP
/
&NAMVARBC_ALLSKY
/
&NAMVARBC_RAD
/
&NAMVARBC_TCWV
/
&NAMVARBC_TO3
/
&NAMVAREPS
/
&NAMVDOZ
/
&NAMVFP
/
&NAMVRTL
/
&NAMVV1
/
&NAMVV2
/
&NAMVWRK
/
&NAMXFU
/
&NAMZDI
/
&NAPHLC
/
&NAV1IS
/
EOF
++ cat
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo.ref.sh
# namelist.nemo.ref.sh writes the reference namelist for NEMO to standard out.
# Note that this namelist will be overwritten by the namelist specific to the
# configuration (namelist.nemo-*.cfg.sh). Hence, only parameters common to all
# configurations shoule be specified here.

if $leg_is_restart
then
    nemo_restart=".TRUE."
    nemo_rst_ctl=1
elif $(has_config nemo:start_from_restart)
then
    nemo_restart=".TRUE."
    nemo_rst_ctl=0
else
    nemo_restart=".FALSE."
    # Note that nemo_rst_ctl doesn't matter in that case,
    # but we have to set it to some value
    nemo_rst_ctl=0
fi
++ false
has_config nemo:start_from_restart
+++ has_config nemo:start_from_restart
+++ ((  1  ))
+++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+++ local __c
+++ local __m
+++ '[' nemo:start_from_restart == any ']'
+++ [[ nemo:start_from_restart == \a\l\l ]]
+++ local __f
+++ for __c in '"$@"'
+++ __f=0
+++ for __m in '$config'
+++ [[ ifs =~ nemo ]]
+++ for __m in '$config'
+++ [[ nemo:start_from_restart:elpin =~ nemo ]]
+++ [[ nemo:start_from_restart:elpin =~ start_from_restart ]]
+++ __f=1
+++ for __m in '$config'
+++ [[ lim3 =~ nemo ]]
+++ for __m in '$config'
+++ [[ rnfmapper =~ nemo ]]
+++ for __m in '$config'
+++ [[ xios:detached =~ nemo ]]
+++ for __m in '$config'
+++ [[ oasis =~ nemo ]]
+++ for __m in '$config'
+++ [[ save_ic:end_leg =~ nemo ]]
+++ ((  __f  ))
+++ return 0
++ nemo_restart=.TRUE.
++ nemo_rst_ctl=0

if $(has_config nemo:surfresto)
then
    ln_ssr=".TRUE."
else
    ln_ssr=".FALSE."
fi
has_config nemo:surfresto
+++ has_config nemo:surfresto
+++ ((  1  ))
+++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+++ local __c
+++ local __m
+++ '[' nemo:surfresto == any ']'
+++ [[ nemo:surfresto == \a\l\l ]]
+++ local __f
+++ for __c in '"$@"'
+++ __f=0
+++ for __m in '$config'
+++ [[ ifs =~ nemo ]]
+++ for __m in '$config'
+++ [[ nemo:start_from_restart:elpin =~ nemo ]]
+++ [[ nemo:start_from_restart:elpin =~ surfresto ]]
+++ for __m in '$config'
+++ [[ lim3 =~ nemo ]]
+++ for __m in '$config'
+++ [[ rnfmapper =~ nemo ]]
+++ for __m in '$config'
+++ [[ xios:detached =~ nemo ]]
+++ for __m in '$config'
+++ [[ oasis =~ nemo ]]
+++ for __m in '$config'
+++ [[ save_ic:end_leg =~ nemo ]]
+++ ((  __f  ))
+++ return 1
++ ln_ssr=.FALSE.
if $(has_config nemo:ocenudg)
then
    ln_tradmp=".TRUE."
    ln_tsd_tradmp=".TRUE."    
else
    ln_tradmp=".FALSE."
    ln_tsd_tradmp=".FALSE."
fi
has_config nemo:ocenudg
+++ has_config nemo:ocenudg
+++ ((  1  ))
+++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+++ local __c
+++ local __m
+++ '[' nemo:ocenudg == any ']'
+++ [[ nemo:ocenudg == \a\l\l ]]
+++ local __f
+++ for __c in '"$@"'
+++ __f=0
+++ for __m in '$config'
+++ [[ ifs =~ nemo ]]
+++ for __m in '$config'
+++ [[ nemo:start_from_restart:elpin =~ nemo ]]
+++ [[ nemo:start_from_restart:elpin =~ ocenudg ]]
+++ for __m in '$config'
+++ [[ lim3 =~ nemo ]]
+++ for __m in '$config'
+++ [[ rnfmapper =~ nemo ]]
+++ for __m in '$config'
+++ [[ xios:detached =~ nemo ]]
+++ for __m in '$config'
+++ [[ oasis =~ nemo ]]
+++ for __m in '$config'
+++ [[ save_ic:end_leg =~ nemo ]]
+++ ((  __f  ))
+++ return 1
++ ln_tradmp=.FALSE.
++ ln_tsd_tradmp=.FALSE.

# if new initial conditions are requested, we must set nemo_rst_list=".true." and insert the timesteps in nemo_stocklist
[ -z "${do_save_ic-}" ] && do_save_ic=false
++ '[' -z true ']'
if $do_save_ic
then
    nemo_rst_list=".true."
    nemo_stock="0"
    #nemo_stocklist is defined in save_ic_prepare_output()
else
    nemo_rst_list=".false."
    nemo_stock="0"
    nemo_stocklist="0,0,0,0,0,0,0,0,0,0"
fi
++ true
++ nemo_rst_list=.true.
++ nemo_stock=0


cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OPA  :  1 - run manager      (namrun)
!! namelists    2 - Domain           (namcfg, namzgr, namzgr_sco, namdom, namtsd)
!!              3 - Surface boundary (namsbc, namsbc_ana, namsbc_flx, namsbc_clio, namsbc_core, namsbc_sas
!!                                    namsbc_cpl, namtra_qsr, namsbc_rnf,
!!                                    namsbc_apr, namsbc_ssr, namsbc_alb)
!!              4 - lateral boundary (namlbc, namcla, namobc, namagrif, nambdy, nambdy_tide)
!!              5 - bottom  boundary (nambfr, nambbc, nambbl)
!!              6 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_dmp)
!!              7 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              8 - Verical physics  (namzdf, namzdf_ric, namzdf_tke, namzdf_kpp, namzdf_ddm, namzdf_tmx)
!!              9 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb, namsto)
!!             10 - miscellaneous    (namsol, nammpp, namctl)
!!             11 - Obs & Assim      (namobs, nam_asminc)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!                   ***  Run management namelists  ***
!!======================================================================
!!   namrun       parameters of the run
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no         =  0             !  job number (no more used...)
   cn_exp        =  "${exp_name}" !  experience name
   nn_it000      =  $(( leg_start_sec / nem_time_step_sec + 1 )) !  first time step
   nn_itend      =  $(( leg_end_sec / nem_time_step_sec ))       !  last  time step (std 5475)
   nn_date0      =  ${leg_start_date_yyyymmdd} !  date at nit_0000 (format yyyymmdd)
                                  !    used if ln_rstart=F or
                                  !    (ln_rstart=T and nn_rstctl=0 or 1)
   nn_leapy      =  1             !  Leap year calendar (1) or not (0)
   ln_rstart     = ${nemo_restart} ! start from rest (F) or from a restart file (T)
   nn_euler      =  1             !  = 0 : start with forward time step if ln_rstart=T
   nn_rstctl     = ${nemo_rst_ctl} ! restart control ==> activated only if ln_rstart=T
                                  !  = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
                                  !  = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
                                  !  = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
   cn_ocerst_in  = "restart_oce"  !  suffix of ocean restart name (input)
   cn_ocerst_indir = "."          !  directory from which to read input ocean restarts
   cn_ocerst_out = "restart_oce"  !  suffix of ocean restart name (output)
   cn_ocerst_outdir = "."         !  directory in which to write output ocean restarts
   nn_istate     =  0             !  output the initial state (1) or not (0)
   ln_rst_list   = ${nemo_rst_list} !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock      = ${nemo_stock}  !  frequency of creation of a restart file (modulo referenced to 1)
   nn_stocklist  = ${nemo_stocklist} ! List of timesteps when a restart file is to be written
   nn_write      = -1             !  frequency of write in the output file   (modulo referenced to nn_it000)
   ln_dimgnnn    = .false.        !  DIMG file format: 1 file for all processors (F) or by processor (T)
   ln_mskland    = .true.         !  mask land points in NetCDF outputs (costly: + ~15%)
   ln_mskutil    = .false.
   ln_cfmeta     = .false.        !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber    = .true.         !  clobber (overwrite) an existing file
   nn_chunksz    =  0             !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
/
!
!!======================================================================
!!                      ***  Domain namelists  ***
!!======================================================================
!!   namcfg       parameters of the configuration
!!   namzgr       vertical coordinate
!!   namzgr_sco   s-coordinate or hybrid z-s-coordinate
!!   namdom       space and time domain (bathymetry, mesh, timestep)
!!   namtsd       data: temperature & salinity
!!======================================================================
!
!-----------------------------------------------------------------------
&namcfg     !   parameters of the configuration
!-----------------------------------------------------------------------
   cp_cfg      =  "default"            !  name of the configuration
   cp_cfz      =  "no zoom"            !  name of the zoom of configuration
   jp_cfg      =       0               !  resolution of the configuration
   jpidta      =      10               !  1st lateral dimension ( >= jpi )
   jpjdta      =      12               !  2nd    "         "    ( >= jpj )
   jpkdta      =      31               !  number of levels      ( >= jpk )
   jpiglo      =      10               !  1st dimension of global domain --> i =jpidta
   jpjglo      =      12               !  2nd    -                  -    --> j =jpjdta
   jpizoom     =       1               !  left bottom (i,j) indices of the zoom
   jpjzoom     =       1               !  in data domain indices
   jperio      =       0               !  lateral cond. type (between 0 and 6)
                                       !  = 0 closed                 ;   = 1 cyclic East-West
                                       !  = 2 equatorial symmetric   ;   = 3 North fold T-point pivot
                                       !  = 4 cyclic East-West AND North fold T-point pivot
                                       !  = 5 North fold F-point pivot
                                       !  = 6 cyclic East-West AND North fold F-point pivot
   ln_use_jattr = .false.              !  use (T) the file attribute: open_ocean_jstart, if present
                                       !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namzgr        !   vertical coordinate
!-----------------------------------------------------------------------
   ln_zco      = .false.   !  z-coordinate - full    steps   (T/F)      ("key_zco" may also be defined)
   ln_zps      = .true.    !  z-coordinate - partial steps   (T/F)
   ln_sco      = .false.   !  s- or hybrid z-s-coordinate    (T/F)
   ln_isfcav   = .false.   !  ice shelf cavity               (T/F)
/
!-----------------------------------------------------------------------
&namzgr_sco    !   s-coordinate or hybrid z-s-coordinate
!-----------------------------------------------------------------------
   ln_s_sh94   = .true.    !  Song & Haidvogel 1994 hybrid S-sigma   (T)|
   ln_s_sf12   = .false.   !  Siddorn & Furner 2012 hybrid S-z-sigma (T)| if both are false the NEMO tanh stretching is applied
   ln_sigcrit  = .false.   !  use sigma coordinates below critical depth (T) or Z coordinates (F) for Siddorn & Furner stretch
                           !  stretching coefficients for all functions
   rn_sbot_min =   10.0    !  minimum depth of s-bottom surface (>0) (m)
   rn_sbot_max = 7000.0    !  maximum depth of s-bottom surface (= ocean depth) (>0) (m)
   rn_hc       =  150.0    !  critical depth for transition to stretched coordinates
                        !!!!!!!  Envelop bathymetry
   rn_rmax     =    0.3    !  maximum cut-off r-value allowed (0<r_max<1)
                        !!!!!!!  SH94 stretching coefficients  (ln_s_sh94 = .true.)
   rn_theta    =    6.0    !  surface control parameter (0<=theta<=20)
   rn_bb       =    0.8    !  stretching with SH94 s-sigma
                        !!!!!!!  SF12 stretching coefficient  (ln_s_sf12 = .true.)
   rn_alpha    =    4.4    !  stretching with SF12 s-sigma
   rn_efold    =    0.0    !  efold length scale for transition to stretched coord
   rn_zs       =    1.0    !  depth of surface grid box
                           !  bottom cell depth (Zb) is a linear function of water depth Zb = H*a + b
   rn_zb_a     =    0.024  !  bathymetry scaling factor for calculating Zb
   rn_zb_b     =   -0.2    !  offset for calculating Zb
                        !!!!!!!! Other stretching (not SH94 or SF12) [also uses rn_theta above]
   rn_thetb    =    1.0    !  bottom control parameter  (0<=thetb<= 1)
/
!-----------------------------------------------------------------------
&namdom        !   space and time domain (bathymetry, mesh, timestep)
!-----------------------------------------------------------------------
   nn_bathy    =    1      !  compute (=0) or read (=1) the bathymetry file
   rn_bathy    =    0.     !  value of the bathymetry. if (=0) bottom flat at jpkm1
   nn_closea   =    0      !  remove (=0) or keep (=1) closed seas and lakes (ORCA)
   nn_msh      =    0      !  create (=1) a mesh file or not (=0)
   rn_hmin     =   -3.     !  min depth of the ocean (>0) or min number of ocean level (<0)
   rn_e3zps_min=   20.     !  partial step thickness is set larger than the minimum of
   rn_e3zps_rat=    0.1    !  rn_e3zps_min and rn_e3zps_rat*e3t, with 0<rn_e3zps_rat<1
                           !
   rn_rdt      = 5760.     !  time step for the dynamics (and tracer if nn_acc=0)
   rn_atfp     =    0.1    !  asselin time filter parameter
   nn_acc      =    0      !  acceleration of convergence : =1      used, rdt < rdttra(k)
                                 !                          =0, not used, rdt = rdttra
   rn_rdtmin   = 28800.          !  minimum time step on tracers (used if nn_acc=1)
   rn_rdtmax   = 28800.          !  maximum time step on tracers (used if nn_acc=1)
   rn_rdth     =  800.           !  depth variation of tracer time step  (used if nn_acc=1)
   ln_crs      = .false.      !  Logical switch for coarsening module
   jphgr_msh   =       0               !  type of horizontal mesh
                                       !  = 0 curvilinear coordinate on the sphere read in coordinate.nc
                                       !  = 1 geographical mesh on the sphere with regular grid-spacing
                                       !  = 2 f-plane with regular grid-spacing
                                       !  = 3 beta-plane with regular grid-spacing
                                       !  = 4 Mercator grid with T/U point at the equator
   ppglam0     =       0.0             !  longitude of first raw and column T-point (jphgr_msh = 1)
   ppgphi0     =     -35.0             ! latitude  of first raw and column T-point (jphgr_msh = 1)
   ppe1_deg    =       1.0             !  zonal      grid-spacing (degrees)
   ppe2_deg    =       0.5             !  meridional grid-spacing (degrees)
   ppe1_m      =    5000.0             !  zonal      grid-spacing (degrees)
   ppe2_m      =    5000.0             !  meridional grid-spacing (degrees)
   ppsur       =    -4762.96143546300  !  ORCA r4, r2 and r05 coefficients
   ppa0        =      255.58049070440  ! (default coefficients)
   ppa1        =      245.58132232490  !
   ppkth       =       21.43336197938  !
   ppacr       =        3.0            !
   ppdzmin     =       10.             !  Minimum vertical spacing
   pphmax      =     5000.             !  Maximum depth
   ldbletanh   =    .TRUE.             !  Use/do not use double tanf function for vertical coordinates
   ppa2        =      100.760928500000 !  Double tanh function parameters
   ppkth2      =       48.029893720000 !
   ppacr2      =       13.000000000000 !
/
!-----------------------------------------------------------------------
&namsplit      !   time splitting parameters                            ("key_dynspg_ts")
!-----------------------------------------------------------------------
   ln_bt_fw      =    .TRUE.           !  Forward integration of barotropic equations
   ln_bt_av      =    .TRUE.           !  Time filtering of barotropic variables
   ln_bt_nn_auto =    .TRUE.           !  Set nn_baro automatically to be just below
                                       !  a user defined maximum courant number (rn_bt_cmax)
   nn_baro       =    30               !  Number of iterations of barotropic mode
                                       !  during rn_rdt seconds. Only used if ln_bt_nn_auto=F
   rn_bt_cmax    =    0.8              !  Maximum courant number allowed if ln_bt_nn_auto=T
   nn_bt_flt     =    1                !  Time filter choice
                                       !  = 0 None
                                       !  = 1 Boxcar over   nn_baro barotropic steps
                                       !  = 2 Boxcar over 2*nn_baro     "        "
/
!-----------------------------------------------------------------------
&namcrs        !   Grid coarsening for dynamics output and/or
               !   passive tracer coarsened online simulations
!-----------------------------------------------------------------------
   nn_factx    = 3         !  Reduction factor of x-direction
   nn_facty    = 3         !  Reduction factor of y-direction
   nn_binref   = 0         !  Bin centering preference: NORTH or EQUAT
                           !  0, coarse grid is binned with preferential treatment of the north fold
                           !  1, coarse grid is binned with centering at the equator
                           !    Symmetry with nn_facty being odd-numbered. Asymmetry with even-numbered nn_facty.
   nn_msh_crs  = 1         !  create (=1) a mesh file or not (=0)
   nn_crs_kz   = 0         ! 0, MEAN of volume boxes
                           ! 1, MAX of boxes
                           ! 2, MIN of boxes
   ln_crs_wn   = .true.    ! wn coarsened (T) or computed using horizontal divergence ( F )
/
!-----------------------------------------------------------------------
&namc1d        !   1D configuration options                             ("key_c1d")
!-----------------------------------------------------------------------
   rn_lat1d    =      50   !  Column latitude (default at PAPA station)
   rn_lon1d    =    -145   !  Column longitude (default at PAPA station)
   ln_c1d_locpt=  .true.   ! Localization of 1D config in a grid (T) or independant point (F)
/
!-----------------------------------------------------------------------
&namtsd    !   data : Temperature  & Salinity
!-----------------------------------------------------------------------
!-----------------------------------------------------------------------
   cn_dir        = './'     !  root directory for the location of the runoff files
   ln_tsd_init   = .true.   !  Initialisation of ocean T & S with T &S input data (T) or not (F)
   ln_tsd_tradmp = .false.  !  damping of ocean T & S toward T &S input data (T) or not (F)
/
!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***
!!======================================================================
!!   namsbc          surface boundary condition
!!   namsbc_ana      analytical         formulation
!!   namsbc_flx      flux               formulation
!!   namsbc_clio     CLIO bulk formulae formulation
!!   namsbc_core     CORE bulk formulae formulation
!!   namsbc_mfs      MFS  bulk formulae formulation
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3")
!!   namsbc_sas      StAndalone Surface module
!!   namtra_qsr      penetrative solar radiation
!!   namsbc_rnf      river runoffs
!!   namsbc_isf      ice shelf melting/freezing
!!   namsbc_apr      Atmospheric Pressure
!!   namsbc_ssr      sea surface restoring term (for T and/or S)
!!   namsbc_alb      albedo parameters
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition (surface module)
!-----------------------------------------------------------------------
   nn_fsbc     = 5         !  frequency of surface boundary condition computation
                           !     (also = the frequency of sea-ice model call)
   ln_ana      = .false.   !  analytical formulation                    (T => fill namsbc_ana )
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk_clio = .false.   !  CLIO bulk formulation                     (T => fill namsbc_clio)
   ln_blk_core = .true.    !  CORE bulk formulation                     (T => fill namsbc_core)
   ln_blk_mfs  = .false.   !  MFS bulk formulation                      (T => fill namsbc_mfs )
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
                           !  =0 no opa-sas OASIS coupling: default single executable configuration
                           !  =1 opa-sas OASIS coupling: multi executable configuration, OPA component
                           !  =2 opa-sas OASIS coupling: multi executable configuration, SAS component 
   ln_apr_dyn  = .false.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   nn_ice      = 2         !  =0 no ice boundary condition   ,
                           !  =1 use observed ice-cover      ,
                           !  =2 ice-model used                         ("key_lim3" or "key_lim2")
   nn_ice_embd = 1         !  =0 levitating ice (no mass exchange, concentration/dilution effect)
                           !  =1 levitating ice with mass and salt exchange but no presure effect
                           !  =2 embedded sea-ice (full salt and mass exchanges and pressure)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_rnf      = .true.    !  runoffs                                   (T   => fill namsbc_rnf)
   nn_isf      = 0         !  ice shelf melting/freezing                (/=0 => fill namsbc_isf)
                           !  0 =no isf                  1 = presence of ISF
                           !  2 = bg03 parametrisation   3 = rnf file for isf
                           !  4 = ISF fwf specified
                           !  option 1 and 4 need ln_isfcav = .true. (domzgr)
   ln_ssr      = .true.    !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 2         !  FreshWater Budget: =0 unchecked
                           !     =1 global mean of e-p-r set to zero at each time step
                           !     =2 annual global mean of e-p-r set to zero
   ln_wave = .false.       !  Activate coupling with wave (either Stokes Drift or Drag coefficient, or both)  (T => fill namsbc_wave)
   ln_cdgw = .false.       !  Neutral drag coefficient read from wave model (T => fill namsbc_wave)
   ln_sdw  = .false.       !  Computation of 3D stokes drift                (T => fill namsbc_wave)
   nn_lsm  = 0             !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
   nn_limflx = -1          !  LIM3 Multi-category heat flux formulation (use -1 if LIM3 is not used)
                           !  =-1  Use per-category fluxes, bypass redistributor, forced mode only, not yet implemented coupled
                           !  = 0  Average per-category fluxes (forced and coupled mode)
                           !  = 1  Average and redistribute per-category fluxes, forced mode only, not yet implemented coupled
                           !  = 2  Redistribute a single flux over categories (coupled mode only)
/
!-----------------------------------------------------------------------
&namsbc_ana    !   analytical surface boundary condition
!-----------------------------------------------------------------------
   nn_tau000   =   0       !  gently increase the stress over the first ntau_rst time-steps
   rn_utau0    =   0.5     !  uniform value for the i-stress
   rn_vtau0    =   0.e0    !  uniform value for the j-stress
   rn_qns0     =   0.e0    !  uniform value for the total heat flux
   rn_qsr0     =   0.e0    !  uniform value for the solar radiation
   rn_emp0     =   0.e0    !  uniform value for the freswater budget (E-P)
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_utau     = 'utau'      ,        24         , 'utau'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_vtau     = 'vtau'      ,        24         , 'vtau'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_qtot     = 'qtot'      ,        24         , 'qtot'    , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_qsr      = 'qsr'       ,        24         , 'qsr'     , .false.      , .false., 'yearly'  , ''       , ''       , ''
   sn_emp      = 'emp'       ,        24         , 'emp'     , .false.      , .false., 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the flux files
/
!-----------------------------------------------------------------------
&namsbc_clio   !   namsbc_clio  CLIO bulk formulae
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_utau     = 'taux_1m'   ,       -1          , 'sozotaux',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_vtau     = 'tauy_1m'   ,       -1          , 'sometauy',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_wndm     = 'flx'       ,       -1          , 'socliowi',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_tair     = 'flx'       ,       -1          , 'socliot2',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_humi     = 'flx'       ,       -1          , 'socliohu',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_ccov     = 'flx'       ,       -1          , 'socliocl',   .false.    , .true. , 'yearly'  , ''       , ''       , ''
   sn_prec     = 'flx'       ,       -1          , 'socliopl',   .false.    , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the bulk files are
/
!-----------------------------------------------------------------------
&namsbc_core   !   namsbc_core  CORE bulk formulae
!-----------------------------------------------------------------------
!              !  file name                    ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights                               ! rotation ! land/sea mask !
!              !                               !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename                              ! pairing  ! filename      !
   sn_wndi     = 'u_10.15JUNE2009_fill'        ,         6         , 'U_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bicubic_noc.nc'   , 'Uwnd'   , ''
   sn_wndj     = 'v_10.15JUNE2009_fill'        ,         6         , 'V_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bicubic_noc.nc'   , 'Vwnd'   , ''
   sn_qsr      = 'ncar_rad.15JUNE2009_fill'    ,        24         , 'SWDN_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_qlw      = 'ncar_rad.15JUNE2009_fill'    ,        24         , 'LWDN_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_tair     = 't_10.15JUNE2009_fill'        ,         6         , 'T_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_humi     = 'q_10.15JUNE2009_fill'        ,         6         , 'Q_10_MOD',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_prec     = 'ncar_precip.15JUNE2009_fill' ,        -1         , 'PRC_MOD1',   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_snow     = 'ncar_precip.15JUNE2009_fill' ,        -1         , 'SNOW'    ,   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''
   sn_tdif     = 'taudif_core'                 ,        24         , 'taudif'  ,   .false.    , .true. , 'yearly'  , 'weights_core_orca2_bilinear_noc.nc'  , ''       , ''

   cn_dir      = './'      !  root directory for the location of the bulk files
   ln_taudif   = .false.   !  HF tau contribution: use "mean of stress module - module of the mean stress" data
   rn_zqt      = 10.        !  Air temperature and humidity reference height (m)
   rn_zu       = 10.        !  Wind vector reference height (m)
   rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
   rn_efac     = 1.        !  multiplicative factor for evaporation (0. or 1.)
   rn_vfac     = 0.        !  multiplicative factor for ocean/ice velocity
                           !  in the calculation of the wind stress (0.=absolute winds or 1.=relative winds)
/
!-----------------------------------------------------------------------
&namsbc_mfs   !   namsbc_mfs  MFS bulk formulae
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights     ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename    ! pairing  ! filename      !
   sn_wndi     =   'ecmwf'   ,        6          , 'u10'     ,    .true.    , .false. , 'daily'  ,'bicubic.nc' , ''       , ''
   sn_wndj     =   'ecmwf'   ,        6          , 'v10'     ,    .true.    , .false. , 'daily'  ,'bicubic.nc' , ''       , ''
   sn_clc      =   'ecmwf'   ,        6          , 'clc'     ,    .true.    , .false. , 'daily'  ,'bilinear.nc', ''       , ''
   sn_msl      =   'ecmwf'   ,        6          , 'msl'     ,    .true.    , .false. , 'daily'  ,'bicubic.nc' , ''       , ''
   sn_tair     =   'ecmwf'   ,        6          , 't2'      ,    .true.    , .false. , 'daily'  ,'bicubic.nc' , ''       , ''
   sn_rhm      =   'ecmwf'   ,        6          , 'rh'      ,    .true.    , .false. , 'daily'  ,'bilinear.nc', ''       , ''
   sn_prec     =   'ecmwf'   ,        6          , 'precip'  ,    .true.    , .true.  , 'daily'  ,'bicubic.nc' , ''       , ''

   cn_dir      = './ECMWF/'      !  root directory for the location of the bulk files
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_oasis3")
!-----------------------------------------------------------------------
!                    !     description       !  multiple  !    vector   !      vector          ! vector !
!                    !                       ! categories !  reference  !    orientation       ! grids  !
! send
   sn_snd_temp   =       'weighted oce and ice' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_alb    =       'weighted ice'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_thick  =       'none'                 ,    'no'   ,     ''      ,         ''           ,   ''
   sn_snd_crt    =       'none'                 ,    'no'    , 'spherical' , 'eastward-northward' ,  'T'
   sn_snd_co2    =       'coupled'              ,    'no'    ,     ''      ,         ''           ,   ''
! receive
   sn_rcv_w10m   =       'none'                 ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_taumod =       'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_tau    =       'oce only'             ,    'no'    , 'cartesian' , 'eastward-northward',  'U,V'
   sn_rcv_dqnsdt =       'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_qsr    =       'oce and ice'          ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_qns    =       'oce and ice'          ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_emp    =       'conservative'         ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_rnf    =       'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_cal    =       'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
   sn_rcv_co2    =       'coupled'              ,    'no'    ,     ''      ,         ''          ,   ''
!
   nn_cplmodel   =     1     !  Maximum number of models to/from which NEMO is potentialy sending/receiving data
   ln_usecplmask = .false.   !  use a coupling mask file to merge data received from several models
                             !   -> file cplmask.nc with the float variable called cplmask (jpi,jpj,nn_cplmodel)
/
!-----------------------------------------------------------------------
&namsbc_sas    !   analytical surface boundary condition
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_usp      = 'sas_grid_U' ,    120           , 'vozocrtx' ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_vsp      = 'sas_grid_V' ,    120           , 'vomecrty' ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_tem      = 'sas_grid_T' ,    120           , 'sosstsst' ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_sal      = 'sas_grid_T' ,    120           , 'sosaline' ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_ssh      = 'sas_grid_T' ,    120           , 'sossheig' ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_e3t      = 'sas_grid_T' ,    120           , 'e3t_m'    ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''
   sn_frq      = 'sas_grid_T' ,    120           , 'frq_m'    ,  .true.    , .true. ,   'yearly'  , ''       , ''             , ''

   ln_3d_uve   = .true.    !  specify whether we are supplying a 3D u,v and e3 field
   ln_read_frq = .false.    !  specify whether we must read frq or not
   cn_dir      = './'      !  root directory for the location of the bulk files are
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_chl      ='chlorophyll',        -1         , 'CHLA'    ,   .true.     , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the runoff files
   ln_traqsr   = .true.    !  Light penetration (T) or not (F)
   ln_qsr_rgb  = .true.    !  RGB (Red-Green-Blue) light penetration
   ln_qsr_2bd  = .false.   !  2 bands              light penetration
   ln_qsr_bio  = .false.   !  bio-model light penetration
   nn_chldta   =      1    !  RGB : 2D Chl data (=1), 3D Chl data (=2) or cst value (=0)
   rn_abs      =   0.58    !  RGB & 2 bands: fraction of light (rn_si1)
   rn_si0      =   0.35    !  RGB & 2 bands: shortess depth of extinction
   rn_si1      =   23.0    !  2 bands: longest depth of extinction
   ln_qsr_ice  = .true.    !  light penetration for ice-model LIM3
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs namelist surface boundary condition
!-----------------------------------------------------------------------
!              !  file name           ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                      !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_rnf      = 'runoff_core_monthly',        -1         , 'sorunoff',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_cnf      = 'runoff_core_monthly',         0         , 'socoefr0',   .false.    , .true. , 'yearly'  , ''       , ''       , ''
   sn_s_rnf    = 'runoffs'            ,        24         , 'rosaline',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_t_rnf    = 'runoffs'            ,        24         , 'rotemper',   .true.     , .true. , 'yearly'  , ''       , ''       , ''
   sn_dep_rnf  = 'runoffs'            ,         0         , 'rodepth' ,   .false.    , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir       = './'      !  root directory for the location of the runoff files
   ln_rnf_mouth = .true.    !  specific treatment at rivers mouths
   rn_hrnf      =  15.e0    !  depth over which enhanced vertical mixing is used
   rn_avt_rnf   =   1.e-3   !  value of the additional vertical mixing coef. [m2/s]
   rn_rfact     =   1.e0    !  multiplicative factor for runoff
   ln_rnf_depth = .false.   !  read in depth information for runoff
   ln_rnf_tem   = .false.   !  read in temperature information for runoff
   ln_rnf_sal   = .false.   !  read in salinity information for runoff
   ln_rnf_depth_ini = .false.  ! compute depth at initialisation from runoff file
   rn_rnf_max   = 5.735e-4  !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
   rn_dep_max   = 150.      !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
   nn_rnf_depth_file = 0    !  create (=1) a runoff depth file or not (=0)
/
!-----------------------------------------------------------------------
&namsbc_isf    !  Top boundary layer (ISF)
!-----------------------------------------------------------------------
!              ! file name ! frequency (hours) ! variable ! time interpol. !  clim   ! 'yearly'/ ! weights  ! rotation !
!              !           !  (if <0  months)  !   name   !    (logical)   !  (T/F)  ! 'monthly' ! filename ! pairing  !
! nn_isf == 4
   sn_qisf      = 'rnfisf' ,         -12      ,'sohflisf',    .false.      , .true.  , 'yearly'  ,  ''      ,   ''
   sn_fwfisf    = 'rnfisf' ,         -12      ,'sowflisf',    .false.      , .true.  , 'yearly'  ,  ''      ,   ''
! nn_isf == 3
   sn_rnfisf    = 'runoffs' ,         -12      ,'sofwfisf',    .false.      , .true.  , 'yearly'  ,  ''      ,   ''
! nn_isf == 2 and 3
   sn_depmax_isf = 'runoffs' ,       -12        ,'sozisfmax' ,   .false.  , .true.  , 'yearly'  ,  ''      ,   ''
   sn_depmin_isf = 'runoffs' ,       -12        ,'sozisfmin' ,   .false.  , .true.  , 'yearly'  ,  ''      ,   ''
! nn_isf == 2
   sn_Leff_isf = 'rnfisf' ,       0          ,'Leff'         ,   .false.  , .true.  , 'yearly'  ,  ''      ,   ''
! for all case
   ln_divisf   = .true.  ! apply isf melting as a mass flux or in the salinity trend. (maybe I should remove this option as for runoff?)
! only for nn_isf = 1 or 2
   rn_gammat0  = 1.0e-4   ! gammat coefficient used in blk formula
   rn_gammas0  = 1.0e-4   ! gammas coefficient used in blk formula
! only for nn_isf = 1
   nn_isfblk   =  1       ! 1 ISOMIP ; 2 conservative (3 equation formulation, Jenkins et al. 1991 ??)
   rn_hisf_tbl =  30.      ! thickness of the top boundary layer           (Losh et al. 2008)
                          ! 0 => thickness of the tbl = thickness of the first wet cell
   ln_conserve = .true.   ! conservative case (take into account meltwater advection)
   nn_gammablk = 1        ! 0 = cst Gammat (= gammat/s)
                          ! 1 = velocity dependend Gamma (u* * gammat/s)  (Jenkins et al. 2010)
                          !     if you want to keep the cd as in global config, adjust rn_gammat0 to compensate
                          ! 2 = velocity and stability dependent Gamma    Holland et al. 1999
/
!-----------------------------------------------------------------------
&namsbc_apr    !   Atmospheric pressure used as ocean forcing or in bulk
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_apr      = 'patm'      ,         -1        ,'somslpre',    .true.     , .true. , 'yearly'  ,  ''      ,   ''     , ''

   cn_dir      = './'       !  root directory for the location of the bulk files
   rn_pref     = 101000.    !  reference atmospheric pressure   [N/m2]/
   ln_ref_apr  = .false.    !  ref. pressure: global mean Patm (T) or a constant (F)
   ln_apr_obc  = .false.    !  inverse barometer added to OBC ssh data
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_sst      = 'sst_data'  ,        24         ,  'sst'    ,    .false.   , .false., 'yearly'  , ''       , ''       , ''
   sn_sss      = 'sss_data'  ,        -1         ,  'sss'    ,    .true.    , .true. , 'yearly'  , ''       , ''       , ''

   cn_dir      = './'      !  root directory for the location of the runoff files
   nn_sstr     =     0     !  add a retroaction term in the surface heat       flux (=1) or not (=0)
   nn_sssr     =     2     !  add a damping     term in the surface freshwater flux (=2)
                           !  or to SSS only (=1) or no damping term (=0)
   rn_dqdt     =   -40.    !  magnitude of the retroaction on temperature   [W/m2/K]
   rn_deds     =  -166.67  !  magnitude of the damping on salinity   [mm/day]
   ln_sssr_bnd =   .true.  !  flag to bound erp term (associated with nn_sssr=2)
   rn_sssr_bnd =   4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day]
/
!-----------------------------------------------------------------------
&namsbc_alb    !   albedo parameters
!-----------------------------------------------------------------------
   nn_ice_alb   =    1   !  parameterization of ice/snow albedo
                         !     0: Shine & Henderson-Sellers (JGR 1985), giving clear-sky albedo
                         !     1: "home made" based on Brandt et al. (JClim 2005) and Grenfell & Perovich (JGR 2004),
                         !        giving cloud-sky albedo
   rn_alb_sdry  =  0.85  !  dry snow albedo         : 0.80 (nn_ice_alb = 0); 0.85 (nn_ice_alb = 1); obs 0.85-0.87 (cloud-sky)
   rn_alb_smlt  =  0.75  !  melting snow albedo     : 0.65 ( '' )          ; 0.75 ( '' )          ; obs 0.72-0.82 ( '' )
   rn_alb_idry  =  0.60  !  dry ice albedo          : 0.72 ( '' )          ; 0.60 ( '' )          ; obs 0.54-0.65 ( '' )
   rn_alb_imlt  =  0.50  !  bare puddled ice albedo : 0.53 ( '' )          ; 0.50 ( '' )          ; obs 0.49-0.58 ( '' )
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters
!-----------------------------------------------------------------------
      ln_icebergs              = .false.
      ln_bergdia               = .true.               ! Calculate budgets
      nn_verbose_level         = 1                    ! Turn on more verbose output if level > 0
      nn_verbose_write         = 15                   ! Timesteps between verbose messages
      nn_sample_rate           = 1                    ! Timesteps between sampling for trajectory storage
                                                      ! Initial mass required for an iceberg of each class
      rn_initial_mass          = 8.8e7, 4.1e8, 3.3e9, 1.8e10, 3.8e10, 7.5e10, 1.2e11, 2.2e11, 3.9e11, 7.4e11
                                                      ! Proportion of calving mass to apportion to each class
      rn_distribution          = 0.24, 0.12, 0.15, 0.18, 0.12, 0.07, 0.03, 0.03, 0.03, 0.02
                                                      ! Ratio between effective and real iceberg mass (non-dim)
                                                      ! i.e. number of icebergs represented at a point
      rn_mass_scaling          = 2000, 200, 50, 20, 10, 5, 2, 1, 1, 1
                                                      ! thickness of newly calved bergs (m)
      rn_initial_thickness     = 40., 67., 133., 175., 250., 250., 250., 250., 250., 250.
      rn_rho_bergs             = 850.                 ! Density of icebergs
      rn_LoW_ratio             = 1.5                  ! Initial ratio L/W for newly calved icebergs
      ln_operator_splitting    = .true.               ! Use first order operator splitting for thermodynamics
      rn_bits_erosion_fraction = 0.                   ! Fraction of erosion melt flux to divert to bergy bits
      rn_sicn_shift            = 0.                   ! Shift of sea-ice concn in erosion flux (0<sicn_shift<1)
      ln_passive_mode          = .false.              ! iceberg - ocean decoupling
      nn_test_icebergs         =  10                  ! Create test icebergs of this class (-1 = no)
                                                      ! Put a test iceberg at each gridpoint in box (lon1,lon2,lat1,lat2)
      rn_test_box              = 108.0,  116.0, -66.0, -58.0
      rn_speed_limit           = 0.                   ! CFL speed limit for a berg

!              ! file name ! frequency (hours) !   variable   ! time interp.   !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !           !  (if <0  months)  !     name     !   (logical)    !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
      sn_icb =  'calving' ,       -1           , 'calvingmask',  .true.        , .true.  , 'yearly'  , ''       , ''       , ''

      cn_dir = './'
/

!!======================================================================
!!               ***  Lateral boundary condition  ***
!!======================================================================
!!   namlbc        lateral momentum boundary condition
!!   namcla        cross land advection
!!   namagrif      agrif nested grid ( read by child model only )       ("key_agrif")
!!   nambdy        Unstructured open boundaries                         ("key_bdy")
!!   namtide       Tidal forcing at open boundaries                     ("key_bdy_tides")
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition
!-----------------------------------------------------------------------
   rn_shlat    =    2.     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
                           !  free slip  !   partial slip  !   no slip   ! strong slip
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical eqs.
/
!-----------------------------------------------------------------------
&namcla        !   cross land advection
!-----------------------------------------------------------------------
   nn_cla      =    0      !  advection between 2 ocean pts separates by land
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
   nn_cln_update =    3    !  baroclinic update frequency
   ln_spc_dyn    = .true.  !  use 0 as special value for dynamics
   rn_sponge_tra = 2880.   !  coefficient for tracer   sponge layer [m2/s]
   rn_sponge_dyn = 2880.   !  coefficient for dynamics sponge layer [m2/s]
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters (#ifdef key_tide)
!-----------------------------------------------------------------------
   ln_tide_pot   = .true.   !  use tidal potential forcing
   ln_tide_ramp  = .false.  !
   rdttideramp   =    0.    !
   clname(1)     = 'DUMMY'  !  name of constituent - all tidal components must be set in namelist_cfg
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          ("key_bdy")
!-----------------------------------------------------------------------
    nb_bdy         = 0                    !  number of open boundary sets
    ln_coords_file = .true.               !  =T : read bdy coordinates from file
    cn_coords_file = 'coordinates.bdy.nc' !  bdy coordinates files
    ln_mask_file   = .false.              !  =T : read mask from file
    cn_mask_file   = ''                   !  name of mask file (if ln_mask_file=.TRUE.)
    cn_dyn2d       = 'none'               !
    nn_dyn2d_dta   =  0                   !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
                                          !  = 2, use tidal harmonic forcing data from files
                                          !  = 3, use external data AND tidal harmonic forcing
    cn_dyn3d      =  'none'               !
    nn_dyn3d_dta  =  0                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_tra        =  'none'               !
    nn_tra_dta    =  0                    !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    cn_ice_lim      =  'none'             !
    nn_ice_lim_dta  =  0                  !  = 0, bdy data are equal to the initial state
                                          !  = 1, bdy data are read in 'bdydata   .nc' files
    rn_ice_tem      = 270.                !  lim3 only: arbitrary temperature of incoming sea ice
    rn_ice_sal      = 10.                 !  lim3 only:      --   salinity           --
    rn_ice_age      = 30.                 !  lim3 only:      --   age                --

    ln_tra_dmp    =.false.                !  open boudaries conditions for tracers
    ln_dyn3d_dmp  =.false.                !  open boundary condition for baroclinic velocities
    rn_time_dmp   =  1.                   ! Damping time scale in days
    rn_time_dmp_out =  1.                 ! Outflow damping time scale
    nn_rimwidth   = 10                    !  width of the relaxation zone
    ln_vol        = .false.               !  total volume correction (see nn_volctl parameter)
    nn_volctl     = 1                     !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_dta      !  open boundaries - external data           ("key_bdy")
!-----------------------------------------------------------------------
!              !  file name      ! frequency (hours) ! variable   ! time interp.   !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                 !  (if <0  months)  !   name     !   (logical)    !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
   bn_ssh =     'amm12_bdyT_u2d' ,         24        , 'sossheig' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_u2d =     'amm12_bdyU_u2d' ,         24        , 'vobtcrtx' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_v2d =     'amm12_bdyV_u2d' ,         24        , 'vobtcrty' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_u3d  =    'amm12_bdyU_u3d' ,         24        , 'vozocrtx' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_v3d  =    'amm12_bdyV_u3d' ,         24        , 'vomecrty' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_tem  =    'amm12_bdyT_tra' ,         24        , 'votemper' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   bn_sal  =    'amm12_bdyT_tra' ,         24        , 'vosaline' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
! for lim2
!   bn_frld  =    'amm12_bdyT_ice' ,         24        , 'ileadfra' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
!   bn_hicif =    'amm12_bdyT_ice' ,         24        , 'iicethic' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
!   bn_hsnif =    'amm12_bdyT_ice' ,         24        , 'isnowthi' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
! for lim3
!   bn_a_i  =    'amm12_bdyT_ice' ,         24        , 'ileadfra' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
!   bn_ht_i =    'amm12_bdyT_ice' ,         24        , 'iicethic' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
!   bn_ht_s =    'amm12_bdyT_ice' ,         24        , 'isnowthi' ,     .true.     , .false. ,  'daily'  ,    ''    ,   ''     , ''
   cn_dir  =    'bdydta/'
   ln_full_vel = .false.
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
   filtide          = 'bdydta/amm12_bdytide_'         !  file name root of tidal forcing files
   ln_bdytide_2ddta = .false.
   ln_bdytide_conj  = .false.
/
!!======================================================================
!!                 ***  Bottom boundary condition  ***
!!======================================================================
!!   nambfr        bottom friction
!!   nambbc        bottom temperature boundary condition
!!   nambbl        bottom boundary layer scheme                         ("key_trabbl")
!!======================================================================
!
!-----------------------------------------------------------------------
&nambfr        !   bottom friction
!-----------------------------------------------------------------------
   nn_bfr      =    1      !  type of bottom friction :   = 0 : free slip,  = 1 : linear friction
                           !                              = 2 : nonlinear friction
   rn_bfri1    =    4.e-4  !  bottom drag coefficient (linear case)
   rn_bfri2    =    1.e-3  !  bottom drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_bfri2_max =   1.e-1  !  max. bottom drag coefficient (non linear case and ln_loglayer=T)
   rn_bfeb2    =    2.5e-3 !  bottom turbulent kinetic energy background  (m2/s2)
   rn_bfrz0    =    3.e-3  !  bottom roughness [m] if ln_loglayer=T
   ln_bfr2d    = .false.   !  horizontal variation of the bottom friction coef (read a 2D mask file )
   rn_bfrien   =    50.    !  local multiplying factor of bfr (ln_bfr2d=T)
   rn_tfri1    =    4.e-4  !  top drag coefficient (linear case)
   rn_tfri2    =    2.5e-3 !  top drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_tfri2_max =   1.e-1  !  max. top drag coefficient (non linear case and ln_loglayer=T)
   rn_tfeb2    =    0.0    !  top turbulent kinetic energy background  (m2/s2)
   rn_tfrz0    =    3.e-3  !  top roughness [m] if ln_loglayer=T
   ln_tfr2d    = .false.   !  horizontal variation of the top friction coef (read a 2D mask file )
   rn_tfrien   =    50.    !  local multiplying factor of tfr (ln_tfr2d=T)

   ln_bfrimp   = .true.    !  implicit bottom friction (requires ln_zdfexp = .false. if true)
   ln_loglayer = .false.   !  logarithmic formulation (non linear case)
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition
!-----------------------------------------------------------------------
!              !                              !  (if <0  months)  !  
!              !  file name      ! frequency (hours) ! variable   ! time interp.   !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !                 !  (if <0  months)  !   name     !   (logical)    !  (T/F ) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_qgh      ='geothermal_heating.nc',  -12.  , 'heatflow'      ,   .false.      , .true.  , 'yearly'  , ''       , ''       , ''
   !
   cn_dir      = './'      !  root directory for the location of the runoff files
   ln_trabbc   = .true.    !  Apply a geothermal heating at the ocean bottom
   nn_geoflx   =    2      !  geothermal heat flux: = 0 no flux
                           !     = 1 constant flux
                           !     = 2 variable flux (read in geothermal_heating.nc in mW/m2)
   rn_geoflx_cst = 86.4e-3 !  Constant value of geothermal heat flux [W/m2]

/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme
!-----------------------------------------------------------------------
   nn_bbl_ldf  =  1      !  diffusive bbl (=1)   or not (=0)
   nn_bbl_adv  =  0      !  advective bbl (=1/2) or not (=0)
   rn_ahtbbl   =  1000.  !  lateral mixing coefficient in the bbl  [m2/s]
   rn_gambbl   =  10.    !  advective bbl coefficient                 [s]
/

!!======================================================================
!!                        Tracer (T & S ) namelists
!!======================================================================
!!   nameos        equation of state
!!   namtra_adv    advection scheme
!!   namtra_adv_mle   mixed layer eddy param. (Fox-Kemper param.)
!!   namtra_ldf    lateral diffusion scheme
!!   namtra_dmp    T & S newtonian damping
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean physical parameters
!-----------------------------------------------------------------------
   nn_eos      =  -1     !  type of equation of state and Brunt-Vaisala frequency
                                 !  =-1, TEOS-10
                                 !  = 0, EOS-80
                                 !  = 1, S-EOS   (simplified eos)
   ln_useCT    = .true.  ! use of Conservative Temp. ==> surface CT converted in Pot. Temp. in sbcssm
   !                             !
   !                     ! S-EOS coefficients :
   !                             !  rd(T,S,Z)*rau0 = -a0*(1+.5*lambda*dT+mu*Z+nu*dS)*dT+b0*dS
   rn_a0       =  1.6550e-1      !  thermal expension coefficient (nn_eos= 1)
   rn_b0       =  7.6554e-1      !  saline  expension coefficient (nn_eos= 1)
   rn_lambda1  =  5.9520e-2      !  cabbeling coeff in T^2  (=0 for linear eos)
   rn_lambda2  =  7.4914e-4      !  cabbeling coeff in S^2  (=0 for linear eos)
   rn_mu1      =  1.4970e-4      !  thermobaric coeff. in T (=0 for linear eos)
   rn_mu2      =  1.1090e-5      !  thermobaric coeff. in S (=0 for linear eos)
   rn_nu       =  2.4341e-3      !  cabbeling coeff in T*S  (=0 for linear eos)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer
!-----------------------------------------------------------------------
   ln_traadv_cen2   =  .false.   !  2nd order centered scheme
   ln_traadv_tvd    =  .true.    !  TVD scheme
   ln_traadv_muscl  =  .false.   !  MUSCL scheme
   ln_traadv_muscl2 =  .false.   !  MUSCL2 scheme + cen2 at boundaries
   ln_traadv_ubs    =  .false.   !  UBS scheme
   ln_traadv_qck    =  .false.   !  QUICKEST scheme
   ln_traadv_msc_ups=  .false.   !  use upstream scheme within muscl
   ln_traadv_tvd_zts=  .false.  !  TVD scheme with sub-timestepping of vertical tracer advection
/
!-----------------------------------------------------------------------
&namtra_adv_mle !   mixed layer eddy parametrisation (Fox-Kemper param)
!-----------------------------------------------------------------------
   ln_mle    = .true.      ! (T) use the Mixed Layer Eddy (MLE) parameterisation
   rn_ce     = 0.06        ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_mle    = 1           ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_lf     = 5.e+3       ! typical scale of mixed layer front (meters)                      (case rn_mle=0)
   rn_time   = 172800.     ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_mle=0)
   rn_lat    = 20.         ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   nn_mld_uv = 0           ! space interpolation of MLD at u- & v-pts (0=min,1=averaged,2=max)
   nn_conv   = 0           ! =1 no MLE in case of convection ; =0 always MLE
   rn_rho_c_mle  = 0.01    ! delta rho criterion used to calculate MLD for FK
/
!----------------------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers
!----------------------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_lap    =  .true.   !  laplacian operator
   ln_traldf_bilap  =  .false.  !  bilaplacian operator
   !                       !  Direction of action:
   ln_traldf_level  =  .false.  !  iso-level
   ln_traldf_hor    =  .false.  !  horizontal (geopotential)   (needs "key_ldfslp" when ln_sco=T)
   ln_traldf_iso    =  .true.   !  iso-neutral                 (needs "key_ldfslp")
   !		       	   !  Griffies parameters              (all need "key_ldfslp")
   ln_traldf_grif   =  .false.  !  use griffies triads
   ln_traldf_gdia   =  .false.  !  output griffies eddy velocities
   ln_triad_iso     =  .false.  !  pure lateral mixing in ML
   ln_botmix_grif   =  .false.  !  lateral mixing on bottom
   !                       !  Coefficients
   ! Eddy-induced (GM) advection always used with Griffies; otherwise needs "key_traldf_eiv"
   ! Value rn_aeiv_0 is ignored unless = 0 with Held-Larichev spatially varying aeiv
   !                                  (key_traldf_c2d & key_traldf_eiv & key_orca_r2, _r1 or _r05)
   rn_aeiv_0        =  2000.    !  eddy induced velocity coefficient [m2/s]
   rn_aht_0         =  2000.    !  horizontal eddy diffusivity for tracers [m2/s]
   rn_ahtb_0        =     0.    !  background eddy diffusivity for ldf_iso [m2/s]
   !                                           (normally=0; not used with Griffies)
   rn_slpmax        =     0.01  !  slope limit
   rn_chsmag        =     1.    !  multiplicative factor in Smagorinsky diffusivity
   rn_smsh          =     1.    !  Smagorinsky diffusivity: = 0 - use only sheer
   rn_aht_m         =  2000.    !  upper limit or stability criteria for lateral eddy diffusivity (m2/s)
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping
!-----------------------------------------------------------------------
   ln_tradmp   =  .true.   !  add a damping termn (T) or not (F)
   nn_zdmp     =    0      !  vertical   shape =0    damping throughout the water column
                           !                   =1 no damping in the mixing layer (kz  criteria)
                           !                   =2 no damping in the mixed  layer (rho crieria)
   cn_resto    = 'resto.nc' ! Name of file containing restoration coefficient field (use dmp_tools to create this)
/

!!======================================================================
!!                      ***  Dynamics namelists  ***
!!======================================================================
!!   namdyn_adv    formulation of the momentum advection
!!   namdyn_vor    advection scheme
!!   namdyn_hpg    hydrostatic pressure gradient
!!   namdyn_spg    surface pressure gradient                            (CPP key only)
!!   namdyn_ldf    lateral diffusion scheme
!!======================================================================
!
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form (T) or flux form (F)
   nn_dynkeg     = 0       ! scheme for grad(KE): =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2= .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false. !  flux form - 3rd order UBS      scheme
   ln_dynzad_zts = .false. !  Use (T) sub timestepping for vertical momentum advection
/
!-----------------------------------------------------------------------
&nam_vvl    !   vertical coordinate options
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  zstar vertical coordinate
   ln_vvl_ztilde = .false.          !  ztilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor = .false.  !  ztilde near the equator
   rn_ahe3       = 0.0e0            !  thickness diffusion coefficient
   rn_rst_e3t    = 30.e0            !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  = 5.0e0            !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   = 0.9e0            !  maximum fractional e3t deformation
   ln_vvl_dbg    = .false.          !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_vor    !   option of physics/algorithm (not control by CPP keys)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  enstrophy conserving scheme
   ln_dynvor_ens = .false. !  energy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
   ln_dynvor_een_old = .false.  !  energy & enstrophy scheme - original formulation
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .true.    !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
   ln_dynhpg_imp = .false. !  time stepping: semi-implicit time scheme  (T)
                                 !           centered      time scheme  (F)
/
!-----------------------------------------------------------------------
!namdyn_spg    !   surface pressure gradient   (CPP key only)
!-----------------------------------------------------------------------
!                          !  explicit free surface                     ("key_dynspg_exp")
!                          !  filtered free surface                     ("key_dynspg_flt")
!                          !  split-explicit free surface               ("key_dynspg_ts")

!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_lap    =  .true.   !  laplacian operator
   ln_dynldf_bilap  =  .false.  !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_level  =  .false.  !  iso-level
   ln_dynldf_hor    =  .true.   !  horizontal (geopotential)            (require "key_ldfslp" in s-coord.)
   ln_dynldf_iso    =  .false.  !  iso-neutral                          (require "key_ldfslp")
   !                       !  Coefficient
   rn_ahm_0_lap     = 40000.    !  horizontal laplacian eddy viscosity   [m2/s]
   rn_ahmb_0        =     0.    !  background eddy viscosity for ldf_iso [m2/s]
   rn_ahm_0_blp     =     0.    !  horizontal bilaplacian eddy viscosity [m4/s]
   rn_cmsmag_1      =     3.    !  constant in laplacian Smagorinsky viscosity
   rn_cmsmag_2      =     3     !  constant in bilaplacian Smagorinsky viscosity
   rn_cmsh          =     1.    !  1 or 0 , if 0 -use only shear for Smagorinsky viscosity
   rn_ahm_m_blp     =    -1.e12 !  upper limit for bilap  abs(ahm) < min( dx^4/128rdt, rn_ahm_m_blp)
   rn_ahm_m_lap     = 40000.    !  upper limit for lap  ahm < min(dx^2/16rdt, rn_ahm_m_lap)
/

!!======================================================================
!!             Tracers & Dynamics vertical physics namelists
!!======================================================================
!!    namzdf            vertical physics
!!    namzdf_ric        richardson number dependent vertical mixing     ("key_zdfric")
!!    namzdf_tke        TKE dependent vertical mixing                   ("key_zdftke")
!!    namzdf_kpp        KPP dependent vertical mixing                   ("key_zdfkpp")
!!    namzdf_ddm        double diffusive mixing parameterization        ("key_zdfddm")
!!    namzdf_tmx        tidal mixing parameterization                   ("key_zdftmx")
!!    namzdf_tmx_new    new tidal mixing parameterization               ("key_zdftmx_new")
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics
!-----------------------------------------------------------------------
   rn_avm0     =   1.2e-4  !  vertical eddy viscosity   [m2/s]          (background Kz if not "key_zdfcst")
   rn_avt0     =   1.2e-5  !  vertical eddy diffusivity [m2/s]          (background Kz if not "key_zdfcst")
   nn_avb      =    0      !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0      !  horizontal shape for avtb (=1) or not (=0)
   ln_zdfevd   = .true.    !  enhanced vertical diffusion (evd) (T) or not (F)
   nn_evdm     =    0      !  evd apply on tracer (=0) or on tracer and momentum (=1)
   rn_avevd    =  100.     !  evd mixing coefficient [m2/s]
   ln_zdfnpc   = .false.   !  Non-Penetrative Convective algorithm (T) or not (F)
   nn_npc      =    1            !  frequency of application of npc
   nn_npcp     =  365            !  npc control print frequency
   ln_zdfexp   = .false.   !  time-stepping: split-explicit (T) or implicit (F) time stepping
   nn_zdfexp   =    3            !  number of sub-timestep for ln_zdfexp=T
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       ("key_zdfric" )
!-----------------------------------------------------------------------
   rn_avmri    = 100.e-4   !  maximum value of the vertical viscosity
   rn_alp      =   5.      !  coefficient of the parameterization
   nn_ric      =   2       !  coefficient of the parameterization
   rn_ekmfc    =   0.7     !  Factor in the Ekman depth Equation
   rn_mldmin   =   1.0     !  minimum allowable mixed-layer depth estimate (m)
   rn_mldmax   =1000.0     !  maximum allowable mixed-layer depth estimate (m)
   rn_wtmix    =  10.0     !  vertical eddy viscosity coeff [m2/s] in the mixed-layer
   rn_wvmix    =  10.0     !  vertical eddy diffusion coeff [m2/s] in the mixed-layer
   ln_mldw     = .true.    !  Flag to use or not the mized layer depth param.
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  ("key_zdftke")
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-6   !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_mxl      =   2       !  mixing length: = 0 bounded by the distance to surface and bottom
                           !                 = 1 bounded by the local vertical scale factor
                           !                 = 2 first vertical derivative of mixing length bounded by 1
                           !                 = 3 as =2 with distinct disspipative an mixing length scale
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   ln_mxl0     = .true.    !  surface mixing length scale = F(wind stress) (T) or not (F)
   rn_mxl0     =   0.04    !  surface  buoyancy lenght scale minimum value
   ln_lc       = .true.    !  Langmuir cell parameterisation (Axell 2002)
   rn_lc       =   0.15    !  coef. associated to Langmuir cells
   nn_etau     =   1       !  penetration of tke below the mixed layer (ML) due to internal & intertial waves
                           !        = 0 no penetration
                           !        = 1 add a tke source below the ML
                           !        = 2 add a tke source just at the base of the ML
                           !        = 3 as = 1 applied on HF part of the stress    ("key_oasis3")
   rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
   nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
                           !        = 0  constant 10 m length scale
                           !        = 1  0.5m at the equator to 30m poleward of 40 degrees
/
!------------------------------------------------------------------------
&namzdf_kpp    !   K-Profile Parameterization dependent vertical mixing  ("key_zdfkpp", and optionally:
!------------------------------------------------------------------------ "key_kppcustom" or "key_kpplktb")
   ln_kpprimix = .true.    !  shear instability mixing
   rn_difmiw   =  1.0e-04  !  constant internal wave viscosity [m2/s]
   rn_difsiw   =  0.1e-04  !  constant internal wave diffusivity [m2/s]
   rn_riinfty  =  0.8      !  local Richardson Number limit for shear instability
   rn_difri    =  0.0050   !  maximum shear mixing at Rig = 0    [m2/s]
   rn_bvsqcon  = -0.01e-07 !  Brunt-Vaisala squared for maximum convection [1/s2]
   rn_difcon   =  1.       !  maximum mixing in interior convection [m2/s]
   nn_avb      =  0        !  horizontal averaged (=1) or not (=0) on avt and amv
   nn_ave      =  1        !  constant (=0) or profile (=1) background on avt
/
!-----------------------------------------------------------------------
&namzdf_gls                !   GLS vertical diffusion                   ("key_zdfgls")
!-----------------------------------------------------------------------
   rn_emin       = 1.e-7   !  minimum value of e   [m2/s2]
   rn_epsmin     = 1.e-12  !  minimum value of eps [m2/s3]
   ln_length_lim = .true.  !  limit on the dissipation rate under stable stratification (Galperin et al., 1988)
   rn_clim_galp  = 0.267   !  galperin limit
   ln_sigpsi     = .true.  !  Activate or not Burchard 2001 mods on psi schmidt number in the wb case
   rn_crban      = 100.    !  Craig and Banner 1994 constant for wb tke flux
   rn_charn      = 70000.  !  Charnock constant for wb induced roughness length
   rn_hsro       =  0.02   !  Minimum surface roughness
   rn_frac_hs    =   1.3   !  Fraction of wave height as roughness (if nn_z0_met=2)
   nn_z0_met     =     2   !  Method for surface roughness computation (0/1/2)
   nn_bc_surf    =     1   !  surface condition (0/1=Dir/Neum)
   nn_bc_bot     =     1   !  bottom condition (0/1=Dir/Neum)
   nn_stab_func  =     2   !  stability function (0=Galp, 1= KC94, 2=CanutoA, 3=CanutoB)
   nn_clos       =     1   !  predefined closure type (0=MY82, 1=k-eps, 2=k-w, 3=Gen)
/
!-----------------------------------------------------------------------
&namzdf_ddm    !   double diffusive mixing parameterization             ("key_zdfddm")
!-----------------------------------------------------------------------
   rn_avts     = 1.e-4     !  maximum avs (vertical mixing on salinity)
   rn_hsbfr    = 1.6       !  heat/salt buoyancy flux ratio
/
!-----------------------------------------------------------------------
&namzdf_tmx    !   tidal mixing parameterization                        ("key_zdftmx")
!-----------------------------------------------------------------------
   rn_htmx     = 500.      !  vertical decay scale for turbulence (meters)
   rn_n2min    = 1.e-8     !  threshold of the Brunt-Vaisala frequency (s-1)
   rn_tfe      = 0.333     !  tidal dissipation efficiency
   rn_me       = 0.2       !  mixing efficiency
   ln_tmx_itf  = .true.    !  ITF specific parameterisation
   rn_tfe_itf  = 1.        !  ITF tidal dissipation efficiency
/
!-----------------------------------------------------------------------
&namzdf_tmx_new    !   new tidal mixing parameterization                ("key_zdftmx_new")
!-----------------------------------------------------------------------
   nn_zpyc     = 2         !  pycnocline-intensified dissipation scales as N (=1) or N^2 (=2)
   ln_mevar    = .true.    !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   = .true.    !  account for differential T/S mixing (T) or not (F)
/
!!======================================================================
!!                  ***  Miscellaneous namelists  ***
!!======================================================================
!!   namsol            elliptic solver / island / free surface
!!   nammpp            Massively Parallel Processing                    ("key_mpp_mpi)
!!   namctl            Control prints & Benchmark
!!   namc1d            1D configuration options                         ("key_c1d")
!!   namc1d_uvd        data: U & V currents                             ("key_c1d")
!!   namc1d_dyndmp     U & V newtonian damping                          ("key_c1d")
!!   namsto            Stochastic parametrization of EOS
!!======================================================================
!
!-----------------------------------------------------------------------
&namsol        !   elliptic solver / island / free surface
!-----------------------------------------------------------------------
   nn_solv     =      1    !  elliptic solver: =1 preconditioned conjugate gradient (pcg)
                           !                   =2 successive-over-relaxation (sor)
   nn_sol_arp  =      0    !  absolute/relative (0/1) precision convergence test
   rn_eps      =  1.e-6    !  absolute precision of the solver
   nn_nmin     =    300    !  minimum of iterations for the SOR solver
   nn_nmax     =    800    !  maximum of iterations for the SOR solver
   nn_nmod     =     10    !  frequency of test for the SOR solver
   rn_resmax   =  1.e-10   !  absolute precision for the SOR solver
   rn_sor      =  1.92     !  optimal coefficient for SOR solver (to be adjusted with the domain)
/
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi)
!-----------------------------------------------------------------------
   cn_mpi_send =  'I'                !  mpi send/recieve type   ='S', 'B', or 'I' for standard send,
                                     !  buffer blocking send or immediate non-blocking sends, resp.
   nn_buffer   =   0                 !  size in bytes of exported buffer ('B' case), 0 no exportation
   ln_nnogather=  .true.             !  activate code to avoid mpi_allgather use at the northfold
   jpni        =   ${nem_jpni:-0}    !  jpni   number of processors following i (set automatically if < 1)
   jpnj        =   ${nem_jpnj:-0}    !  jpnj   number of processors following j (set automatically if < 1)
   jpnij       =   ${nem_numproc:-0} !  jpnij  number of local domains (set automatically if < 1)
/
!-----------------------------------------------------------------------
&namctl        !   Control prints & Benchmark
!-----------------------------------------------------------------------
   ln_ctl      = .false.   !  trends control print (expensive!)
   nn_print    =    0      !  level of print (0 no extra print)
   nn_ictls    =    0      !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0      !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0      !  start j indice of control               over a subdomain)
   nn_jctle    =    0      !  end   j indice of control
   nn_isplt    =    1      !  number of processors in i-direction
   nn_jsplt    =    1      !  number of processors in j-direction
   nn_bench    =    0      !  Bench mode (1/0): CAUTION use zero except for bench
                           !     (no physical validity of the results)
   nn_timing   =    0      !  timing by routine activated (=1) creates timing.output file, or not (=0)
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 ("key_c1d")
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name    !   (logical)  !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_ucur     = 'ucurrent'  ,         -1        ,'u_current',   .false.    , .true. , 'monthly' ,  ''      ,  'Ume'   , ''
   sn_vcur     = 'vcurrent'  ,         -1        ,'v_current',   .false.    , .true. , 'monthly' ,  ''      ,  'Vme'   , ''
!
   cn_dir        = './'    !  root directory for the location of the files
   ln_uvd_init   = .false. !  Initialisation of ocean U & V with U & V input data (T) or not (F)
   ln_uvd_dyndmp = .false. !  damping of ocean U & V toward U & V input data (T) or not (F)
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              ("key_c1d")
!-----------------------------------------------------------------------
   ln_dyndmp   =  .false.  !  add a damping term (T) or not (F)
/
!-----------------------------------------------------------------------
&namsto       ! Stochastic parametrization of EOS
!-----------------------------------------------------------------------
   ln_rststo = .false.           ! start from mean parameter (F) or from restart file (T)
   ln_rstseed = .true.           ! read seed of RNG from restart file
   cn_storst_in  = "restart_sto" !  suffix of stochastic parameter restart file (input)
   cn_storst_out = "restart_sto" !  suffix of stochastic parameter restart file (output)

   ln_sto_eos = .false.          ! stochastic equation of state
   nn_sto_eos = 1                ! number of independent random walks
   rn_eos_stdxy = 1.4            ! random walk horz. standard deviation (in grid points)
   rn_eos_stdz  = 0.7            ! random walk vert. standard deviation (in grid points)
   rn_eos_tcor  = 1440.0         ! random walk time correlation (in timesteps)
   nn_eos_ord  = 1               ! order of autoregressive processes
   nn_eos_flt  = 0               ! passes of Laplacian filter
   rn_eos_lim  = 2.0             ! limitation factor (default = 3.0)
/

!!======================================================================
!!                  ***  Diagnostics namelists  ***
!!======================================================================
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!   namtrd       dynamics and/or tracer trends
!!   namptr       Poleward Transport Diagnostics
!!   namflo       float parameters                                      ("key_float")
!!   namhsb       Heat and salt budgets
!!======================================================================
!
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i=   4       !  number of chunks in i-dimension
   nn_nchunks_j=   4       !  number of chunks in j-dimension
   nn_nchunks_k=   31      !  number of chunks in k-dimension
                           !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
                           !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
                           !  (F) ignore chunking information and produce netcdf3-compatible files
/
!-----------------------------------------------------------------------
&namtrd        !   diagnostics on dynamics and/or tracer trends
!              !       and/or mixed-layer trends and/or barotropic vorticity
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.   ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.    ! (T) 3D momentum trend output
   ln_dyn_mxl  = .FALSE.   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .FALSE.   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.    ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 365       !  print frequency (ln_glo_trd=T) (unit=time step)
/
!!gm   nn_ctls     =   0       !  control surface type in mixed-layer trends (0,1 or n<jpk)
!!gm   rn_ucf      =   1.      !  unit conversion factor (=1 -> /seconds ; =86400. -> /day)
!!gm   cn_trdrst_in      = "restart_mld"   ! suffix of ocean restart name (input)
!!gm   cn_trdrst_out     = "restart_mld"   ! suffix of ocean restart name (output)
!!gm   ln_trdmld_restart = .false.         !  restart for ML diagnostics
!!gm   ln_trdmld_instant = .false.         !  flag to diagnose trends of instantantaneous or mean ML T/S
!!gm
!-----------------------------------------------------------------------
&namflo       !   float parameters                                      ("key_float")
!-----------------------------------------------------------------------
   jpnfl         = 1          !  total number of floats during the run
   jpnnewflo     = 0          !  number of floats for the restart
   ln_rstflo     = .false.    !  float restart (T) or not (F)
   nn_writefl    =      75    !  frequency of writing in float output file
   nn_stockfl    =    5475    !  frequency of creation of the float restart file
   ln_argo       = .false.    !  Argo type floats (stay at the surface each 10 days)
   ln_flork4     = .false.    !  trajectories computed with a 4th order Runge-Kutta (T)
                              !  or computed with 'Blanke' scheme (F)
   ln_ariane     = .true.     !  Input with Ariane tool convention(T)
   ln_flo_ascii  = .true.     !  Output with Ariane tool netcdf convention(F) or ascii file (T)
/
!-----------------------------------------------------------------------
&namptr       !   Poleward Transport Diagnostic
!-----------------------------------------------------------------------
   ln_diaptr  = .true.      !  Poleward heat and salt transport (T) or not (F)
   ln_subbas  = .true.      !  Atlantic/Pacific/Indian basins computation (T) or not
/
!-----------------------------------------------------------------------
&namhsb       !  Heat and salt budgets
!-----------------------------------------------------------------------
   ln_diahsb  = .false.    !  check the heat and salt budgets (T) or not (F)
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents ('key_diaharm')
!-----------------------------------------------------------------------
    nit000_han = 1         ! First time step used for harmonic analysis
    nitend_han = 75        ! Last time step used for harmonic analysis
    nstep_han  = 15        ! Time step frequency for harmonic analysis
    tname(1)   = 'M2'      ! Name of tidal constituents
    tname(2)   = 'K1'
/
!-----------------------------------------------------------------------
&namdct        ! transports through sections
!-----------------------------------------------------------------------
    nn_dct      = 15       !  time step frequency for transports computing
    nn_dctwri   = 15       !  time step frequency for transports writing
    nn_secdebug = 112      !      0 : no section to debug
                           !     -1 : debug all section
                           !  0 < n : debug section number n
/

!!======================================================================
!!            ***  Observation & Assimilation namelists ***
!!======================================================================
!!   namobs       observation and model comparison                      ('key_diaobs')
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!-----------------------------------------------------------------------
&namobs       !  observation usage switch                               ('key_diaobs')
!-----------------------------------------------------------------------
   ln_t3d     = .false.    ! Logical switch for T profile observations
   ln_s3d     = .false.    ! Logical switch for S profile observations
   ln_ena     = .false.    ! Logical switch for ENACT insitu data set
   ln_cor     = .false.    ! Logical switch for Coriolis insitu data set
   ln_profb   = .false.    ! Logical switch for feedback insitu data set
   ln_sla     = .false.    ! Logical switch for SLA observations
   ln_sladt   = .false.    ! Logical switch for AVISO SLA data
   ln_slafb   = .false.    ! Logical switch for feedback SLA data
   ln_ssh     = .false.    ! Logical switch for SSH observations
   ln_sst     = .false.    ! Logical switch for SST observations
   ln_reysst  = .false.    ! Logical switch for Reynolds observations
   ln_ghrsst  = .false.    ! Logical switch for GHRSST observations
   ln_sstfb   = .false.    ! Logical switch for feedback SST data
   ln_sss     = .false.    ! Logical switch for SSS observations
   ln_seaice  = .false.    ! Logical switch for Sea Ice observations
   ln_vel3d   = .false.    ! Logical switch for velocity observations
   ln_velavcur= .false     ! Logical switch for velocity daily av. cur.
   ln_velhrcur= .false     ! Logical switch for velocity high freq. cur.
   ln_velavadcp = .false.  ! Logical switch for velocity daily av. ADCP
   ln_velhradcp = .false.  ! Logical switch for velocity high freq. ADCP
   ln_velfb   = .false.    ! Logical switch for feedback velocity data
   ln_grid_global = .false. ! Global distribtion of observations
   ln_grid_search_lookup = .false. !  Logical switch for obs grid search w/lookup table
   grid_search_file = 'grid_search'  !  Grid search lookup file header
! All of the *files* variables below are arrays. Use namelist_cfg to add more files
   enactfiles = 'enact.nc' !  ENACT input observation file names (specify full array in namelist_cfg)
   coriofiles = 'corio.nc' !  Coriolis input observation file name
   profbfiles = 'profiles_01.nc' ! Profile feedback input observation file name
   ln_profb_enatim = .false !        Enact feedback input time setting switch
   slafilesact = 'sla_act.nc' !  Active SLA input observation file names
   slafilespas = 'sla_pass.nc' ! Passive SLA input observation file names
   slafbfiles = 'sla_01.nc' ! slafbfiles: Feedback SLA input observation file names
   sstfiles = 'ghrsst.nc'   ! GHRSST input observation file names
   sstfbfiles = 'sst_01.nc' ! Feedback SST input observation file names
   seaicefiles = 'seaice_01.nc' ! Sea Ice input observation file names
   velavcurfiles = 'velavcurfile.nc'  ! Vel. cur. daily av. input file name
   velhrcurfiles = 'velhrcurfile.nc'  ! Vel. cur. high freq. input file name
   velavadcpfiles = 'velavadcpfile.nc' ! Vel. ADCP daily av. input file name
   velhradcpfiles = 'velhradcpfile.nc' ! Vel. ADCP high freq. input file name
   velfbfiles = 'velfbfile.nc' ! Vel. feedback input observation file name
   dobsini = 20000101.000000  !  Initial date in window YYYYMMDD.HHMMSS
   dobsend = 20010101.000000  !  Final date in window YYYYMMDD.HHMMSS
   n1dint = 0  !               Type of vertical interpolation method
   n2dint = 0  !               Type of horizontal interpolation method
   ln_nea = .false.   !        Rejection of observations near land switch
   nmsshc     = 0     !        MSSH correction scheme
   mdtcorr = 1.61     !        MDT  correction
   mdtcutoff = 65.0   !        MDT cutoff for computed correction
   ln_altbias = .false.    ! Logical switch for alt bias
   ln_ignmis  = .true.     ! Logical switch for ignoring missing files
   endailyavtypes = 820    ! ENACT daily average types - array (use namelist_cfg to set more values)
/
!-----------------------------------------------------------------------
&nam_asminc   !   assimilation increments                               ('key_asminc')
!-----------------------------------------------------------------------
    ln_bkgwri = .false.    !  Logical switch for writing out background state
    ln_trainc = .false.    !  Logical switch for applying tracer increments
    ln_dyninc = .false.    !  Logical switch for applying velocity increments
    ln_sshinc = .false.    !  Logical switch for applying SSH increments
    ln_asmdin = .false.    !  Logical switch for Direct Initialization (DI)
    ln_asmiau = .false.    !  Logical switch for Incremental Analysis Updating (IAU)
    nitbkg    = 0          !  Timestep of background in [0,nitend-nit000-1]
    nitdin    = 0          !  Timestep of background for DI in [0,nitend-nit000-1]
    nitiaustr = 1          !  Timestep of start of IAU interval in [0,nitend-nit000-1]
    nitiaufin = 15         !  Timestep of end of IAU interval in [0,nitend-nit000-1]
    niaufn    = 0          !  Type of IAU weighting function
    ln_salfix = .false.    !  Logical switch for ensuring that the sa > salfixmin
    salfixmin = -9999      !  Minimum salinity after applying the increments
    nn_divdmp = 0          !  Number of iterations of divergence damping operator
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model
!-----------------------------------------------------------------------
!              !  file name  ! frequency (hours) ! variable     ! time interp. !  clim   ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!              !             !  (if <0  months)  !   name       !   (logical)  !  (T/F)  ! 'monthly' ! filename ! pairing  ! filename      !
   sn_cdg      =  'cdg_wave' ,        1          , 'drag_coeff' ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_usd      =  'sdw_wave' ,        1          , 'u_sd2d'     ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_vsd      =  'sdw_wave' ,        1          , 'v_sd2d'     ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
   sn_wn       =  'sdw_wave' ,        1          , 'wave_num'   ,     .true.   , .false. , 'daily'   ,  ''      , ''       , ''
!
   cn_dir_cdg  = './'  !  root directory for the location of drag coefficient files
/
!-----------------------------------------------------------------------
&namdyn_nept  !   Neptune effect (simplified: lateral and vertical diffusions removed)
!-----------------------------------------------------------------------
   ! Suggested lengthscale values are those of Eby & Holloway (1994) for a coarse model
   ln_neptsimp       = .false.  ! yes/no use simplified neptune

   ln_smooth_neptvel = .false.  ! yes/no smooth zunep, zvnep
   rn_tslse          =  1.2e4   ! value of lengthscale L at the equator
   rn_tslsp          =  3.0e3   ! value of lengthscale L at the pole
   ! Specify whether to ramp down the Neptune velocity in shallow
   ! water, and if so the depth range controlling such ramping down
   ln_neptramp       = .true.   ! ramp down Neptune velocity in shallow water
   rn_htrmin         =  100.0   ! min. depth of transition range
   rn_htrmax         =  200.0   ! max. depth of transition range
/
EOF
++ cat
+ has_config ifs nemo
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo-ORCA025L75-coupled.cfg.sh
# namelist.nemo-ORCA1L46.cfg.sh writes the NEMO namelist for ORCA1L46 in
# coupled mode to standard output. This namelist will overwrite the reference
# namelist (namelist.nemo.ref.sh). Hence, only parameters specific to the
# ORCA1L46/coupled configuration should be specified here.

cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OPA  Configuration namelist : used to overwrite defaults values defined in SHARED/namelist_ref
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!                   ***  Run management namelists  ***
!!======================================================================
!!   namrun       parameters of the run
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_leapy      =  1             !  Leap year calendar (1) or not (0)
/
!
!!======================================================================
!!                      ***  Domain namelists  ***
!!======================================================================
!!   namcfg       parameters of the configuration
!!   namzgr       vertical coordinate
!!   namzgr_sco   s-coordinate or hybrid z-s-coordinate
!!   namdom       space and time domain (bathymetry, mesh, timestep)
!!   namtsd       data: temperature & salinity
!!======================================================================
!
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration
!-----------------------------------------------------------------------
   cp_cfg      =  "orca"               !  name of the configuration
   jp_cfg      =     025               !  resolution of the configuration
   jpidta      =    1442               !  1st lateral dimension ( >= jpi )
   jpjdta      =    1050               !  2nd    "         "    ( >= jpj )
   jpkdta      =      75               !  number of levels      ( >= jpk )
   jpiglo      =    1442               !  1st dimension of global domain --> i =jpidta
   jpjglo      =    1050               !  2nd    -                  -    --> j  =jpjdta
   jperio      =       4               !  lateral cond. type (between 0 and 6)
                                       !  = 0 closed                 ;   = 1 cyclic East-West
                                       !  = 2 equatorial symmetric   ;   = 3 North fold T-point pivot
                                       !  = 4 cyclic East-West AND North fold T-point pivot
                                       !  = 5 North fold F-point pivot
                                       !  = 6 cyclic East-West AND North fold F-point pivot
/
!-----------------------------------------------------------------------
&namzgr        !   vertical coordinate
!-----------------------------------------------------------------------
   ln_zco      = .false.   !  z-coordinate - full    steps   (T/F)      ("key_zco" may also be defined)
   ln_zps      = .true.    !  z-coordinate - partial steps   (T/F)
   ln_sco      = .false.   !  s- or hybrid z-s-coordinate    (T/F)
   ln_isfcav   = .false.   !  ice shelf cavity               (T/F)
/
!-----------------------------------------------------------------------
&namzgr_sco    !   s-coordinate or hybrid z-s-coordinate
!-----------------------------------------------------------------------
   ln_s_sh94   = .true.    !  Song & Haidvogel 1994 hybrid S-sigma   (T)|
   ln_s_sf12   = .false.   !  Siddorn & Furner 2012 hybrid S-z-sigma (T)| if both are false the NEMO tanh stretching is applied
   ln_sigcrit  = .false.   !  use sigma coordinates below critical depth (T) or Z coordinates (F) for Siddorn & Furner stretch
                           !  stretching coefficients for all functions
   rn_sbot_min =   10.0    !  minimum depth of s-bottom surface (>0) (m)
   rn_sbot_max = 7000.0    !  maximum depth of s-bottom surface (= ocean depth) (>0) (m)
   rn_hc       =  150.0    !  critical depth for transition to stretched coordinates
                        !!!!!!!  Envelop bathymetry
   rn_rmax     =    0.3    !  maximum cut-off r-value allowed (0<r_max<1)
                        !!!!!!!  SH94 stretching coefficients  (ln_s_sh94 = .true.)
   rn_theta    =    6.0    !  surface control parameter (0<=theta<=20)
   rn_bb       =    0.8    !  stretching with SH94 s-sigma
                        !!!!!!!  SF12 stretching coefficient  (ln_s_sf12 = .true.)
   rn_alpha    =    4.4    !  stretching with SF12 s-sigma
   rn_efold    =    0.0    !  efold length scale for transition to stretched coord
   rn_zs       =    1.0    !  depth of surface grid box
                           !  bottom cell depth (Zb) is a linear function of water depth Zb = H*a + b
   rn_zb_a     =    0.024  !  bathymetry scaling factor for calculating Zb
   rn_zb_b     =   -0.2    !  offset for calculating Zb
                        !!!!!!!! Other stretching (not SH94 or SF12) [also uses rn_theta above]
   rn_thetb    =    1.0    !  bottom control parameter  (0<=thetb<= 1)
/
!-----------------------------------------------------------------------
&namdom        !   space and time domain (bathymetry, mesh, timestep)
!-----------------------------------------------------------------------
   rn_hmin     =   10.     !  min depth of the ocean (>0) or min number of ocean level (<0)
   rn_e3zps_min=   25.     !  partial step thickness is set larger than the minimum of
   rn_e3zps_rat=    0.1    !  rn_e3zps_min and rn_e3zps_rat*e3t, with 0<rn_e3zps_rat<1
                           !
   rn_rdt      = ${nem_time_step_sec} !  time step for the dynamics (and tracer if nn_acc=0)
   rn_atfp     =    0.1    !  asselin time filter parameter
   nn_acc      =    0      !  acceleration of convergence : =1      used, rdt < rdttra(k)
                                 !                          =0, not used, rdt = rdttra
   rn_rdtmin   = 28800.          !  minimum time step on tracers (used if nn_acc=1)
   rn_rdtmax   = 28800.          !  maximum time step on tracers (used if nn_acc=1)
   rn_rdth     =  800.           !  depth variation of tracer time step  (used if nn_acc=1)
   ln_crs      = .false.      !  Logical switch for coarsening module
   jphgr_msh   =       0               !  type of horizontal mesh
                                       !  = 0 curvilinear coordinate on the sphere read in coordinate.nc
                                       !  = 1 geographical mesh on the sphere with regular grid-spacing
                                       !  = 2 f-plane with regular grid-spacing
                                       !  = 3 beta-plane with regular grid-spacing
                                       !  = 4 Mercator grid with T/U point at the equator
   ppglam0     =  999999.0             !  longitude of first raw and column T-point (jphgr_msh = 1)
   ppgphi0     =  999999.0             ! latitude  of first raw and column T-point (jphgr_msh = 1)
   ppe1_deg    =  999999.0             !  zonal      grid-spacing (degrees)
   ppe2_deg    =  999999.0             !  meridional grid-spacing (degrees)
   ppe1_m      =  999999.0             !  zonal      grid-spacing (degrees)
   ppe2_m      =  999999.0             !  meridional grid-spacing (degrees)
   ppsur       =   -3958.951371276829  !  ORCA r4, r2 and r05 coefficients
   ppa0        =     103.9530096000000 ! (default coefficients)
   ppa1        =       2.415951269000000   !
   ppkth       =      15.35101370000000    !
   ppacr       =       7.0             !
   ppdzmin     =  999999.0             !  Minimum vertical spacing
   pphmax      =  999999.0             !  Maximum depth
   ldbletanh   =    .TRUE.             !  Use/do not use double tanf function for vertical coordinates
   ppa2        =      100.760928500000 !  Double tanh function parameters
   ppkth2      =       48.029893720000 !
   ppacr2      =       13.000000000000 !
/
!-----------------------------------------------------------------------
&namsplit      !   time splitting parameters                            ("key_dynspg_ts")
!-----------------------------------------------------------------------
   ln_bt_fw      =    .TRUE.           !  Forward integration of barotropic equations
   ln_bt_av      =    .TRUE.           !  Time filtering of barotropic variables
   ln_bt_nn_auto =    .TRUE.           !  Set nn_baro automatically to be just below
                                       !  a user defined maximum courant number (rn_bt_cmax)
   nn_baro       =    80               !  Number of iterations of barotropic mode
                                       !  during rn_rdt seconds. Only used if ln_bt_nn_auto=F
   rn_bt_cmax    =    0.7              !  Maximum courant number allowed if ln_bt_nn_auto=T 
   nn_bt_flt     =    1                !  Time filter choice
                                       !  = 0 None
                                       !  = 1 Boxcar over   nn_baro barotropic steps
                                       !  = 2 Boxcar over 2*nn_baro     "        "
/
!-----------------------------------------------------------------------
&namcrs        !   Grid coarsening for dynamics output and/or
               !   passive tracer coarsened online simulations
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtsd    !   data : Temperature  & Salinity
!-----------------------------------------------------------------------
!          !  file name    ! frequency (hours) ! variable  ! time interp. !  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
!          !               ! (if <0  months)   !  name     ! (logical)    !  (T/F) ! 'monthly' ! filename ! pairing  ! filename      !
   sn_tem  = 'conservative_temperature_WOA13_decav_Reg1L75_clim', -1 ,'votemper' , .true. , .true. , 'yearly' , 'weights_WOA13d1_2_orca025_bilinear.nc' , '' , ''
   sn_sal  = 'absolute_salinity_WOA13_decav_Reg1L75_clim'       , -1 ,'vosaline' , .true. , .true. , 'yearly' , 'weights_WOA13d1_2_orca025_bilinear.nc' , '' , ''
   ln_tsd_tradmp = ${ln_tsd_tradmp}  !  damping of ocean T & S toward T &S input data (T) or not (F)
/
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition (surface module)
!-----------------------------------------------------------------------
   nn_fsbc     = $(( lim_time_step_sec / nem_time_step_sec )) !  frequency of surface boundary condition computation
                           !     (also = the frequency of sea-ice model call)
   ln_blk_core = .false.   !  CORE bulk formulation                     (T => fill namsbc_core)
   ln_cpl      = .true.    !  Coupled formulation                       (T => fill namsbc_cpl )
   nn_ice_embd = 1         !  =0 levitating ice (no mass exchange, concentration/dilution effect)
                           !  =1 levitating ice with mass and salt exchange but no presure effect
                           !  =2 embedded sea-ice (full salt and mass exchanges and pressure)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_rnf      = .true.    !  runoffs                                   (T   => fill namsbc_rnf)
   nn_isf      = 0         !  ice shelf melting/freezing                (/=0 => fill namsbc_isf)
                           !  0 =no isf                  1 = presence of ISF
                           !  2 = bg03 parametrisation   3 = rnf file for isf
                           !  4 = ISF fwf specified
                           !  option 1 and 4 need ln_isfcav = .true. (domzgr)
   ln_ssr      = ${ln_ssr} !  Sea Surface Restoring on T and/or S (T => fill namsbc_ssr)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked
                           !     =1 global mean of e-p-r set to zero at each time step
                           !     =2 annual global mean of e-p-r set to zero
   nn_limflx   =  2        !  LIM3 Multi-category heat flux formulation (use -1 if LIM3 is not used)
                           !  =-1  Use per-category fluxes, bypass redistributor, forced mode only, not yet implemented coupled
                           !  = 0  Average per-category fluxes (forced and coupled mode)
                           !  = 1  Average and redistribute per-category fluxes, forced mode only, not yet implemented coupled
                           !  = 2  Redistribute a single flux over categories (coupled mode only)
/
!-----------------------------------------------------------------------
&namsbc_ana    !   analytical surface boundary condition
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_flx    !   surface boundary condition : flux formulation
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_clio   !   namsbc_clio  CLIO bulk formulae
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_core   !   namsbc_core  CORE bulk formulae
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_cpl    !   coupled ocean/atmosphere model                       ("key_coupled")
!-----------------------------------------------------------------------
!                ! description      !  multiple  !    vector   !      vector          ! vector !
!                !                  ! categories !  reference  !    orientation       ! grids  !
! send
   sn_snd_temp   =   'oce and ice'  ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_alb    =   'ice'          ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_thick  =   'ice and snow' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_snd_crt    =   'none'         ,    'no'    , 'spherical' , 'eastward-northward' ,  'T'
   sn_snd_co2    =   'none'         ,    'no'    ,     ''      ,         ''           ,   ''
! receive
   sn_rcv_w10m   =   'none'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_taumod =   'none'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_tau    =   'oce and ice'  ,    'no'    , 'spherical' , 'eastward-northward' ,   'U,V'
   sn_rcv_dqnsdt =   'coupled'      ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_qsr    =   'conservative' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_qns    =   'conservative' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_emp    =   'conservative' ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_rnf    =   'coupled'      ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_cal    =   'coupled'      ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_co2    =   'none'         ,    'no'    ,     ''      ,         ''           ,   ''
   sn_rcv_iceflx =   'none'         ,    'no'    ,     ''      ,         ''           ,   ''
!
   nn_cplmodel   =     1     !  Maximum number of models to/from which NEMO is potentialy sending/receiving data
   ln_usecplmask = .false.   !  use a coupling mask file to merge data received from several models
                             !   -> file cplmask.nc with the float variable called cplmask (jpi,jpj,nn_cplmodel)
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation
!-----------------------------------------------------------------------
   nn_chldta   =      0    !  RGB : Chl data (=1) or cst value (=0)
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs namelist surface boundary condition
!-----------------------------------------------------------------------
!         !  file name         ! frequency (hours) ! variable   ! time interp. ! clim  ! 'yearly'/ ! weights  ! rotation !
!         !                    !  (if <0  months)  !   name     !   (logical)  ! (T/F) ! 'monthly' ! filename ! pairing  !
   sn_rnf = 'ORCA_R025_runoff_v1.1.nc', -1        , 'sornficb' , .true.       , .true., 'yearly'  ,    ''    ,    ''    , ''
   sn_cnf = 'ORCA_R025_runoff_v1.1.nc',  0        , 'socoefr'  , .false.      , .true., 'yearly'  ,    ''    ,    ''    , ''
   sn_dep_rnf = 'runoff_depth' ,     0             , 'rodepth'  ,    .false.   , .true.,  'yearly' ,     ''   , ''       , ''
                !
   cn_dir       = './'       !  root directory for the location of the runoff files
   ln_rnf_mouth = .false.    !  specific treatment at rivers mouths
   rn_hrnf      =  10.       !  depth over which enhanced vertical mixing is used
   rn_avt_rnf   =   2.e-3    !  value of the additional vertical mixing coef. [m2/s]
   rn_rfact     =   1.e0     !  multiplicative factor for runoff
   ln_rnf_depth = .true.     !  read in depth information for runoff 
   ln_rnf_tem   = .false.    !  read in temperature information for runoff
   ln_rnf_sal   = .false.    !  read in salinity information for runoff
   ln_rnf_depth_ini = .false.   ! compute depth at initialisation from runoff file
   rn_rnf_max   = 5.735e-4   !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
   rn_dep_max   = 150.       !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
   nn_rnf_depth_file = 0     !  create (=1) a runoff depth file or not (=0)
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring
!-----------------------------------------------------------------------
!
! 07/2018 - Yohan Ruprich-Robert chages: add mask_ssr reading option and take into account last shaconemo update (06/2018)
!
   !             ! filename          ! freq  ! variable name  ! time     ! clim     ! year or   ! weights   ! rot     ! mask
   !             !                   !       !                ! interp   !          ! monthly   ! filename  ! pair    ! filename
   !----------------------------------------------------------------------------------------------------------------------------------------
   sn_sss      = 'sss_restore_data'  , -1.   , 'so'           , .true.   , .true.  , 'yearly'   , ''        , ''      , ''
   sn_sst      = 'sst_restore_data'  , -1.   , 'thetao'       , .true.   , .true.  , 'yearly'   , ''        , ''      , ''
   sn_msk      = 'mask_restore'      , -12.  , 'mask_ssr'     , .false.  , .true.  , 'yearly'   , ''        , ''      , ''
   !
   cn_dir      = './'    !  root directory for the location of the runoff files  
   nn_sstr     = 1       !  add a retroaction term in the surface heat flux (=1) or not (=0)
   nn_sssr     = 2       !  add a damping term in the surface freshwater flux (=2) or to SSS only (=1) or no damping term (=0)
   nn_icedmp   = 0       !  Cntrl of surface restoration under ice nn_icedmp 
                         !  ( 0   =  no restoration under ice )
                         !  ( 1   =  restoration everywhere  )
                         !  ( > 1 =  reinforced damping (x nn_icedmp) under ice
   nn_msk      = 1       !  add a sub-regional masking to the surface restoring (=1) or not (=0)
                         !  sn_msk can be empty if nn_msk = 0
   rn_dqdt     = -40.    !  magnitude of the retroaction on temperature   [W/m2/K]
   rn_deds     = -166.67 ! -864 magnitude of the damping on salinity   [kg/m2/s/psu]
   ln_sssr_bnd = .false. ! .true. !  flag to bound erp term (associated with nn_sssr=2)
   rn_sssr_bnd = 4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day] (associated with nn_sssr=2)
   ln_sssd_bnd = .false. ! .true. !  flag to bound S-S* term (associated with nn_ssr=2)
   rn_sssd_bnd = 0.01    !  ABS(Max./Min.) value of S-S* term [psu] (associated with nn_ssr=2)
/
!-----------------------------------------------------------------------
&namsbc_alb    !   albedo parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namberg       !   iceberg parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition
!-----------------------------------------------------------------------
   rn_shlat    =    0.0    !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
                           !  free slip  !   partial slip  !   no slip   ! strong slip
/
!-----------------------------------------------------------------------
&namcla        !   cross land advection
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namobc        !   open boundaries parameters                           ("key_obc")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters (#ifdef key_tide)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          ("key_bdy")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy_dta      !  open boundaries - external data           ("key_bdy")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambdy_tide     ! tidal forcing at open boundaries
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nambfr        !   bottom friction
!-----------------------------------------------------------------------
   nn_bfr      =    2      !  type of bottom friction :   = 0 : free slip,  = 1 : linear friction
                           !                              = 2 : nonlinear friction
   rn_bfri1    =    4.e-4  !  bottom drag coefficient (linear case)
   rn_bfri2    =    1.e-3  !  bottom drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_bfri2_max =   1.e-1  !  max. bottom drag coefficient (non linear case and ln_loglayer=T)
   rn_bfeb2    =    2.5e-3 !  bottom turbulent kinetic energy background  (m2/s2)
   rn_bfrz0    =    3.e-3  !  bottom roughness [m] if ln_loglayer=T
   ln_bfr2d    = .false.   !  horizontal variation of the bottom friction coef (read a 2D mask file )
   rn_bfrien   =    10.    !  local multiplying factor of bfr (ln_bfr2d=T)
   rn_tfri1    =    4.e-4  !  top drag coefficient (linear case)
   rn_tfri2    =    2.5e-3 !  top drag coefficient (non linear case). Minimum coeft if ln_loglayer=T
   rn_tfri2_max =   1.e-1  !  max. top drag coefficient (non linear case and ln_loglayer=T)
   rn_tfeb2    =    0.0    !  top turbulent kinetic energy background  (m2/s2)
   rn_tfrz0    =    3.e-3  !  top roughness [m] if ln_loglayer=T
   ln_tfr2d    = .false.   !  horizontal variation of the top friction coef (read a 2D mask file )
   rn_tfrien   =    50.    !  local multiplying factor of tfr (ln_tfr2d=T)

   ln_bfrimp   = .false.   !  implicit bottom friction (requires ln_zdfexp = .false. if true)
   ln_loglayer = .false.   !  logarithmic formulation (non linear case)
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition
!-----------------------------------------------------------------------
   ln_trabbc   = .true.    !  Apply a geothermal heating at the ocean bottom
   nn_geoflx   =    2      !  geothermal heat flux: = 0 no flux
                           !     = 1 constant flux
                           !     = 2 variable flux (read in geothermal_heating.nc in mW/m2)
   sn_qgh      = 'Goutorbe_ghflux.nc', -12. , 'gh_flux' , .false. , .true. , 'yearly' , 'weights_Goutorbe1_2_orca025_bilinear.nc' , '' , ''
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nameos        !   ocean physical parameters
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer
!-----------------------------------------------------------------------
   ln_traadv_cen2   =  .false.   !  2nd order centered scheme
   ln_traadv_tvd    =  .true.    !  TVD scheme
   ln_traadv_muscl  =  .false.   !  MUSCL scheme
   ln_traadv_muscl2 =  .false.   !  MUSCL2 scheme + cen2 at boundaries
   ln_traadv_ubs    =  .false.   !  UBS scheme
   ln_traadv_qck    =  .false.   !  QUICKEST scheme
   ln_traadv_msc_ups=  .false.   !  use upstream scheme within muscl
   ln_traadv_tvd_zts=  .false.  !  TVD scheme with sub-timestepping of vertical tracer advection
/
!-----------------------------------------------------------------------
&namtra_adv_mle !   mixed layer eddy parametrisation (Fox-Kemper param)
!-----------------------------------------------------------------------
   ln_mle    = .false.      ! (T) use the Mixed Layer Eddy (MLE) parameterisation
   rn_ce     = 0.06        ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_mle    = 1           ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_lf     = 5.e+3       ! typical scale of mixed layer front (meters)                      (case rn_mle=0)
   rn_time   = 172800.     ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_mle=0)
   rn_lat    = 20.         ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   nn_mld_uv = 0           ! space interpolation of MLD at u- & v-pts (0=min,1=averaged,2=max)
   nn_conv   = 0           ! =1 no MLE in case of convection ; =0 always MLE
   rn_rho_c_mle  = 0.01    ! delta rho criterion used to calculate MLD for FK
/
!----------------------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers
!----------------------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_lap    =  .true.   !  laplacian operator
   ln_traldf_bilap  =  .false.  !  bilaplacian operator
   !                       !  Direction of action:
   ln_traldf_level  =  .false.  !  iso-level
   ln_traldf_hor    =  .false.  !  horizontal (geopotential)   (needs "key_ldfslp" when ln_sco=T)
   ln_traldf_iso    =  .true.   !  iso-neutral                 (needs "key_ldfslp")
   !		       	   !  Griffies parameters              (all need "key_ldfslp")
   ln_traldf_grif   =  .false.  !  use griffies triads
   ln_traldf_gdia   =  .false.  !  output griffies eddy velocities
   ln_triad_iso     =  .false.  !  pure lateral mixing in ML
   ln_botmix_grif   =  .false.  !  lateral mixing on bottom
   !                       !  Coefficients
   ! Eddy-induced (GM) advection always used with Griffies; otherwise needs "key_traldf_eiv"
   ! Value rn_aeiv_0 is ignored unless = 0 with Held-Larichev spatially varying aeiv
   !                                  (key_traldf_c2d & key_traldf_eiv & key_orca_r2, _r1 or _r05)
   rn_aeiv_0        =  0.     !  eddy induced velocity coefficient [m2/s]
   rn_aht_0         =  300.     !  horizontal eddy diffusivity for tracers [m2/s]
   rn_ahtb_0        =     0.    !  background eddy diffusivity for ldf_iso [m2/s]
   !                                           (normally=0; not used with Griffies)
   rn_slpmax        =     0.01  !  slope limit
   rn_chsmag        =     1.    !  multiplicative factor in Smagorinsky diffusivity
   rn_smsh          =     0.    !  Smagorinsky diffusivity: = 0 - use only sheer
   rn_aht_m         =  2000.    !  upper limit or stability criteria for lateral eddy diffusivity (m2/s)
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping
!-----------------------------------------------------------------------
   ln_tradmp   =  ${ln_tradmp}  !  add a damping termn (T) or not (F)
   nn_zdmp     =    2      !  vertical   shape =0    damping throughout the water column
                          !                   =1 no damping in the mixing layer (kz  criteria)
                          !                   =2 no damping in the mixed  layer (rho crieria)
   cn_resto    = 'resto.nc' ! Name of file containing restoration coefficient field (use dmp_tools to create this)
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection
!-----------------------------------------------------------------------
   ln_dynadv_vec = .true.  !  vector form (T) or flux form (F)
   nn_dynkeg     = 1       ! scheme for grad(KE): =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2= .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .false. !  flux form - 3rd order UBS      scheme
   ln_dynzad_zts = .false. !  Use (T) sub timestepping for vertical momentum advection
/
!-----------------------------------------------------------------------
&nam_vvl    !   vertical coordinate options
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .true.           !  zstar vertical coordinate
   ln_vvl_ztilde = .false.          !  ztilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor = .false.  !  ztilde near the equator
   rn_ahe3       = 0.0e0            !  thickness diffusion coefficient
   rn_rst_e3t    = 30.e0            !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  = 5.0e0            !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   = 0.9e0            !  maximum fractional e3t deformation
   ln_vvl_dbg    = .true.           !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_vor    !   option of physics/algorithm (not control by CPP keys)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  enstrophy conserving scheme
   ln_dynvor_ens = .false. !  energy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
   ln_dynvor_een_old = .false.  !  energy & enstrophy scheme - original formulation
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .false.   !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .true.    !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
   ln_dynhpg_imp = .false. !  time stepping: semi-implicit time scheme  (T)
                           !           centered      time scheme  (F)
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_lap    =  .false.  !  laplacian operator
   ln_dynldf_bilap  =  .true.   !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_level  =  .false.  !  iso-level
   ln_dynldf_hor    =  .true.   !  horizontal (geopotential)            (require "key_ldfslp" in s-coord.)
   ln_dynldf_iso    =  .false.  !  iso-neutral                          (require "key_ldfslp")
   !                       !  Coefficient
   rn_ahm_0_lap     =     0.    !  horizontal laplacian eddy viscosity   [m2/s]
   rn_ahmb_0        =     0.    !  background eddy viscosity for ldf_iso [m2/s]
   rn_ahm_0_blp     =    -6.4e11!  horizontal bilaplacian eddy viscosity [m4/s]
   rn_cmsmag_1      =     3.    !  constant in laplacian Smagorinsky viscosity
   rn_cmsmag_2      =     3     !  constant in bilaplacian Smagorinsky viscosity
   rn_cmsh          =     0.    !  1 or 0 , if 0 -use only shear for Smagorinsky viscosity
   rn_ahm_m_blp     =    -1.e12 !  upper limit for bilap  abs(ahm) < min( dx^4/128rdt, rn_ahm_m_blp)
   rn_ahm_m_lap     = 40000.    !  upper limit for lap  ahm < min(dx^2/16rdt, rn_ahm_m_lap)
/

!!======================================================================
!!             Tracers & Dynamics vertical physics namelists
!!======================================================================
!!    namzdf        vertical physics
!!    namzdf_ric    richardson number dependent vertical mixing         ("key_zdfric")
!!    namzdf_tke    TKE dependent vertical mixing                       ("key_zdftke")
!!    namzdf_kpp    KPP dependent vertical mixing                       ("key_zdfkpp")
!!    namzdf_ddm    double diffusive mixing parameterization            ("key_zdfddm")
!!    namzdf_tmx    tidal mixing parameterization                       ("key_zdftmx")
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics
!-----------------------------------------------------------------------
   rn_avm0     =   1.e-4   !  vertical eddy viscosity   [m2/s]          (background Kz if not "key_zdfcst")
   rn_avt0     =   1.e-5   !  vertical eddy diffusivity [m2/s]          (background Kz if not "key_zdfcst")
   nn_avb      =    0      !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    1      !  horizontal shape for avtb (=1) or not (=0)
   ln_zdfevd   = .true.    !  enhanced vertical diffusion (evd) (T) or not (F)
   nn_evdm     =    1      !  evd apply on tracer (=0) or on tracer and momentum (=1)
   rn_avevd    =   10.     !  evd mixing coefficient [m2/s]
   ln_zdfnpc   = .false.   !  Non-Penetrative Convective algorithm (T) or not (F)
   nn_npc      =    1            !  frequency of application of npc
   nn_npcp     =  365            !  npc control print frequency
   ln_zdfexp   = .false.   !  time-stepping: split-explicit (T) or implicit (F) time stepping
   nn_zdfexp   =    3            !  number of sub-timestep for ln_zdfexp=T
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       ("key_zdfric" )
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  ("key_zdftke")
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-6   !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_mxl      =   3       !  mixing length: = 0 bounded by the distance to surface and bottom
                           !                 = 1 bounded by the local vertical scale factor
                           !                 = 2 first vertical derivative of mixing length bounded by 1
                           !                 = 3 as =2 with distinct disspipative an mixing length scale
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   ln_mxl0     = .true.    !  surface mixing length scale = F(wind stress) (T) or not (F)
   rn_mxl0     =   0.01    !  surface  buoyancy lenght scale minimum value
   ln_lc       = .true.    !  Langmuir cell parameterisation (Axell 2002)
   rn_lc       =   0.20    !  coef. associated to Langmuir cells
   nn_etau     =   0       !  penetration of tke below the mixed layer (ML) due to internal & intertial waves
                           !        = 0 no penetration
                           !        = 1 add a tke source below the ML
                           !        = 2 add a tke source just at the base of the ML
                           !        = 3 as = 1 applied on HF part of the stress    ("key_oasis3")
   rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
   nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
                           !        = 0  constant 10 m length scale
                           !        = 1  0.5m at the equator to 30m poleward of 40 degrees
/
!------------------------------------------------------------------------
&namzdf_kpp    !   K-Profile Parameterization dependent vertical mixing  ("key_zdfkpp", and optionally:
!------------------------------------------------------------------------ "key_kppcustom" or "key_kpplktb")
/
!-----------------------------------------------------------------------
&namzdf_gls                !   GLS vertical diffusion                   ("key_zdfgls")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namzdf_ddm    !   double diffusive mixing parameterization             ("key_zdfddm")
!-----------------------------------------------------------------------
   rn_avts     = 1.e-4     !  maximum avs (vertical mixing on salinity)
   rn_hsbfr    = 1.6       !  heat/salt buoyancy flux ratio
/
!-----------------------------------------------------------------------
&namzdf_tmx    !   tidal mixing parameterization                        ("key_zdftmx")
!-----------------------------------------------------------------------
   rn_htmx     = 500.      !  vertical decay scale for turbulence (meters)
   rn_n2min    = 1.e-8     !  threshold of the Brunt-Vaisala frequency (s-1)
   rn_tfe      = 0.333     !  tidal dissipation efficiency
   rn_me       = 0.2       !  mixing efficiency
   ln_tmx_itf  = .true.    !  ITF specific parameterisation
   rn_tfe_itf  = 1.        !  ITF tidal dissipation efficiency
/
!-----------------------------------------------------------------------
&namzdf_tmx_new    !   new tidal mixing parameterization                ("key_zdftmx_new")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsol        !   elliptic solver / island / free surface
!-----------------------------------------------------------------------
   nn_solv     =      1    !  elliptic solver: =1 preconditioned conjugate gradient (pcg)
                           !                   =2 successive-over-relaxation (sor)
   nn_sol_arp  =      0    !  absolute/relative (0/1) precision convergence test
   rn_eps      =  1.e-6    !  absolute precision of the solver
   nn_nmin     =    300    !  minimum of iterations for the SOR solver
   nn_nmax     =    800    !  maximum of iterations for the SOR solver
   nn_nmod     =     10    !  frequency of test for the SOR solver
   rn_resmax   =  1.e-10   !  absolute precision for the SOR solver
   rn_sor      =  1.92     !  optimal coefficient for SOR solver (to be adjusted with the domain)
/
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi)
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namctl        !   Control prints & Benchmark
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d_uvd    !   data: U & V currents                                 ("key_c1d")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namc1d_dyndmp !   U & V newtonian damping                              ("key_c1d")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsto       ! Stochastic parametrization of EOS
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtrd        !   diagnostics on dynamics and/or tracer trends         ("key_trddyn" and/or "key_trdtra")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namflo       !   float parameters                                      ("key_float")
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namptr       !   Poleward Transport Diagnostic
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namhsb       !  Heat and salt budgets
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents ('key_diaharm')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdct        ! transports through sections
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namobs       !  observation usage switch                               ('key_diaobs')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&nam_asminc   !   assimilation increments                               ('key_asminc')
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namsbc_wave   ! External fields from wave model
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namdyn_nept  !   Neptune effect (simplified: lateral and vertical diffusions removed)
!-----------------------------------------------------------------------
/
EOF
++ cat
+ has_config lim3
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lim3 == any ']'
+ [[ lim3 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lim3 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lim3 ]]
+ for __m in '$config'
+ [[ lim3 =~ lim3 ]]
+ [[ lim3 =~ lim3 ]]
+ __f=1
+ for __m in '$config'
+ [[ rnfmapper =~ lim3 ]]
+ for __m in '$config'
+ [[ xios:detached =~ lim3 ]]
+ for __m in '$config'
+ [[ oasis =~ lim3 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lim3 ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.lim3.ref.sh
# namelist.lim3.ref.sh writes the reference namelist for LIM3 to standard out.
# Note that this namelist will be overwritten by the namelist specific to the
# configuration (namelist.lim3-*.cfg.sh). Hence, only parameters common to all
# configurations shoule be specified here.

cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! LIM3 namelist :  
!!              1 - Generic parameters                 (namicerun)
!!              2 - Ice initialization                 (namiceini)
!!              3 - Ice discretization                 (namiceitd)
!!              4 - Ice dynamics and transport         (namicedyn)
!!              5 - Ice thermodynamics                 (namicethd)
!!              6 - Ice salinity                       (namicesal)
!!              7 - Ice mechanical redistribution      (namiceitdme)
!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!
!------------------------------------------------------------------------------
&namicerun     !   Generic parameters
!------------------------------------------------------------------------------
   jpl            =    5           !  number of ice  categories
   nlay_i         =    2           !  number of ice  layers
   nlay_s         =    1           !  number of snow layers (only 1 is working)
   cn_icerst_in  = "restart_ice"   !  suffix of ice restart name (input)
   cn_icerst_indir = "."           !  directory from which to read input ice restarts
   cn_icerst_out = "restart_ice"   !  suffix of ice restart name (output)
   cn_icerst_outdir = "."          !  directory in which to write output ice restarts
   ln_limdyn     = .true.          !  ice dynamics (T) or thermodynamics only (F)
   rn_amax_n     = 0.997           !  maximum tolerated ice concentration NH
   rn_amax_s     = 0.95            !  maximum tolerated ice concentration SH
   ln_limdiahsb  = .false.         !  check the heat and salt budgets (T) or not (F)
   ln_limdiaout  = .true.          !  output the heat and salt budgets (T) or not (F)
   ln_icectl     = .false.         !  ice points output for debug (T or F)
   iiceprt       = 10              !  i-index for debug
   jiceprt       = 10              !  j-index for debug
/
!------------------------------------------------------------------------------
&namiceini     !   Ice initialization
!------------------------------------------------------------------------------
   ln_iceini      = .true.         !  activate ice initialization (T) or not (F)
   rn_thres_sst   =  2.0           !  maximum water temperature with initial ice (degC)
   rn_hts_ini_n   =  0.3           !  initial real snow thickness (m), North
   rn_hts_ini_s   =  0.3           !        "            "             South
   rn_hti_ini_n   =  3.0           !  initial real ice thickness  (m), North
   rn_hti_ini_s   =  1.0           !        "            "             South
   rn_ati_ini_n   =  0.9           !  initial ice concentration   (-), North
   rn_ati_ini_s   =  0.9           !        "            "             South
   rn_smi_ini_n   =  6.3           !  initial ice salinity     (g/kg), North
   rn_smi_ini_s   =  6.3           !        "            "             South
   rn_tmi_ini_n   =  270.          !  initial ice/snw temperature (K), North
   rn_tmi_ini_s   =  270.          !        "            "             South
/
!------------------------------------------------------------------------------
&namiceitd     !   Ice discretization
!------------------------------------------------------------------------------
   nn_catbnd      =    2           !  computation of ice category boundaries based on
                                   !      1: tanh function
                                   !      2: h^(-alpha), function of rn_himean
   rn_himean      =    2.0         !  expected domain-average ice thickness (m), nn_catbnd = 2 only
/
!------------------------------------------------------------------------------
&namicedyn     !   Ice dynamics and transport
!------------------------------------------------------------------------------
   nn_icestr      =    0           !  ice strength parameteriztaion                      
                                   !     0: Hibler_79     P = pstar*<h>*exp(-c_rhg*A)
                                   !     1: Rothrock_75   P = Cf*coeff*integral(wr.h^2)    
   ln_icestr_bvf  =    .false.     !  ice strength function brine volume (T) or not (F)     
   rn_pe_rdg      =   17.0         !  ridging work divided by pot. energy change in ridging, if nn_icestr = 1
   rn_pstar       =    2.0e+04     !  ice strength thickness parameter (N/m2), nn_icestr = 0 
   rn_crhg        =   20.0         !  ice strength conc. parameter (-), nn_icestr = 0       
   rn_cio         =    5.0e-03     !  ice-ocean drag coefficient           (-)             
   rn_creepl      =    1.0e-12     !  creep limit (s-1)                                   
   rn_ecc         =    2.0         !  eccentricity of the elliptical yield curve          
   nn_nevp        =  120           !  number of EVP subcycles                             
   rn_relast      =    0.333       !  ratio of elastic timescale to ice time step: Telast = dt_ice * rn_relast 
                                   !     advised value: 1/3 (rn_nevp=120) or 1/9 (rn_nevp=300)
/
!------------------------------------------------------------------------------
&namicehdf     !   Ice horizontal diffusion
!------------------------------------------------------------------------------
   nn_ahi0        =  2          !  horizontal diffusivity computation
                                   !    -1: no diffusion (bypass limhdf)
                                   !     0: use rn_ahi0_ref
                                   !     1: use rn_ahi0_ref x mean grid cell length / ( 2deg mean grid cell length )
                                   !     2: use rn_ahi0_ref x grid cell length      / ( 2deg mean grid cell length )
   rn_ahi0_ref    = 350.0          !  horizontal sea ice diffusivity (m2/s)
                                   !     if nn_ahi0 > 0, rn_ahi0_ref is the reference value at a nominal 2 deg resolution
   nn_convfrq     = 5              !  convergence check frequency of the Crant-Nicholson scheme (perf. optimization)
/
!------------------------------------------------------------------------------
&namicethd     !   Ice thermodynamics
!------------------------------------------------------------------------------
   rn_hnewice  = 0.1               !  thickness for new ice formation in open water (m)
   ln_frazil   = .false.           !  use frazil ice collection thickness as a function of wind (T) or not (F)
   rn_maxfrazb = 1.0               !  maximum fraction of frazil ice collecting at the ice base
   rn_vfrazb   = 0.417             !  thresold drift speed for frazil ice collecting at the ice bottom (m/s)
   rn_Cfrazb   = 5.0               !  squeezing coefficient for frazil ice collecting at the ice bottom
   rn_himin    = 0.10              !  minimum ice thickness (m) used in remapping, must be smaller than rn_hnewice
   rn_betas    = 0.66              !  exponent in lead-ice repratition of snow precipitation
                                   !     betas = 1 -> equipartition, betas < 1 -> more on leads
   rn_kappa_i  = 1.0               !  radiation attenuation coefficient in sea ice (m-1)
   nn_conv_dif = 50                !  maximal number of iterations for heat diffusion computation
   rn_terr_dif = 0.0001            !  maximum temperature after heat diffusion (degC)
   nn_ice_thcon= 1                 !  sea ice thermal conductivity
                                   !     0: k = k0 + beta.S/T (Untersteiner, 1964)
                                   !     1: k = k0 + beta1.S/T - beta2.T (Pringle et al., 2007)
   rn_cdsn     = 0.27              !  thermal conductivity of the snow (0.31 W/m/K, Maykut and Untersteiner, 1971)
                                   !  (set to 0.40 after EC-Earth tuning)
                                   !  Obs: 0.1-0.5 (Lecomte et al, JAMES 2013)
   nn_monocat  = 0                 !  virtual ITD mono-category parameterizations (1, jpl = 1 only) or not (0)
                                   !     2: simple piling instead of ridging --- temporary option
                                   !     3: activate G(he) only              --- temporary option
                                   !     4: activate lateral melting only    --- temporary option
  ln_it_qnsice = .true.            !  iterate the surface non-solar flux with surface temperature (T) or not (F)
/
!------------------------------------------------------------------------------
&namicesal     !   Ice salinity
!------------------------------------------------------------------------------
   nn_icesal   =  2                !  ice salinity option
                                   !     1: constant ice salinity (S=rn_icesal)
                                   !     2: varying salinity parameterization S(z,t)
                                   !     3: prescribed salinity profile S(z), Schwarzacher, 1959
   rn_icesal   =  4.               !  ice salinity (g/kg, nn_icesal = 1 only)
   rn_sal_gd   =  5.               !  restoring ice salinity, gravity drainage (g/kg)
   rn_time_gd  =  1.73e+6          !  restoring time scale, gravity drainage  (s)
   rn_sal_fl   =  2.               !  restoring ice salinity, flushing (g/kg)
   rn_time_fl  =  8.64e+5          !  restoring time scale, flushing (s)
   rn_simax    = 20.               !  maximum tolerated ice salinity (g/kg)
   rn_simin    =  0.1              !  minimum tolerated ice salinity (g/kg)
/
!------------------------------------------------------------------------------
&namiceitdme   !   Ice mechanical redistribution (ridging and rafting)
!------------------------------------------------------------------------------
   rn_Cs       =   0.5             !  fraction of shearing energy contributing to ridging
   rn_fsnowrdg =   0.5             !  snow volume fraction that survives in ridging
   rn_fsnowrft =   0.5             !  snow volume fraction that survives in rafting
   nn_partfun  =   1               !  type of ridging participation function
                                   !     0: linear (Thorndike et al, 1975)
                                   !     1: exponential (Lipscomb, 2007
   rn_gstar    =   0.15            !  fractional area of thin ice being ridged (nn_partfun = 0)
   rn_astar    =   0.05            !  exponential measure of ridging ice fraction (nn_partfun = 1)
   rn_hstar    = 100.0             !  determines the maximum thickness of ridged ice (m) (Hibler, 1980)
   ln_rafting  =   .true.          !  rafting activated (T) or not (F)
   rn_hraft    =   0.75            !  threshold thickness for rafting (m)
   rn_craft    =   5.0             !  squeezing coefficient used in the rafting function
   rn_por_rdg  =   0.3             !  porosity of newly ridged ice (Lepparanta et al., 1995)
/
EOF
++ cat
+ has_config lim3
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' lim3 == any ']'
+ [[ lim3 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lim3 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lim3 ]]
+ for __m in '$config'
+ [[ lim3 =~ lim3 ]]
+ [[ lim3 =~ lim3 ]]
+ __f=1
+ for __m in '$config'
+ [[ rnfmapper =~ lim3 ]]
+ for __m in '$config'
+ [[ xios:detached =~ lim3 ]]
+ for __m in '$config'
+ [[ oasis =~ lim3 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lim3 ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.lim3-ORCA025L75.cfg.sh
# namelist.lim3-ORCA1L46.cfg.sh writes the LIM3 namelist for ORCA1L46 to
# standard output. This namelist will overwrite the reference namelist
# (namelist.lim3.ref.sh). Hence, only parameters specific to the ORCA1L46
# configuration should be specified here.

cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/LIM-3 : Ice configuration namelist. Overwrites SHARED/namelist_ice_lim_ref
!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!-----------------------------------------------------------------------
&namicerun     !   Share parameters for dynamics/advection/thermo
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namiceini     !   ice initialisation
!-----------------------------------------------------------------------
/
!------------------------------------------------------------------------------
&namiceitd     !   Ice discretization
!------------------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namicedyn     !   ice dynamic
!-----------------------------------------------------------------------
/
!------------------------------------------------------------------------------
&namicehdf     !   Ice horizontal diffusion
!------------------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namicethd     !   ice thermodynamic
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namicesal     !   ice salinity
!-----------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namiceitdme   !   parameters for mechanical redistribution of ice
!-----------------------------------------------------------------------
/
EOF
++ cat
+ has_config rnfmapper
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' rnfmapper == any ']'
+ [[ rnfmapper == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ rnfmapper ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
+ for __m in '$config'
+ [[ lim3 =~ rnfmapper ]]
+ for __m in '$config'
+ [[ rnfmapper =~ rnfmapper ]]
+ [[ rnfmapper =~ rnfmapper ]]
+ __f=1
+ for __m in '$config'
+ [[ xios:detached =~ rnfmapper ]]
+ for __m in '$config'
+ [[ oasis =~ rnfmapper ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ rnfmapper ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.runoffmapper.sh
cat << EOF
!-----------------------------------------------------------------------
&NAMRNFMAP
!-----------------------------------------------------------------------
    RunLengthSec = ${leg_length_sec}
    TimeStepSec  = ${cpl_freq_atm_oce_sec}
!-----------------------------------------------------------------------
/
EOF
++ cat
+ has_config amip
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ ((  __f  ))
+ return 1
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo.age.ref.sh
cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! AGE  :       1  - dates                                 (namage)
!! namelists    
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namage     !   dates
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
   rn_age_depth       = 10            ! depth over which age tracer reset to zero
   rn_age_kill_rate   = -0.000138888  !  = -1/7200 recip of relaxation timescale (s) for  age tracer shallower than age_depth
/
EOF
++ cat
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo.age.cfg.sh
cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! AGE  :       1  - dates                                 (namage)
!! configuration namelists    
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namage     !   dates
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/
EOF
++ cat
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo.cfc.ref.sh
cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! CFC  :       1  - dates                                 (namcfcdate)
!! namelists    
!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namcfcdate     !   dates
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
   ndate_beg  = 300101    !  datedeb1
   nyear_res  = 1932      !  iannee1
   ! Formatted file of annual hemisperic CFCs concentration in the atmosphere (ppt)
   clnamecfc   = 'CFCs_CDIAC.dat'
   cfc_offset = 0
!   cfc_offset = -183  ! offset introduced to deal with 6 repeating cycles for OMIP. 
!
! 1st OMIP-2 cycle ----> cfc_offset = -305
! 2nd OMIP-2 cycle ----> cfc_offset = -244
! 3rd OMIP-2 cycle ----> cfc_offset = -183
! 4th OMIP-2 cycle ----> cfc_offset = -122
! 5th OMIP-2 cycle ----> cfc_offset = -61
! 6th OMIP-2 cycle ----> cfc_offset = 0
!
! 1st OMIP-1 cycle ----> cfc_offset = -310
! 2nd OMIP-1 cycle ----> cfc_offset = -248
! 3rd OMIP-1 cycle ----> cfc_offset = -186
! 4th OMIP-1 cycle ----> cfc_offset = -124
! 5th OMIP-1 cycle ----> cfc_offset = -62
! 6th OMIP-1 cycle ----> cfc_offset = 0
!
/
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namcfcdia     !   additional 2D/3D tracers diagnostics 
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
!              !    name   !           title of the field          !     units      !
!              !           !                                       !                !
!   cfcdia2d(1)  = 'qtr_c11 ' , 'Air-sea flux of CFC-11           ',  'mol/m2/s    '
!   cfcdia2d(2)  = 'qint_c11' , 'Cumulative air-sea flux of CFC-11 ', 'mol/m2      '
!   cfcdia2d(3)  = 'qtr_c12 ' , 'Air-sea flux of CFC-12           ',  'mol/m2/s    '
!   cfcdia2d(4)  = 'qint_c12' , 'Cumulative air-sea flux of CFC-12 ', 'mol/m2      '
!   cfcdia2d(5)  = 'qtr_sf6 ' , 'Air-sea flux of SF6               ',  'mol/m2/s    '
!   cfcdia2d(6)  = 'qint_sf6' , 'Cumulative air-sea flux of SF6    ', 'mol/m2      '
/
EOF
++ cat
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ ((  __f  ))
+ return 0
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namelist.nemo.cfc.cfg.sh
cat << EOF
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! CFC  :       1  - dates                                 (namcfcdate)
!! namelists    
!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namcfcdate     !   dates
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
/
!'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
&namcfcdia     !   additional 2D/3D tracers diagnostics 
!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
!              !    name   !           title of the field          !     units      !
/
EOF
++ cat
+ has_config pisces tm5:co2
+ ((  2  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ ((  __f  ))
+ return 1
+ lucia=
+ . /gpfs/scratch/bsc32/bsc32627/t0ni/ctrl/namcouple.sh
# namcouple.sh writes the OASIS3-MCT namcouple file to standard out. The
# content of the file is based on the selected components in the $config
# variable (function has_config)

# Set coupling frequencies (in seconds) between components
(( ${cpl_freq_atm_oce_sec:-}  )) && cpl_freq_atm_oce_sec=${cpl_freq_atm_oce_sec}
++ ((  2700   ))
++ cpl_freq_atm_oce_sec=2700
(( ${cpl_freq_atm_ctm_hrs:-}  )) && cpl_freq_atm_ctm_sec=$(( cpl_freq_atm_ctm_hrs * 3600 ))
++ ((     ))
(( ${cpl_freq_atm_lpjg_hrs:-} )) && cpl_freq_atm_lpjg_sec=$(( cpl_freq_atm_lpjg_hrs * 3600 ))
++ ((    ))
cpl_freq_ccycle_sec=$(( 24 * 3600 ))
++ cpl_freq_ccycle_sec=86400

# Set coupling field lags
(( ${ifs_time_step_sec:-} )) && lag_atm_oce=${ifs_time_step_sec}
++ ((  900  ))
++ lag_atm_oce=900
(( ${nem_time_step_sec:-} )) && lag_oce_atm=${nem_time_step_sec}
++ ((  900  ))
++ lag_oce_atm=900
(( ${ifs_time_step_sec:-} )) && lag_atm_ctm=${ifs_time_step_sec}
++ ((  900  ))
++ lag_atm_ctm=900
(( ${tm5_time_step_sec:-} )) && lag_ctm_atm=${tm5_time_step_sec}
++ ((    ))
(( ${ifs_time_step_sec:-} )) && (( ${cpl_freq_atm_ctm_sec:-} )) && \
    lag_atm_ctm_mid=$(( (((cpl_freq_atm_ctm_sec / ifs_time_step_sec)+1)/2 +1) * ifs_time_step_sec ))
++ ((  900  ))
++ ((    ))
(( ${ifs_time_step_sec:-} )) && lag_atm_lpjg=${ifs_time_step_sec} || lag_atm_lpjg=0
++ ((  900  ))
++ lag_atm_lpjg=900
(( ${lpjg_time_step_sec:-} )) && lag_lpjg_atm=${lpjg_time_step_sec} || lag_lpjg_atm=0
++ ((  86400  ))
++ lag_lpjg_atm=86400

# Set lucia variable to produce the logs for a post processing analysis
(( ${lucia:-} )) || lucia=''
++ ((    ))
++ lucia=

# Check consistency of model timesteps and coupling frequencies
ck_cpl_freq(){
    # expects to be called as: ck_cpl_freq  coupling_frequency  model_timestep
    if (($(($1%$2))))
    then
        echo "*EE* model timestep $2 does not divide coupling frequency $1 " 1>&2
        return 1
    fi
}

if has_config ifs tm5
then
    ck_cpl_freq $cpl_freq_atm_ctm_sec $tm5_time_step_sec || exit 1 
    ck_cpl_freq $cpl_freq_atm_ctm_sec $ifs_time_step_sec || exit 1 
fi
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1
if has_config ifs nemo
then
    ck_cpl_freq $cpl_freq_atm_oce_sec $nem_time_step_sec || exit 1 
    ck_cpl_freq $cpl_freq_atm_oce_sec $ifs_time_step_sec || exit 1 
fi
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ ((  __f  ))
++ return 0
++ ck_cpl_freq 2700 900
++ (( 0 ))
++ ck_cpl_freq 2700 900
++ (( 0 ))


# Atmosphere/Land grids (note that TM5 and LPJG require IFS)
if (( ${ifs_res_hor:-} ))
then
    # IFS grid point grids
    case ${ifs_res_hor} in
        159) atm_grid=A080
             ;;
        255) atm_grid=A128
             ;;
        511) atm_grid=A256
             ;;
        799) atm_grid=A400
             ;;
        *)   echo "*EE* Unsupported horizontal resolution (IFS): ${ifs_res_hor}" 1>&2
             exit 1
             ;;
    esac

    # LPJG
    lpjg_grid=${atm_grid}

    # IFS grid point grids without land-sea mask
    atm_grid_nm=$(echo ${atm_grid} | sed 's/A/B/')

    # IFS/TM5 spectral grids
    atm_grid_sh=T${ifs_res_hor}
    ctm_grid_sh=C${ifs_res_hor}

    # TM5 grid point grids (C: no mask, L: land masked; O: ocean masked)
    ctm_grid=CTM3
    ctm_nx=120
    ctm_ny=90
    #
    ctm_grid_sfc=CTM1
    ctm_nx_sfc=360
    ctm_ny_sfc=180
fi
++ ((  511  ))
++ case ${ifs_res_hor} in
++ atm_grid=A256
++ lpjg_grid=A256
echo ${atm_grid} | sed 's/A/B/'
+++ echo A256
+++ sed s/A/B/
++ atm_grid_nm=B256
++ atm_grid_sh=T511
++ ctm_grid_sh=C511
++ ctm_grid=CTM3
++ ctm_nx=120
++ ctm_ny=90
++ ctm_grid_sfc=CTM1
++ ctm_nx_sfc=360
++ ctm_ny_sfc=180

# NEMO grids
(( ${nem_res_hor:-} )) && case ${nem_res_hor} in
      1) oce_grid=O1t0
         ;;
    025) oce_grid=Ot25
         ;;
    *)   echo "*EE* Unsupported horizontal resolution (NEMO): ${nem_res_hor}" 1>&2
         exit 1
         ;;
esac
++ ((  025  ))
++ case ${nem_res_hor} in
++ oce_grid=Ot25


# Functions expcat and explvl expand their arguments into coupling field names
# with the appropriate extensions for categories/levels and according to the
# syntax needed in the namcouple file.
#
# Usage: expcat NUM FLDA FLDB
#        explvl NUM_START NUM_END FLDA FLDB
#
function expcat()
{
    printf  "$2.C%.3d" 1
    [ $1 -gt 1 ] && printf ":$2.C%.3d" $(eval echo {2..$1})

    printf  " $3.C%.3d" 1
    [ $1 -gt 1 ] && printf ":$3.C%.3d" $(eval echo {2..$1})
}
function explvl()
{
    printf  "$3.L%.3d" $1
    [ $2 -gt $1 ] && printf ":$3.L%.3d" $(eval echo {$(($1+1))..$2})

    printf  " $4.L%.3d" $1
    [ $2 -gt $1 ] && printf ":$4.L%.3d" $(eval echo {$(($1+1))..$2})
}

# Functions expfield_* split one 3D variable into \$nbundle namcouple entries.
# They are dedicated to TM5-IFS coupling.
# 
# ***** MACHINE DEPENDENCY - there is an optimum number of levels you can bundle:
# Set nbundle to \$tm5_exch_nlevs for one entry per level,
# set it to 1 to bundle all levels into one entry.
# The smaller nbundle is, the faster the coupling is. But if too small, the
# model may start swapping. 
# nbundle_cutoff is for the feedback (done with 24 of 34 levels, or all levels)

if has_config tm5
then
    [[ ${tm5_exch_nlevs} == 34 ]] && nbundle=3 && nbundle_cutoff=2
    [[ ${tm5_exch_nlevs} == 10 ]] && nbundle=1 && nbundle_cutoff=1
    [[ ${tm5_exch_nlevs} == 4  ]] && nbundle=1 && nbundle_cutoff=1

    nlev=${tm5_exch_nlevs:-999}
    (( $nbundle > $nlev )) && nbundle=$nlev
    ia=$(($nlev/$nbundle))
    ib=$(($nlev%$nbundle))

    nlev_cutoff=${tm5_exch_nlevs_cutoff:-999}
    (( $nbundle_cutoff > $nlev_cutoff )) && nbundle_cutoff=$nlev_cutoff
    ia_cutoff=$(($nlev_cutoff/$nbundle_cutoff))
    ib_cutoff=$(($nlev_cutoff%$nbundle_cutoff))
fi
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ ((  __f  ))
++ return 1

function expfield_sh()
{
    # args = ifs-var, tm5-var, CF-code, restart, header
    for k in $(eval echo {1..$nbundle})
    do
        start=$(( (k-1)*ia+1 )) 
        extra=$(( (k-1)<ib?(k-1):ib ))
        start=$(( start+extra ))
        end=$(( start + ia - 1 ))
        (( ib>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_atm_ctm_sec} 1 $4 EXPORTED
  ${atm_grid_sh} ${ctm_grid_sh} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  LOCTRANS
   INSTANT
EOF
    done
}

function expfield_gg()
{
    # args = ifs-var, tm5-var, CF-code, restart, lag, header (not used)
    for k in $(eval echo {1..$nbundle})
    do
        start=$(( (k-1)*ia+1 )) 
        extra=$(( (k-1)<ib?(k-1):ib ))
        start=$(( start+extra ))
        end=$(( start + ia - 1 ))
        (( ib>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_atm_ctm_sec} 1 $4 EXPORTED
  ${atm_grid_nm} ${ctm_grid} LAG=$5
  P  0  P  0
  SCRIPR
   GAUSWGT D SCALAR LATITUDE 90 9 2.0
EOF
    done
}

function expfield_gg_aver()
{
    # args = ifs-var, tm5-var, CF-code, restart, lag, header (not used)
    for k in $(eval echo {1..$nbundle})
    do
        start=$(( (k-1)*ia+1 )) 
        extra=$(( (k-1)<ib?(k-1):ib ))
        start=$(( start+extra ))
        end=$(( start + ia - 1 ))
        (( ib>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_atm_ctm_sec} 2 $4 EXPORTED
  ${atm_grid_nm} ${ctm_grid} LAG=$5
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 90 9 2.0
EOF
    done
}

function expfield_fbck()
{
    # args = tm5-var, ifs-var, CF-code, restart, lag, header (not used)
    for k in $(eval echo {1..$nbundle})
    do
        start=$(( (k-1)*ia+1 )) 
        extra=$(( (k-1)<ib?(k-1):ib ))
        start=$(( start+extra ))
        end=$(( start + ia - 1 ))
        (( ib>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_atm_ctm_sec} 1 $4 EXPORTED
  ${ctm_grid} ${atm_grid_nm} LAG=$5
  P  0  P  0
   SCRIPR
   BILINEAR LR SCALAR LATITUDE 16
EOF
    done
}


function expfield_fbck_ccycle()
{
    # args = tm5-var, ifs-var, CF-code, restart, lag, header (not used)
    for k in $(eval echo {1..$nbundle})
    do
        start=$(( (k-1)*ia+1 )) 
        extra=$(( (k-1)<ib?(k-1):ib ))
        start=$(( start+extra ))
        end=$(( start + ia - 1 ))
        (( ib>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_ccycle_sec} 1 $4 EXPORTED
  ${ctm_grid} ${atm_grid_nm} LAG=$5
  P  0  P  0
   SCRIPR
   BILINEAR LR SCALAR LATITUDE 16
EOF
    done
}

function expfield_fbck_cutoff()
{
    # args = tm5-var, ifs-var, CF-code, restart, lag, header (not used)
    for k in $(eval echo {1..$nbundle_cutoff})
    do
        start=$(( (k-1)*ia_cutoff+1 ))
        extra=$(( (k-1)<ib_cutoff?(k-1):ib_cutoff ))
        start=$(( start+extra ))
        end=$(( start + ia_cutoff - 1 ))
        (( ib_cutoff>(k-1) )) && ((end+=1))
        cat <<EOF
#
  $(explvl $start $end $1 $2) $3 ${cpl_freq_atm_ctm_sec} 1 $4 EXPORTED
  ${ctm_grid} ${atm_grid_nm} LAG=$5
  P  0  P  0
   SCRIPR
   BILINEAR LR SCALAR LATITUDE 16
EOF
    done
}

# workaround for lpjg_forcing and OSM (which replaces IFS as seen from LPJG)
has_config lpjg_forcing && config=$config" "atm
++ has_config lpjg_forcing
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' lpjg_forcing == any ']'
++ [[ lpjg_forcing == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg_forcing ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg_forcing ]]
++ ((  __f  ))
++ return 1
has_config osm && config=$config" "atm
++ has_config osm
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' osm == any ']'
++ [[ osm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ osm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ osm ]]
++ for __m in '$config'
++ [[ lim3 =~ osm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ osm ]]
++ for __m in '$config'
++ [[ xios:detached =~ osm ]]
++ for __m in '$config'
++ [[ oasis =~ osm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ osm ]]
++ ((  __f  ))
++ return 1
has_config ifs && config=$config" "atm
++ has_config ifs
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ ((  __f  ))
++ return 0
++ config='ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm'

# define output strategy for c-cycle fluxes
[[ ${ccycle_debug_fluxes:-} == true ]] && ccycle_out_fluxes="EXPOUT" || ccycle_out_fluxes="EXPORTED"
++ [[ true == true ]]
++ ccycle_out_fluxes=EXPOUT

# Configure number of coupling fields
# Note that the || : terms after the arithmetic expression is necessary to
# prevent set -e from stopping the script depending on the outcome of the
# expression.
nfields=0
++ nfields=0

has_config ifs nemo rnfmapper && (( nfields+=9  ))                || :
++ has_config ifs nemo rnfmapper
++ ((  3  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ return 0
++ ((  nfields+=9   ))
has_config atm lpjg           && (( nfields+=20 ))                || :
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ :
has_config ifs amip           && (( nfields+=1  ))                || :
++ has_config ifs amip
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ amip ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ amip ]]
++ for __m in '$config'
++ [[ lim3 =~ amip ]]
++ for __m in '$config'
++ [[ rnfmapper =~ amip ]]
++ for __m in '$config'
++ [[ xios:detached =~ amip ]]
++ for __m in '$config'
++ [[ oasis =~ amip ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ amip ]]
++ for __m in '$config'
++ [[ atm =~ amip ]]
++ ((  __f  ))
++ return 1
++ :
# ifs -> tm5
has_config ifs tm5:co2        && (( nfields+=(12 +  8*nbundle) )) || :
++ has_config ifs tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
has_config ifs tm5:chem       && (( nfields+=(39 + 13*nbundle) )) || :
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
# tm5 -> ifs
has_config ifs tm5:o3fb       && (( nfields+=nbundle      ))      || :
++ has_config ifs tm5:o3fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
has_config ifs tm5:ch4fb      && (( nfields+=nbundle      ))      || :
++ has_config ifs tm5:ch4fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
has_config ifs tm5:co2fb      && (( nfields+=nbundle      ))      || :
++ has_config ifs tm5:co2fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
has_config ifs tm5:aerfb      && (( nfields+=(67*nbundle_cutoff) )) || :
++ has_config ifs tm5:aerfb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ :
# tm5 <-> lpjg
has_config lpjg tm5:co2       && (( nfields+=2 ))                 || :
++ has_config lpjg tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ :
# tm5 <-> pisces
has_config pisces tm5:co2     && (( nfields+=2 ))                 || :
++ has_config pisces tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ for __m in '$config'
++ [[ atm =~ pisces ]]
++ ((  __f  ))
++ return 1
++ :

# The following while loop reads the rest of this file (until the
# END_OF_NAMCOUPLE marker) and processes any #defcfg and #enddef directives.
# Note that the "IFS=" at the loop header is necessary to preserve leading
# spaces. (IFS stands for Input Field Separator and has nothing to do with the
# atmosphere model)
#
# The $lineout variable controls whether a particular line is send to standard
# out. It is set to true before the loop as a default.
#
# Set 'set +u' is necessary because Bash here-documents (the part
# between '<<END_OF_NAMCOUPLE' and 'END_OF_NAMCOUPLE') expands shell variables
# and this part may contain undefined variables.
lineout=1
++ lineout=1
set +u
++ set +u
while IFS= read line
do
    # Skip empty lines
    [[ $line =~ ^[[:blank:]]*$ ]] && continue

    # Process lines that start with #defcfg
    if [[ $line =~ ^#defcfg ]]
    then
        # Get the config string, i.e. everything after #defcfg and before the
        # second # character.
        # Note the ||: at the end of the expression! It is necessary because
        # set -e would otherwise abort the script when no comment is found.
        cfgstring=$(expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :)

        # Set $lineout depending on whether has_config returns true or false
        has_config $cfgstring && lineout=1 || lineout=0

        # Get the comment, i.e. everyting starting from the second # character
        # Note the ||: at the end of the expression!
        comment=$(expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :)

        # Output the comment (with the config string from defcfg added) if
        # $lineout is true and if the comment is not empty
        (( lineout )) && [[ -n "$comment" ]] && echo "$comment [$(echo $cfgstring)]"

    # Process #enddef lines: reset $lineout
    elif [[ $line =~ ^#enddef ]]
    then
        lineout=1

    # Process lines that create bundles of 3D variables
    elif [[ $line =~ ^expfield ]]
    then
        (( lineout )) && $line

    # Process any other lines (output according to $lineout)
    else
        (( lineout )) && echo "$line"
    fi
done << END_OF_NAMCOUPLE
# =================================================================================================
# General OASIS configuration
# =================================================================================================
 \$NFIELDS
    ${nfields}
 \$END
# -------------------------------------------------------------------------------------------------
 \$RUNTIME
    ${leg_length_sec}
 \$END
# -------------------------------------------------------------------------------------------------
 \$NLOGPRT
    0 ${lucia}
 \$END
# -------------------------------------------------------------------------------------------------
 \$STRINGS

#defcfg ifs nemo
# =================================================================================================
# Fields send from Atmosphere to Ocean
# =================================================================================================
#enddef

#defcfg ifs nemo # --- Momentum fluxes for oce and ice on U grid ---
  A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 ${cpl_freq_atm_oce_sec} 2 rstas.nc EXPORTED
  ${atm_grid} ${oce_grid/t/u} LAG=${lag_atm_oce}
  P  0  P  2
  LOCTRANS SCRIPR
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg ifs nemo # --- Momentum fluxes for oce and ice on V grid ---
  A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 ${cpl_freq_atm_oce_sec} 2 rstas.nc EXPORTED
  ${atm_grid} ${oce_grid/t/v} LAG=${lag_atm_oce}
  P  0  P  2
  LOCTRANS SCRIPR
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg ifs nemo # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) ---
  A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 ${cpl_freq_atm_oce_sec} 3 rstas.nc EXPORTED
  ${atm_grid} ${oce_grid} LAG=${lag_atm_oce}
  P  0  P  2
  LOCTRANS SCRIPR CONSERV
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
   GLBPOS opt
#enddef

#defcfg ifs nemo # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) ---
  A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 ${cpl_freq_atm_oce_sec} 2 rstas.nc EXPORTED
  ${atm_grid} ${oce_grid} LAG=${lag_atm_oce}
  P  0  P  2
  LOCTRANS SCRIPR
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg ifs rnfmapper
# =================================================================================================
# Fields send from Atmosphere to Runoff mapper
# =================================================================================================
#enddef

#defcfg ifs rnfmapper # --- Runoff + Calving ---
  A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 ${cpl_freq_atm_oce_sec} 3 rstas.nc EXPORTED
  ${atm_grid/A/R} RnfA LAG=${lag_atm_oce}
  P  0  P  0
  LOCTRANS SCRIPR CONSERV
   AVERAGE
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
   GLBPOS opt
#enddef

#defcfg rnfmapper nemo
# =================================================================================================
# Fields send from Runoff mapper to the Ocean
# =================================================================================================
#enddef

#defcfg rnfmapper nemo # --- Runoff ---
  R_Runoff_oce O_Runoff 1 ${cpl_freq_atm_oce_sec} 3 rstas.nc EXPORTED
  RnfO ${oce_grid} LAG=0
  P  0  P  2
  SCRIPR CONSERV BLASNEW
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
   GLBPOS opt
   ${oas_mb_fluxcorr} 0
#enddef

#defcfg rnfmapper nemo # --- Calving ---
  R_Calving_oce OCalving 1 ${cpl_freq_atm_oce_sec} 2 rstas.nc EXPORTED
  RnfO ${oce_grid} LAG=0
  P  0  P  2
  SCRIPR CONSERV
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
   GLBPOS opt
#enddef

#defcfg ifs nemo
# =================================================================================================
# Fields send from Ocean to Atmosphere
# =================================================================================================
#enddef

#defcfg ifs nemo # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice ---
  O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 ${cpl_freq_atm_oce_sec} 2 rstos.nc EXPORTED
  ${oce_grid} ${atm_grid/A/L} LAG=${lag_oce_atm}
  P  2  P  0
  LOCTRANS SCRIPR
   AVERAGE
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg ifs tm5
# =================================================================================================
# Fields send from Atmosphere to CTM
# =================================================================================================
#enddef

#defcfg ifs tm5 # --- Surface air pressure ---
  A_LNSP C_LNSP 348 ${cpl_freq_atm_ctm_sec}  1 r_s2d.nc EXPORTED
  ${atm_grid_sh} ${ctm_grid_sh} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  LOCTRANS
   INSTANT
#enddef

#defcfg ifs tm5 # --- Potential vorticity of atmosphere layer ---
expfield_sh A_VOR C_VOR 273 r_vor.nc
#enddef

#defcfg ifs tm5 # --- Divergence of wind ---
expfield_sh A_DIV C_DIV 168 r_div.nc
#enddef

#defcfg ifs tm5 # --- Geopotential  ---
  A_OROG C_OROG 194 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- Surface air pressure ---
  A_SPRES C_SPRES 33 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid} LAG=${lag_atm_ctm}
  P  0  P  0
  SCRIPR
   GAUSWGT D SCALAR LATITUDE 90 9 2.0
#enddef

#defcfg ifs tm5 # --- Air temperature ---
expfield_gg A_TMP C_TMP 110 r_tmp.nc ${lag_atm_ctm_mid} "# --------------- Field 7: Air temperature ---------------"
#enddef

#defcfg ifs tm5 # --- Relative humidity  ---
expfield_gg A_HUM C_HUM 295 r_hum.nc ${lag_atm_ctm_mid} "# --------------- Field 8: Relative humidity  ---------------"
#enddef

#defcfg ifs tm5:chem # --- Atmosphere cloud liquid water content ---
expfield_gg A_CLW C_CLW 119 r_clw.nc ${lag_atm_ctm_mid} "# --------------- Field 9: Atmosphere cloud liquid water content ---------------"
#enddef

#defcfg ifs tm5:chem # --- Atmosphere cloud ice content ---
expfield_gg A_CIW C_CIW 118 r_ciw.nc ${lag_atm_ctm_mid} "# --------------- Field 10: Atmosphere cloud ice content ---------------"
#enddef

#defcfg ifs tm5:chem # --- Cloud area fraction ---
expfield_gg A_CC  C_CC  143 r_cc_.nc ${lag_atm_ctm_mid} "# --------------- Field 11: Cloud area fraction ---------------"
#enddef

#defcfg ifs tm5:chem # --- Cloud area fraction ---
expfield_gg A_CCO C_CCO 143 r_cco.nc ${lag_atm_ctm_mid} "# --------------- Field 12: Cloud area fraction ---------------"
#enddef

#defcfg ifs tm5:chem # --- Cloud area fraction ---
expfield_gg A_CCU C_CCU 143 r_ccu.nc ${lag_atm_ctm_mid} "# --------------- Field 13: Cloud area fraction ---------------"
#enddef

#defcfg ifs tm5 # --- Mass transport ---
expfield_gg_aver A_UMF C_UMF 245 r_umf.nc ${lag_atm_ctm}     "# --------------- Field 14: Untrainment ---------------"
#enddef

#defcfg ifs tm5 # --- Cloud area fraction ---
expfield_gg_aver A_UDR C_UDR 245 r_udr.nc ${lag_atm_ctm}     "# --------------- Field 15: Untrainment ---------------"
#enddef

#defcfg ifs tm5 # --- Mass transport ---
expfield_gg_aver A_DMF C_DMF 245 r_dmf.nc ${lag_atm_ctm}     "# --------------- Field 16: Detrainment ---------------"
#enddef

#defcfg ifs tm5 # --- Mass transport ---
expfield_gg_aver A_DDR C_DDR 245 r_ddr.nc ${lag_atm_ctm}     "# --------------- Field 17: Detrainment ---------------"
#enddef

#defcfg ifs tm5 # --- Land Sea Mask ---
  A_LSMSK C_LSMSK 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Surface albedo ---
  A_ALB C_ALB 17 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- Surface roughness length ---
  A_SR C_SR 370 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Sea ice area fraction ---
  A_CI C_CI 44 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- SST ---
  A_SSTChem C_SST 56 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- Wind speed at 10m ---
  A_WSPD C_WSPD 56 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Moisture content of soil layer ---
  A_SRC C_SRC 247 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Dew point temperature ---
  A_D2M C_D2M 160 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Surface temperature ---
  A_T2M C_T2M 34 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- Surface downward latent heat flux ---
  A_SLHF C_SLHF 355 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- Surface downward sensible heat flux ---
  A_SSHF C_SSHF 357 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- surface_downward_grid_eastward_stress ---
  A_EWSS C_EWSS 23 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5 # --- surface_downward_grid_northward_stress ---
  A_NSSS C_NSSS 24 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- convective_rainfall_flux ---
  A_CP C_CP 154 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- large_scale_rainfall_flux ---
  A_LSP C_LSP 212 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- surface_net_downward_shortwave_flux ---
  A_SSR C_SSR 7 ${cpl_freq_atm_ctm_sec}  2 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm}
  P  0  P  0
  LOCTRANS SCRIPR
   AVERAGE
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- surface_snow_amount ---
  A_SD C_SD 373 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Mass fraction of unfrozen water in soil moisture ---
  A_SWVL1 C_SWVL1 242 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV01 C_TV01 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV02 C_TV02 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV03 C_TV03 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV04 C_TV04 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV05 C_TV05 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV06 C_TV06 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV07 C_TV07 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV09 C_TV09 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV10 C_TV10 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV11 C_TV11 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV13 C_TV13 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV16 C_TV16 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV17 C_TV17 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV18 C_TV18 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Land area fraction ---
  A_TV19 C_TV19 206 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- Low vegetation area fraction ---
  A_CVL C_CVL 446 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg ifs tm5:chem # --- High vegetation area fraction ---
  A_CVH C_CVH 446 ${cpl_freq_atm_ctm_sec}  1 r_g2d.nc EXPORTED
  ${atm_grid_nm} ${ctm_grid_sfc} LAG=${lag_atm_ctm_mid}
  P  0  P  0
  SCRIPR
   BILINEAR D SCALAR LATITUDE 90
#enddef

#defcfg any tm5:o3fb tm5:ch4fb tm5:aerfb
# =================================================================================================
# Fields send from CTM to Atmosphere
# =================================================================================================
#enddef

#defcfg ifs tm5:o3fb # --- Ozone ---
expfield_fbck C_O3 A_O3 244 o3ch4.nc ${lag_ctm_atm} "# --------------- Field 1: Ozone (O3) --------------"
#enddef

#defcfg ifs tm5:ch4fb # --- Methane ---
expfield_fbck C_CH4 A_CH4 244 o3ch4.nc ${lag_ctm_atm} "# --------------- Field 2: Methane (CH4) --------------"
#enddef

#defcfg ifs tm5:co2fb # --- CO2 ---
expfield_fbck_ccycle C_CO2 A_CO2 244 co2mx.nc ${lag_ctm_atm} "# --------------- Field 3: CO2 --------------"
#enddef


#defcfg ifs tm5:aerfb # --- Aerosols concentrations ---
#
# --------------- M7 tracers (25 entries) --------------
#
#expfield_fbck_cutoff C_N1  A_N1  244 C_N1_.nc ${lag_ctm_atm} "# --------------- N1  --------------"
#expfield_fbck_cutoff C_SU1 A_SU1 244 C_SU1.nc ${lag_ctm_atm} "# --------------- SU1 --------------"
expfield_fbck_cutoff C_N2  A_N2  244 C_N2_.nc ${lag_ctm_atm} "# --------------- N2  --------------"
expfield_fbck_cutoff C_SU2 A_SU2 244 C_SU2.nc ${lag_ctm_atm} "# --------------- SU2 --------------"
expfield_fbck_cutoff C_BC2 A_BC2 244 C_BC2.nc ${lag_ctm_atm} "# --------------- BC2 --------------"
expfield_fbck_cutoff C_OC2 A_OM2 244 C_OC2.nc ${lag_ctm_atm} "# --------------- OC2 --------------"
expfield_fbck_cutoff C_N3  A_N3  244 C_N3_.nc ${lag_ctm_atm} "# --------------- N3  --------------"
expfield_fbck_cutoff C_SU3 A_SU3 244 C_SU3.nc ${lag_ctm_atm} "# --------------- SU3 --------------"
expfield_fbck_cutoff C_BC3 A_BC3 244 C_BC3.nc ${lag_ctm_atm} "# --------------- BC3 --------------"
expfield_fbck_cutoff C_OC3 A_OM3 244 C_OC3.nc ${lag_ctm_atm} "# --------------- OC3 --------------"
expfield_fbck_cutoff C_SS3 A_SS3 244 C_SS3.nc ${lag_ctm_atm} "# --------------- SS3 --------------"
expfield_fbck_cutoff C_DU3 A_DD3 244 C_DU3.nc ${lag_ctm_atm} "# --------------- DU3 --------------"
expfield_fbck_cutoff C_N4  A_N4  244 C_N4_.nc ${lag_ctm_atm} "# --------------- N4  --------------"
expfield_fbck_cutoff C_SU4 A_SU4 244 C_SU4.nc ${lag_ctm_atm} "# --------------- SU4 --------------"
expfield_fbck_cutoff C_BC4 A_BC4 244 C_BC4.nc ${lag_ctm_atm} "# --------------- BC4 --------------"
expfield_fbck_cutoff C_OC4 A_OM4 244 C_OC4.nc ${lag_ctm_atm} "# --------------- OC4 --------------"
expfield_fbck_cutoff C_SS4 A_SS4 244 C_SS4.nc ${lag_ctm_atm} "# --------------- SS4 --------------"
expfield_fbck_cutoff C_DU4 A_DD4 244 C_DU4.nc ${lag_ctm_atm} "# --------------- DU4 --------------"
expfield_fbck_cutoff C_N5  A_N5  244 C_N5_.nc ${lag_ctm_atm} "# --------------- N5  --------------"
expfield_fbck_cutoff C_BC5 A_BC5 244 C_BC5.nc ${lag_ctm_atm} "# --------------- BC5 --------------"
expfield_fbck_cutoff C_OC5 A_OM5 244 C_OC5.nc ${lag_ctm_atm} "# --------------- OC5 --------------"
expfield_fbck_cutoff C_N6  A_N6  244 C_N6_.nc ${lag_ctm_atm} "# --------------- N6  --------------"
expfield_fbck_cutoff C_DU6 A_DD6 244 C_DU6.nc ${lag_ctm_atm} "# --------------- DU6 --------------"
expfield_fbck_cutoff C_N7  A_N7  244 C_N7_.nc ${lag_ctm_atm} "# --------------- N7  --------------"
expfield_fbck_cutoff C_DU7 A_DD7 244 C_DU7.nc ${lag_ctm_atm} "# --------------- DU7 --------------"
expfield_fbck_cutoff C_NO3 A_NO3 244 C_NO3.nc ${lag_ctm_atm} "# --------------- NO3 --------------"
expfield_fbck_cutoff C_MSA A_MSA 244 C_MSA.nc ${lag_ctm_atm} "# --------------- MSA --------------"
#
# --------------- AEROSOL OPTICAL PROPERTIES FOR THE 14 WAVELENGTHS --------------
# ---------------  OF THE MCRAD RADIATION SCHEME (14*3 ENTRIES) --------------
#
expfield_fbck_cutoff C_AOD_01  A_AOD_01 244 C_AOD_01 ${lag_ctm_atm} "# ------------- AOD #1 --------------"
expfield_fbck_cutoff C_AOD_02  A_AOD_02 244 C_AOD_02 ${lag_ctm_atm} "# ------------- AOD #2 --------------"
expfield_fbck_cutoff C_AOD_03  A_AOD_03 244 C_AOD_03 ${lag_ctm_atm} "# ------------- AOD #3 --------------"
expfield_fbck_cutoff C_AOD_04  A_AOD_04 244 C_AOD_04 ${lag_ctm_atm} "# ------------- AOD #4 --------------"
expfield_fbck_cutoff C_AOD_05  A_AOD_05 244 C_AOD_05 ${lag_ctm_atm} "# ------------- AOD #5 --------------"
expfield_fbck_cutoff C_AOD_06  A_AOD_06 244 C_AOD_06 ${lag_ctm_atm} "# ------------- AOD #6 --------------"
expfield_fbck_cutoff C_AOD_07  A_AOD_07 244 C_AOD_07 ${lag_ctm_atm} "# ------------- AOD #7 --------------"
expfield_fbck_cutoff C_AOD_08  A_AOD_08 244 C_AOD_08 ${lag_ctm_atm} "# ------------- AOD #8 --------------"
expfield_fbck_cutoff C_AOD_09  A_AOD_09 244 C_AOD_09 ${lag_ctm_atm} "# ------------- AOD #9 --------------"
expfield_fbck_cutoff C_AOD_10  A_AOD_10 244 C_AOD_10 ${lag_ctm_atm} "# ------------- AOD #10 -------------"
expfield_fbck_cutoff C_AOD_11  A_AOD_11 244 C_AOD_11 ${lag_ctm_atm} "# ------------- AOD #11 -------------"
expfield_fbck_cutoff C_AOD_12  A_AOD_12 244 C_AOD_12 ${lag_ctm_atm} "# ------------- AOD #12 -------------"
expfield_fbck_cutoff C_AOD_13  A_AOD_13 244 C_AOD_13 ${lag_ctm_atm} "# ------------- AOD #13 -------------"
expfield_fbck_cutoff C_AOD_14  A_AOD_14 244 C_AOD_14 ${lag_ctm_atm} "# ------------- AOD #14 -------------"
expfield_fbck_cutoff C_SSA_01  A_SSA_01 244 C_SSA_01 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #1 ----"
expfield_fbck_cutoff C_SSA_02  A_SSA_02 244 C_SSA_02 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #2 ----"
expfield_fbck_cutoff C_SSA_03  A_SSA_03 244 C_SSA_03 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #3 ----"
expfield_fbck_cutoff C_SSA_04  A_SSA_04 244 C_SSA_04 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #4 ----"
expfield_fbck_cutoff C_SSA_05  A_SSA_05 244 C_SSA_05 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #5 ----"
expfield_fbck_cutoff C_SSA_06  A_SSA_06 244 C_SSA_06 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #6 ----"
expfield_fbck_cutoff C_SSA_07  A_SSA_07 244 C_SSA_07 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #7 ----"
expfield_fbck_cutoff C_SSA_08  A_SSA_08 244 C_SSA_08 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #8 ----"
expfield_fbck_cutoff C_SSA_09  A_SSA_09 244 C_SSA_09 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #9 ----"
expfield_fbck_cutoff C_SSA_10  A_SSA_10 244 C_SSA_10 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #10 ---"
expfield_fbck_cutoff C_SSA_11  A_SSA_11 244 C_SSA_11 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #11 ---"
expfield_fbck_cutoff C_SSA_12  A_SSA_12 244 C_SSA_12 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #12 ---"
expfield_fbck_cutoff C_SSA_13  A_SSA_13 244 C_SSA_13 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #13 ---"
expfield_fbck_cutoff C_SSA_14  A_SSA_14 244 C_SSA_14 ${lag_ctm_atm} "# ----- Single-Scattering Albedo #14 ---"
expfield_fbck_cutoff C_ASF_01  A_ASF_01 244 C_ASF_01 ${lag_ctm_atm} "# --------- Asymmetry Factor #1 --------"
expfield_fbck_cutoff C_ASF_02  A_ASF_02 244 C_ASF_02 ${lag_ctm_atm} "# --------- Asymmetry Factor #2 --------"
expfield_fbck_cutoff C_ASF_03  A_ASF_03 244 C_ASF_03 ${lag_ctm_atm} "# --------- Asymmetry Factor #3 --------"
expfield_fbck_cutoff C_ASF_04  A_ASF_04 244 C_ASF_04 ${lag_ctm_atm} "# --------- Asymmetry Factor #4 --------"
expfield_fbck_cutoff C_ASF_05  A_ASF_05 244 C_ASF_05 ${lag_ctm_atm} "# --------- Asymmetry Factor #5 --------"
expfield_fbck_cutoff C_ASF_06  A_ASF_06 244 C_ASF_06 ${lag_ctm_atm} "# --------- Asymmetry Factor #6 --------"
expfield_fbck_cutoff C_ASF_07  A_ASF_07 244 C_ASF_07 ${lag_ctm_atm} "# --------- Asymmetry Factor #7 --------"
expfield_fbck_cutoff C_ASF_08  A_ASF_08 244 C_ASF_08 ${lag_ctm_atm} "# --------- Asymmetry Factor #8 --------"
expfield_fbck_cutoff C_ASF_09  A_ASF_09 244 C_ASF_09 ${lag_ctm_atm} "# --------- Asymmetry Factor #9 --------"
expfield_fbck_cutoff C_ASF_10  A_ASF_10 244 C_ASF_10 ${lag_ctm_atm} "# --------- Asymmetry Factor #10 -------"
expfield_fbck_cutoff C_ASF_11  A_ASF_11 244 C_ASF_11 ${lag_ctm_atm} "# --------- Asymmetry Factor #11 -------"
expfield_fbck_cutoff C_ASF_12  A_ASF_12 244 C_ASF_12 ${lag_ctm_atm} "# --------- Asymmetry Factor #12 -------"
expfield_fbck_cutoff C_ASF_13  A_ASF_13 244 C_ASF_13 ${lag_ctm_atm} "# --------- Asymmetry Factor #13 -------"
expfield_fbck_cutoff C_ASF_14  A_ASF_14 244 C_ASF_14 ${lag_ctm_atm} "# --------- Asymmetry Factor #14 -------"
#enddef

#defcfg atm lpjg
# ====================================================================
# Fields send from Atmosphere to LPJ-GUESS
# ====================================================================
#enddef

#defcfg atm lpjg # --- '2m_temperature' 'K' --
  T2MVeg T2M_LPJG 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg # --- 'Total precip' 'm_timestep-1' ---
  TPVeg TPRE_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Mass snow' 'kg_m-2' ---
  SDVeg SNOC_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Density snow' 'kg_m-3' ---
  SDensVeg SNOD_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil T lay1' 'K' ---
  SoilTVeg.L001 ST1L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil T lay2' 'K' ---
  SoilTVeg.L002 ST2L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg # --- 'Soil T lay3' 'K' ---
  SoilTVeg.L003 ST3L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil T lay4' 'K' ---
  SoilTVeg.L004 ST4L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil M lay1' 'm3_m-3' ---
  SoilMVeg.L001 SM1L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil M lay2' 'm3_m-3' ---
  SoilMVeg.L002 SM2L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil M lay3' 'm3_m-3' ---
  SoilMVeg.L003 SM3L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'Soil M lay4' 'm3_m-3' ---
  SoilMVeg.L004 SM4L_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'surf sol SW rad' 'J_m-2' ---
  SSRVeg SWNR_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef

#defcfg atm lpjg  # --- 'surf LW rad' 'J_m-2' ---
  SLRVeg LWNR_LPJ 1 ${cpl_freq_atm_lpjg_sec} 1 vegin.nc EXPORTED
  ${atm_grid} ${lpjg_grid} LAG=${lag_atm_lpjg}
  P 0 P 0
  LOCTRANS
   AVERAGE
#enddef


#defcfg lpjg atm
# ====================================================================
# Fields send from LPJ-GUESS to Atmosphere
# ====================================================================
#enddef


#defcfg atm lpjg  # --- 'low_LAI' 'm2_m-2' ---
  GUE_LLAI LAILVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef

#defcfg atm lpjg  # --- 'high_LAI' 'm2 m-2' ---
  GUE_HLAI LAIHVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef

#defcfg atm lpjg  # --- 'High Veg Type' '1-20' ---
  GUE_TYPH TypeHVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef

#defcfg atm lpjg  # --- 'LPJG High Veg Frac' '0-1' ---
  GUE_FRAH FracHVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef

#defcfg atm lpjg  # --- 'Low Veg Type' '1-20' ---
  GUE_TYPL TypeLVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef

#defcfg atm lpjg  # --- 'LPJG Low Veg Frac' '0-1' ---
  GUE_FRAL FracLVeg 1 ${cpl_freq_atm_lpjg_sec} 1 lpjgv.nc EXPORTED
  ${lpjg_grid} ${atm_grid} LAG=${lag_lpjg_atm}
  P 0 P 0
  LOCTRANS
   INSTANT
#enddef


#defcfg ifs amip
# =================================================================================================
# Fields send from AMIP to IFS
# =================================================================================================
#enddef

#defcfg ifs amip # --- AMIP forcing data ---
  AMIP_sst:AMIP_sic A_SST:A_Ice_frac 1 ${cpl_freq_amip_sec} 1 rstas.nc EXPORTED
  AMIP ${atm_grid/A/L} LAG=0
  P  0  P  0
  SCRIPR
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg lpjg tm5:co2
# ====================================================================
# Fields send from TM5-MP to LPJ-GUESS
# ====================================================================
#enddef

#defcfg lpjg tm5:co2 # --- atmospheric CO2 concentrations (ppm - daily average/gridcell) ---
  LCO2_TM5 CO2_LPJG 1 ${cpl_freq_ccycle_sec}  1 l_co2.nc EXPORTED
  ${ctm_grid} ${atm_grid/A/B} LAG=${lag_ctm_atm}
  P  0  P  0
  SCRIPR
   BILINEAR LR SCALAR LATITUDE 1
#enddef

#defcfg lpjg tm5:co2
# ====================================================================
# Fields send from LPJ-GUESS to TM5-MP
# ====================================================================
#enddef

#defcfg lpjg tm5 # --- C fluxes (kg carbon/m2/d) ---
  GUE_CNAT:GUE_CANT:GUE_CNPP TM5_LandCNAT:TM5_LandCANT:TM5_LandCNPP 1 ${cpl_freq_ccycle_sec}  2 rlpjg.nc ${ccycle_out_fluxes}
  ${atm_grid/A/B} ${ctm_grid} LAG=${lag_lpjg_atm}
  P  0  P  0
  SCRIPR CONSERV
   GAUSWGT D SCALAR LATITUDE 1 9 2.0
   GLBPOS
#enddef

#defcfg pisces tm5:co2
# ====================================================================
# Fields send from TM5-MP to PISCES.
#  - temporal interpolation: inst or daily mean?
# ====================================================================
#enddef

#defcfg pisces tm5:co2 # --- atmospheric CO2 concentrations (ppm) ---
  OCO2_TM5 O_AtmCO2 1 ${cpl_freq_ccycle_sec}  1 o_co2.nc EXPORTED
  ${ctm_grid/C/L} ${oce_grid} LAG=${lag_ctm_atm}
  P  0  P  2
  SCRIPR
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
#enddef

#defcfg pisces tm5:co2
# ====================================================================
# Fields send from PISCES to TM5-MP
# ====================================================================
#enddef

#defcfg pisces tm5 # --- C fluxes (molC/m2/s) ---
  O_CO2FLX TM5_OceCFLX 1 ${cpl_freq_ccycle_sec}  3 pisce.nc ${ccycle_out_fluxes}
  ${oce_grid} ${ctm_grid/C/L} LAG=${lag_oce_atm}
  P  2  P  0
  LOCTRANS SCRIPR CONSERV
   AVERAGE
   GAUSWGT LR SCALAR LATITUDE 1 9 2.0
   GLOBAL
#enddef

# -------------------------------------------------------------------------------------------------
 \$END
# =================================================================================================
END_OF_NAMCOUPLE
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ # General OASIS configuration =~ ^[[:blank:]]*$ ]]
++ [[ # General OASIS configuration =~ ^#defcfg ]]
++ [[ # General OASIS configuration =~ ^#enddef ]]
++ [[ # General OASIS configuration =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# General OASIS configuration'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[  $NFIELDS =~ ^[[:blank:]]*$ ]]
++ [[  $NFIELDS =~ ^#defcfg ]]
++ [[  $NFIELDS =~ ^#enddef ]]
++ [[  $NFIELDS =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $NFIELDS'
++ IFS=
++ read line
++ [[     9 =~ ^[[:blank:]]*$ ]]
++ [[     9 =~ ^#defcfg ]]
++ [[     9 =~ ^#enddef ]]
++ [[     9 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '    9'
++ IFS=
++ read line
++ [[  $END =~ ^[[:blank:]]*$ ]]
++ [[  $END =~ ^#defcfg ]]
++ [[  $END =~ ^#enddef ]]
++ [[  $END =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $END'
++ IFS=
++ read line
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^[[:blank:]]*$ ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#defcfg ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#enddef ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# -------------------------------------------------------------------------------------------------'
++ IFS=
++ read line
++ [[  $RUNTIME =~ ^[[:blank:]]*$ ]]
++ [[  $RUNTIME =~ ^#defcfg ]]
++ [[  $RUNTIME =~ ^#enddef ]]
++ [[  $RUNTIME =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $RUNTIME'
++ IFS=
++ read line
++ [[     2592000 =~ ^[[:blank:]]*$ ]]
++ [[     2592000 =~ ^#defcfg ]]
++ [[     2592000 =~ ^#enddef ]]
++ [[     2592000 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '    2592000'
++ IFS=
++ read line
++ [[  $END =~ ^[[:blank:]]*$ ]]
++ [[  $END =~ ^#defcfg ]]
++ [[  $END =~ ^#enddef ]]
++ [[  $END =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $END'
++ IFS=
++ read line
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^[[:blank:]]*$ ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#defcfg ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#enddef ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# -------------------------------------------------------------------------------------------------'
++ IFS=
++ read line
++ [[  $NLOGPRT =~ ^[[:blank:]]*$ ]]
++ [[  $NLOGPRT =~ ^#defcfg ]]
++ [[  $NLOGPRT =~ ^#enddef ]]
++ [[  $NLOGPRT =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $NLOGPRT'
++ IFS=
++ read line
++ [[     0  =~ ^[[:blank:]]*$ ]]
++ [[     0  =~ ^#defcfg ]]
++ [[     0  =~ ^#enddef ]]
++ [[     0  =~ ^expfield ]]
++ ((  lineout  ))
++ echo '    0 '
++ IFS=
++ read line
++ [[  $END =~ ^[[:blank:]]*$ ]]
++ [[  $END =~ ^#defcfg ]]
++ [[  $END =~ ^#enddef ]]
++ [[  $END =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $END'
++ IFS=
++ read line
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^[[:blank:]]*$ ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#defcfg ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#enddef ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# -------------------------------------------------------------------------------------------------'
++ IFS=
++ read line
++ [[  $STRINGS =~ ^[[:blank:]]*$ ]]
++ [[  $STRINGS =~ ^#defcfg ]]
++ [[  $STRINGS =~ ^#enddef ]]
++ [[  $STRINGS =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $STRINGS'
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo'
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ [[ -n '' ]]
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ # Fields send from Atmosphere to Ocean =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Atmosphere to Ocean =~ ^#defcfg ]]
++ [[ # Fields send from Atmosphere to Ocean =~ ^#enddef ]]
++ [[ # Fields send from Atmosphere to Ocean =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# Fields send from Atmosphere to Ocean'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo # --- Momentum fluxes for oce and ice on U grid --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo # --- Momentum fluxes for oce and ice on U grid --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo # --- Momentum fluxes for oce and ice on U grid ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo '
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo # --- Momentum fluxes for oce and ice on U grid ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Momentum fluxes for oce and ice on U grid ---'
++ ((  lineout  ))
++ [[ -n # --- Momentum fluxes for oce and ice on U grid --- ]]
echo $cfgstring
+++ echo ifs nemo
++ echo '# --- Momentum fluxes for oce and ice on U grid --- [ifs nemo]'
++ IFS=
++ read line
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 2700 2 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 2700 2 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 2700 2 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 2700 2 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux1:O_OTauy1:O_ITaux1:O_ITauy1 1 2700 2 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   A256 Ou25 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 Ou25 LAG=900 =~ ^#defcfg ]]
++ [[   A256 Ou25 LAG=900 =~ ^#enddef ]]
++ [[   A256 Ou25 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A256 Ou25 LAG=900'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT D SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo # --- Momentum fluxes for oce and ice on V grid --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo # --- Momentum fluxes for oce and ice on V grid --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo # --- Momentum fluxes for oce and ice on V grid ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo '
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo # --- Momentum fluxes for oce and ice on V grid ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Momentum fluxes for oce and ice on V grid ---'
++ ((  lineout  ))
++ [[ -n # --- Momentum fluxes for oce and ice on V grid --- ]]
echo $cfgstring
+++ echo ifs nemo
++ echo '# --- Momentum fluxes for oce and ice on V grid --- [ifs nemo]'
++ IFS=
++ read line
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 2700 2 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 2700 2 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 2700 2 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 2700 2 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A_TauX_oce:A_TauY_oce:A_TauX_ice:A_TauY_ice O_OTaux2:O_OTauy2:O_ITaux2:O_ITauy2 1 2700 2 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   A256 Ov25 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 Ov25 LAG=900 =~ ^#defcfg ]]
++ [[   A256 Ov25 LAG=900 =~ ^#enddef ]]
++ [[   A256 Ov25 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A256 Ov25 LAG=900'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT D SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo '
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) ---'
++ ((  lineout  ))
++ [[ -n # --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) --- ]]
echo $cfgstring
+++ echo ifs nemo
++ echo '# --- Non-solar and solar radiation over ocean+ice, total evaporation, precipitation (conserved, preserved sign) --- [ifs nemo]'
++ IFS=
++ read line
++ [[   A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 2700 3 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 2700 3 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 2700 3 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 2700 3 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A_Qns_mix:A_Qs_mix:A_Evap_total:A_Precip_liquid:A_Precip_solid O_QnsMix:O_QsrMix:OTotEvap:OTotRain:OTotSnow 1 2700 3 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   A256 Ot25 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 Ot25 LAG=900 =~ ^#defcfg ]]
++ [[   A256 Ot25 LAG=900 =~ ^#enddef ]]
++ [[   A256 Ot25 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A256 Ot25 LAG=900'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR CONSERV =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR CONSERV'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT D SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[    GLBPOS opt =~ ^[[:blank:]]*$ ]]
++ [[    GLBPOS opt =~ ^#defcfg ]]
++ [[    GLBPOS opt =~ ^#enddef ]]
++ [[    GLBPOS opt =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GLBPOS opt'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo '
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) ---'
++ ((  lineout  ))
++ [[ -n # --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) --- ]]
echo $cfgstring
+++ echo ifs nemo
++ echo '# --- Solar/non-solar radiation over ice, dQns/dT, evaporation over ice (not conserved) --- [ifs nemo]'
++ IFS=
++ read line
++ [[   A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 2700 2 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 2700 2 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 2700 2 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 2700 2 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A_Qs_ice:A_Qns_ice:A_dQns_dT:A_Evap_ice O_QsrIce:O_QnsIce:O_dQnsdT:OIceEvap 1 2700 2 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   A256 Ot25 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 Ot25 LAG=900 =~ ^#defcfg ]]
++ [[   A256 Ot25 LAG=900 =~ ^#enddef ]]
++ [[   A256 Ot25 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A256 Ot25 LAG=900'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT D SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs rnfmapper =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs rnfmapper =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs rnfmapper' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs rnfmapper'
++ has_config ifs rnfmapper
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs rnfmapper' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ [[ -n '' ]]
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ # Fields send from Atmosphere to Runoff mapper =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Atmosphere to Runoff mapper =~ ^#defcfg ]]
++ [[ # Fields send from Atmosphere to Runoff mapper =~ ^#enddef ]]
++ [[ # Fields send from Atmosphere to Runoff mapper =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# Fields send from Atmosphere to Runoff mapper'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs rnfmapper # --- Runoff + Calving --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs rnfmapper # --- Runoff + Calving --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs rnfmapper # --- Runoff + Calving ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs rnfmapper '
++ has_config ifs rnfmapper
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs rnfmapper # --- Runoff + Calving ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Runoff + Calving ---'
++ ((  lineout  ))
++ [[ -n # --- Runoff + Calving --- ]]
echo $cfgstring
+++ echo ifs rnfmapper
++ echo '# --- Runoff + Calving --- [ifs rnfmapper]'
++ IFS=
++ read line
++ [[   A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 2700 3 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 2700 3 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 2700 3 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 2700 3 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  A_Runoff:A_Calving R_Runoff_atm:R_Calving_atm 1 2700 3 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   R256 RnfA LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   R256 RnfA LAG=900 =~ ^#defcfg ]]
++ [[   R256 RnfA LAG=900 =~ ^#enddef ]]
++ [[   R256 RnfA LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  R256 RnfA LAG=900'
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  0'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR CONSERV =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR CONSERV'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT D SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[    GLBPOS opt =~ ^[[:blank:]]*$ ]]
++ [[    GLBPOS opt =~ ^#defcfg ]]
++ [[    GLBPOS opt =~ ^#enddef ]]
++ [[    GLBPOS opt =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GLBPOS opt'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg rnfmapper nemo =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg rnfmapper nemo =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg rnfmapper nemo' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='rnfmapper nemo'
++ has_config rnfmapper nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' rnfmapper == any ']'
++ [[ rnfmapper == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg rnfmapper nemo' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ [[ -n '' ]]
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ # Fields send from Runoff mapper to the Ocean =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Runoff mapper to the Ocean =~ ^#defcfg ]]
++ [[ # Fields send from Runoff mapper to the Ocean =~ ^#enddef ]]
++ [[ # Fields send from Runoff mapper to the Ocean =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# Fields send from Runoff mapper to the Ocean'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg rnfmapper nemo # --- Runoff --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg rnfmapper nemo # --- Runoff --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg rnfmapper nemo # --- Runoff ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='rnfmapper nemo '
++ has_config rnfmapper nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' rnfmapper == any ']'
++ [[ rnfmapper == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg rnfmapper nemo # --- Runoff ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Runoff ---'
++ ((  lineout  ))
++ [[ -n # --- Runoff --- ]]
echo $cfgstring
+++ echo rnfmapper nemo
++ echo '# --- Runoff --- [rnfmapper nemo]'
++ IFS=
++ read line
++ [[   R_Runoff_oce O_Runoff 1 2700 3 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   R_Runoff_oce O_Runoff 1 2700 3 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   R_Runoff_oce O_Runoff 1 2700 3 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   R_Runoff_oce O_Runoff 1 2700 3 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  R_Runoff_oce O_Runoff 1 2700 3 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   RnfO Ot25 LAG=0 =~ ^[[:blank:]]*$ ]]
++ [[   RnfO Ot25 LAG=0 =~ ^#defcfg ]]
++ [[   RnfO Ot25 LAG=0 =~ ^#enddef ]]
++ [[   RnfO Ot25 LAG=0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  RnfO Ot25 LAG=0'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   SCRIPR CONSERV BLASNEW =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR CONSERV BLASNEW =~ ^#defcfg ]]
++ [[   SCRIPR CONSERV BLASNEW =~ ^#enddef ]]
++ [[   SCRIPR CONSERV BLASNEW =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  SCRIPR CONSERV BLASNEW'
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT LR SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[    GLBPOS opt =~ ^[[:blank:]]*$ ]]
++ [[    GLBPOS opt =~ ^#defcfg ]]
++ [[    GLBPOS opt =~ ^#enddef ]]
++ [[    GLBPOS opt =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GLBPOS opt'
++ IFS=
++ read line
++ [[    1.07945 0 =~ ^[[:blank:]]*$ ]]
++ [[    1.07945 0 =~ ^#defcfg ]]
++ [[    1.07945 0 =~ ^#enddef ]]
++ [[    1.07945 0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   1.07945 0'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg rnfmapper nemo # --- Calving --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg rnfmapper nemo # --- Calving --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg rnfmapper nemo # --- Calving ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='rnfmapper nemo '
++ has_config rnfmapper nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' rnfmapper == any ']'
++ [[ rnfmapper == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ rnfmapper ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
++ for __m in '$config'
++ [[ lim3 =~ rnfmapper ]]
++ for __m in '$config'
++ [[ rnfmapper =~ rnfmapper ]]
++ [[ rnfmapper =~ rnfmapper ]]
++ __f=1
++ for __m in '$config'
++ [[ xios:detached =~ rnfmapper ]]
++ for __m in '$config'
++ [[ oasis =~ rnfmapper ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ rnfmapper ]]
++ for __m in '$config'
++ [[ atm =~ rnfmapper ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg rnfmapper nemo # --- Calving ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Calving ---'
++ ((  lineout  ))
++ [[ -n # --- Calving --- ]]
echo $cfgstring
+++ echo rnfmapper nemo
++ echo '# --- Calving --- [rnfmapper nemo]'
++ IFS=
++ read line
++ [[   R_Calving_oce OCalving 1 2700 2 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   R_Calving_oce OCalving 1 2700 2 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   R_Calving_oce OCalving 1 2700 2 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   R_Calving_oce OCalving 1 2700 2 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  R_Calving_oce OCalving 1 2700 2 rstas.nc EXPORTED'
++ IFS=
++ read line
++ [[   RnfO Ot25 LAG=0 =~ ^[[:blank:]]*$ ]]
++ [[   RnfO Ot25 LAG=0 =~ ^#defcfg ]]
++ [[   RnfO Ot25 LAG=0 =~ ^#enddef ]]
++ [[   RnfO Ot25 LAG=0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  RnfO Ot25 LAG=0'
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  0  P  2'
++ IFS=
++ read line
++ [[   SCRIPR CONSERV =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR CONSERV =~ ^#defcfg ]]
++ [[   SCRIPR CONSERV =~ ^#enddef ]]
++ [[   SCRIPR CONSERV =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  SCRIPR CONSERV'
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT LR SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[    GLBPOS opt =~ ^[[:blank:]]*$ ]]
++ [[    GLBPOS opt =~ ^#defcfg ]]
++ [[    GLBPOS opt =~ ^#enddef ]]
++ [[    GLBPOS opt =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GLBPOS opt'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo'
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ [[ -n '' ]]
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ # Fields send from Ocean to Atmosphere =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Ocean to Atmosphere =~ ^#defcfg ]]
++ [[ # Fields send from Ocean to Atmosphere =~ ^#enddef ]]
++ [[ # Fields send from Ocean to Atmosphere =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# Fields send from Ocean to Atmosphere'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs nemo # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs nemo # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs nemo # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs nemo '
++ has_config ifs nemo
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
++ lineout=1
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs nemo # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice ---'
++ ((  lineout  ))
++ [[ -n # --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice --- ]]
echo $cfgstring
+++ echo ifs nemo
++ echo '# --- SST, ice temperature, albedo, fraction, thickness; snow thickness over ice --- [ifs nemo]'
++ IFS=
++ read line
++ [[   O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 2700 2 rstos.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 2700 2 rstos.nc EXPORTED =~ ^#defcfg ]]
++ [[   O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 2700 2 rstos.nc EXPORTED =~ ^#enddef ]]
++ [[   O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 2700 2 rstos.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  O_SSTSST:O_TepIce:O_AlbIce:OIceFrc:OIceTck:OSnwTck A_SST:A_Ice_temp:A_Ice_albedo:A_Ice_frac:A_Ice_thickness:A_Snow_thickness 1 2700 2 rstos.nc EXPORTED'
++ IFS=
++ read line
++ [[   Ot25 L256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   Ot25 L256 LAG=900 =~ ^#defcfg ]]
++ [[   Ot25 L256 LAG=900 =~ ^#enddef ]]
++ [[   Ot25 L256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  Ot25 L256 LAG=900'
++ IFS=
++ read line
++ [[   P  2  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  2  P  0 =~ ^#defcfg ]]
++ [[   P  2  P  0 =~ ^#enddef ]]
++ [[   P  2  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  P  2  P  0'
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ echo '  LOCTRANS SCRIPR'
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   AVERAGE'
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ echo '   GAUSWGT LR SCALAR LATITUDE 1 9 2.0'
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5'
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from Atmosphere to CTM =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Atmosphere to CTM =~ ^#defcfg ]]
++ [[ # Fields send from Atmosphere to CTM =~ ^#enddef ]]
++ [[ # Fields send from Atmosphere to CTM =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Surface air pressure --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Surface air pressure --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface air pressure ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface air pressure ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface air pressure ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_LNSP C_LNSP 348   1 r_s2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_LNSP C_LNSP 348   1 r_s2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_LNSP C_LNSP 348   1 r_s2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_LNSP C_LNSP 348   1 r_s2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   T511 C511 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   T511 C511 LAG= =~ ^#defcfg ]]
++ [[   T511 C511 LAG= =~ ^#enddef ]]
++ [[   T511 C511 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Potential vorticity of atmosphere layer --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Potential vorticity of atmosphere layer --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Potential vorticity of atmosphere layer ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Potential vorticity of atmosphere layer ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Potential vorticity of atmosphere layer ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_sh A_VOR C_VOR 273 r_vor.nc =~ ^[[:blank:]]*$ ]]
++ [[ expfield_sh A_VOR C_VOR 273 r_vor.nc =~ ^#defcfg ]]
++ [[ expfield_sh A_VOR C_VOR 273 r_vor.nc =~ ^#enddef ]]
++ [[ expfield_sh A_VOR C_VOR 273 r_vor.nc =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Divergence of wind --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Divergence of wind --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Divergence of wind ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Divergence of wind ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Divergence of wind ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_sh A_DIV C_DIV 168 r_div.nc =~ ^[[:blank:]]*$ ]]
++ [[ expfield_sh A_DIV C_DIV 168 r_div.nc =~ ^#defcfg ]]
++ [[ expfield_sh A_DIV C_DIV 168 r_div.nc =~ ^#enddef ]]
++ [[ expfield_sh A_DIV C_DIV 168 r_div.nc =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Geopotential  --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Geopotential  --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Geopotential  ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Geopotential  ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Geopotential  ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_OROG C_OROG 194   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_OROG C_OROG 194   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_OROG C_OROG 194   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_OROG C_OROG 194   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Surface air pressure --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Surface air pressure --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface air pressure ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface air pressure ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface air pressure ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SPRES C_SPRES 33   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SPRES C_SPRES 33   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SPRES C_SPRES 33   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SPRES C_SPRES 33   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM3 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM3 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM3 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM3 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 90 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 90 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 90 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 90 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Air temperature --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Air temperature --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Air temperature ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Air temperature ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Air temperature ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_TMP C_TMP 110 r_tmp.nc  "# --------------- Field 7: Air temperature ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_TMP C_TMP 110 r_tmp.nc  "# --------------- Field 7: Air temperature ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_TMP C_TMP 110 r_tmp.nc  "# --------------- Field 7: Air temperature ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_TMP C_TMP 110 r_tmp.nc  "# --------------- Field 7: Air temperature ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Relative humidity  --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Relative humidity  --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Relative humidity  ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Relative humidity  ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Relative humidity  ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_HUM C_HUM 295 r_hum.nc  "# --------------- Field 8: Relative humidity  ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_HUM C_HUM 295 r_hum.nc  "# --------------- Field 8: Relative humidity  ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_HUM C_HUM 295 r_hum.nc  "# --------------- Field 8: Relative humidity  ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_HUM C_HUM 295 r_hum.nc  "# --------------- Field 8: Relative humidity  ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Atmosphere cloud liquid water content --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Atmosphere cloud liquid water content --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Atmosphere cloud liquid water content ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Atmosphere cloud liquid water content ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Atmosphere cloud liquid water content ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_CLW C_CLW 119 r_clw.nc  "# --------------- Field 9: Atmosphere cloud liquid water content ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_CLW C_CLW 119 r_clw.nc  "# --------------- Field 9: Atmosphere cloud liquid water content ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_CLW C_CLW 119 r_clw.nc  "# --------------- Field 9: Atmosphere cloud liquid water content ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_CLW C_CLW 119 r_clw.nc  "# --------------- Field 9: Atmosphere cloud liquid water content ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Atmosphere cloud ice content --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Atmosphere cloud ice content --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Atmosphere cloud ice content ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Atmosphere cloud ice content ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Atmosphere cloud ice content ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_CIW C_CIW 118 r_ciw.nc  "# --------------- Field 10: Atmosphere cloud ice content ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_CIW C_CIW 118 r_ciw.nc  "# --------------- Field 10: Atmosphere cloud ice content ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_CIW C_CIW 118 r_ciw.nc  "# --------------- Field 10: Atmosphere cloud ice content ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_CIW C_CIW 118 r_ciw.nc  "# --------------- Field 10: Atmosphere cloud ice content ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Cloud area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_CC  C_CC  143 r_cc_.nc  "# --------------- Field 11: Cloud area fraction ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_CC  C_CC  143 r_cc_.nc  "# --------------- Field 11: Cloud area fraction ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_CC  C_CC  143 r_cc_.nc  "# --------------- Field 11: Cloud area fraction ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_CC  C_CC  143 r_cc_.nc  "# --------------- Field 11: Cloud area fraction ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Cloud area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_CCO C_CCO 143 r_cco.nc  "# --------------- Field 12: Cloud area fraction ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_CCO C_CCO 143 r_cco.nc  "# --------------- Field 12: Cloud area fraction ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_CCO C_CCO 143 r_cco.nc  "# --------------- Field 12: Cloud area fraction ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_CCO C_CCO 143 r_cco.nc  "# --------------- Field 12: Cloud area fraction ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Cloud area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Cloud area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Cloud area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg A_CCU C_CCU 143 r_ccu.nc  "# --------------- Field 13: Cloud area fraction ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg A_CCU C_CCU 143 r_ccu.nc  "# --------------- Field 13: Cloud area fraction ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg A_CCU C_CCU 143 r_ccu.nc  "# --------------- Field 13: Cloud area fraction ---------------" =~ ^#enddef ]]
++ [[ expfield_gg A_CCU C_CCU 143 r_ccu.nc  "# --------------- Field 13: Cloud area fraction ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Mass transport ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg_aver A_UMF C_UMF 245 r_umf.nc 900     "# --------------- Field 14: Untrainment ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg_aver A_UMF C_UMF 245 r_umf.nc 900     "# --------------- Field 14: Untrainment ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg_aver A_UMF C_UMF 245 r_umf.nc 900     "# --------------- Field 14: Untrainment ---------------" =~ ^#enddef ]]
++ [[ expfield_gg_aver A_UMF C_UMF 245 r_umf.nc 900     "# --------------- Field 14: Untrainment ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Cloud area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Cloud area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Cloud area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Cloud area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Cloud area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg_aver A_UDR C_UDR 245 r_udr.nc 900     "# --------------- Field 15: Untrainment ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg_aver A_UDR C_UDR 245 r_udr.nc 900     "# --------------- Field 15: Untrainment ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg_aver A_UDR C_UDR 245 r_udr.nc 900     "# --------------- Field 15: Untrainment ---------------" =~ ^#enddef ]]
++ [[ expfield_gg_aver A_UDR C_UDR 245 r_udr.nc 900     "# --------------- Field 15: Untrainment ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Mass transport ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg_aver A_DMF C_DMF 245 r_dmf.nc 900     "# --------------- Field 16: Detrainment ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg_aver A_DMF C_DMF 245 r_dmf.nc 900     "# --------------- Field 16: Detrainment ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg_aver A_DMF C_DMF 245 r_dmf.nc 900     "# --------------- Field 16: Detrainment ---------------" =~ ^#enddef ]]
++ [[ expfield_gg_aver A_DMF C_DMF 245 r_dmf.nc 900     "# --------------- Field 16: Detrainment ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Mass transport --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Mass transport ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Mass transport ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_gg_aver A_DDR C_DDR 245 r_ddr.nc 900     "# --------------- Field 17: Detrainment ---------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_gg_aver A_DDR C_DDR 245 r_ddr.nc 900     "# --------------- Field 17: Detrainment ---------------" =~ ^#defcfg ]]
++ [[ expfield_gg_aver A_DDR C_DDR 245 r_ddr.nc 900     "# --------------- Field 17: Detrainment ---------------" =~ ^#enddef ]]
++ [[ expfield_gg_aver A_DDR C_DDR 245 r_ddr.nc 900     "# --------------- Field 17: Detrainment ---------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Land Sea Mask --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Land Sea Mask --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Land Sea Mask ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Land Sea Mask ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land Sea Mask ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_LSMSK C_LSMSK 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_LSMSK C_LSMSK 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_LSMSK C_LSMSK 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_LSMSK C_LSMSK 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Surface albedo --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Surface albedo --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Surface albedo ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Surface albedo ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface albedo ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_ALB C_ALB 17   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_ALB C_ALB 17   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_ALB C_ALB 17   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_ALB C_ALB 17   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Surface roughness length --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Surface roughness length --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface roughness length ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface roughness length ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface roughness length ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SR C_SR 370   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SR C_SR 370   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SR C_SR 370   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SR C_SR 370   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Sea ice area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Sea ice area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Sea ice area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Sea ice area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Sea ice area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_CI C_CI 44   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_CI C_CI 44   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_CI C_CI 44   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_CI C_CI 44   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- SST --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- SST --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- SST ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- SST ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- SST ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SSTChem C_SST 56   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SSTChem C_SST 56   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SSTChem C_SST 56   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SSTChem C_SST 56   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Wind speed at 10m --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Wind speed at 10m --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Wind speed at 10m ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Wind speed at 10m ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Wind speed at 10m ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_WSPD C_WSPD 56   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_WSPD C_WSPD 56   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_WSPD C_WSPD 56   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_WSPD C_WSPD 56   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Moisture content of soil layer --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Moisture content of soil layer --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Moisture content of soil layer ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Moisture content of soil layer ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Moisture content of soil layer ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SRC C_SRC 247   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SRC C_SRC 247   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SRC C_SRC 247   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SRC C_SRC 247   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Dew point temperature --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Dew point temperature --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Dew point temperature ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Dew point temperature ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Dew point temperature ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_D2M C_D2M 160   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_D2M C_D2M 160   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_D2M C_D2M 160   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_D2M C_D2M 160   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Surface temperature --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Surface temperature --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Surface temperature ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Surface temperature ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface temperature ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_T2M C_T2M 34   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_T2M C_T2M 34   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_T2M C_T2M 34   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_T2M C_T2M 34   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Surface downward latent heat flux --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Surface downward latent heat flux --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface downward latent heat flux ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface downward latent heat flux ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface downward latent heat flux ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SLHF C_SLHF 355   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SLHF C_SLHF 355   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SLHF C_SLHF 355   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SLHF C_SLHF 355   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- Surface downward sensible heat flux --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- Surface downward sensible heat flux --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface downward sensible heat flux ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- Surface downward sensible heat flux ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Surface downward sensible heat flux ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SSHF C_SSHF 357   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SSHF C_SSHF 357   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SSHF C_SSHF 357   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SSHF C_SSHF 357   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- surface_downward_grid_eastward_stress --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- surface_downward_grid_eastward_stress --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- surface_downward_grid_eastward_stress ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- surface_downward_grid_eastward_stress ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- surface_downward_grid_eastward_stress ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_EWSS C_EWSS 23   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_EWSS C_EWSS 23   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_EWSS C_EWSS 23   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_EWSS C_EWSS 23   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5 # --- surface_downward_grid_northward_stress --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5 # --- surface_downward_grid_northward_stress --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5 # --- surface_downward_grid_northward_stress ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5 '
++ has_config ifs tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5 # --- surface_downward_grid_northward_stress ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- surface_downward_grid_northward_stress ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_NSSS C_NSSS 24   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_NSSS C_NSSS 24   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_NSSS C_NSSS 24   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_NSSS C_NSSS 24   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- convective_rainfall_flux --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- convective_rainfall_flux --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- convective_rainfall_flux ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- convective_rainfall_flux ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- convective_rainfall_flux ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_CP C_CP 154   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_CP C_CP 154   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_CP C_CP 154   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_CP C_CP 154   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- large_scale_rainfall_flux --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- large_scale_rainfall_flux --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- large_scale_rainfall_flux ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- large_scale_rainfall_flux ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- large_scale_rainfall_flux ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_LSP C_LSP 212   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_LSP C_LSP 212   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_LSP C_LSP 212   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_LSP C_LSP 212   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- surface_net_downward_shortwave_flux --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- surface_net_downward_shortwave_flux --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- surface_net_downward_shortwave_flux ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- surface_net_downward_shortwave_flux ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- surface_net_downward_shortwave_flux ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SSR C_SSR 7   2 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SSR C_SSR 7   2 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SSR C_SSR 7   2 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SSR C_SSR 7   2 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG=900 =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG=900 =~ ^#enddef ]]
++ [[   B256 CTM1 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- surface_snow_amount --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- surface_snow_amount --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- surface_snow_amount ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- surface_snow_amount ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- surface_snow_amount ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SD C_SD 373   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SD C_SD 373   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SD C_SD 373   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SD C_SD 373   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Mass fraction of unfrozen water in soil moisture --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Mass fraction of unfrozen water in soil moisture --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Mass fraction of unfrozen water in soil moisture ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Mass fraction of unfrozen water in soil moisture ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Mass fraction of unfrozen water in soil moisture ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_SWVL1 C_SWVL1 242   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_SWVL1 C_SWVL1 242   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_SWVL1 C_SWVL1 242   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_SWVL1 C_SWVL1 242   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV01 C_TV01 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV01 C_TV01 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV01 C_TV01 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV01 C_TV01 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV02 C_TV02 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV02 C_TV02 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV02 C_TV02 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV02 C_TV02 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV03 C_TV03 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV03 C_TV03 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV03 C_TV03 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV03 C_TV03 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV04 C_TV04 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV04 C_TV04 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV04 C_TV04 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV04 C_TV04 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV05 C_TV05 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV05 C_TV05 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV05 C_TV05 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV05 C_TV05 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV06 C_TV06 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV06 C_TV06 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV06 C_TV06 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV06 C_TV06 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV07 C_TV07 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV07 C_TV07 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV07 C_TV07 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV07 C_TV07 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV09 C_TV09 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV09 C_TV09 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV09 C_TV09 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV09 C_TV09 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV10 C_TV10 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV10 C_TV10 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV10 C_TV10 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV10 C_TV10 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV11 C_TV11 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV11 C_TV11 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV11 C_TV11 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV11 C_TV11 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV13 C_TV13 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV13 C_TV13 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV13 C_TV13 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV13 C_TV13 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV16 C_TV16 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV16 C_TV16 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV16 C_TV16 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV16 C_TV16 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV17 C_TV17 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV17 C_TV17 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV17 C_TV17 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV17 C_TV17 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV18 C_TV18 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV18 C_TV18 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV18 C_TV18 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV18 C_TV18 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Land area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Land area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Land area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_TV19 C_TV19 206   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_TV19 C_TV19 206   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_TV19 C_TV19 206   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_TV19 C_TV19 206   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- Low vegetation area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- Low vegetation area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Low vegetation area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- Low vegetation area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Low vegetation area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_CVL C_CVL 446   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_CVL C_CVL 446   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_CVL C_CVL 446   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_CVL C_CVL 446   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:chem # --- High vegetation area fraction --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:chem # --- High vegetation area fraction --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- High vegetation area fraction ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:chem '
++ has_config ifs tm5:chem
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:chem # --- High vegetation area fraction ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- High vegetation area fraction ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A_CVH C_CVH 446   1 r_g2d.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   A_CVH C_CVH 446   1 r_g2d.nc EXPORTED =~ ^#defcfg ]]
++ [[   A_CVH C_CVH 446   1 r_g2d.nc EXPORTED =~ ^#enddef ]]
++ [[   A_CVH C_CVH 446   1 r_g2d.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM1 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM1 LAG= =~ ^#defcfg ]]
++ [[   B256 CTM1 LAG= =~ ^#enddef ]]
++ [[   B256 CTM1 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#defcfg ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^#enddef ]]
++ [[    BILINEAR D SCALAR LATITUDE 90 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg any tm5:o3fb tm5:ch4fb tm5:aerfb =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg any tm5:o3fb tm5:ch4fb tm5:aerfb =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg any tm5:o3fb tm5:ch4fb tm5:aerfb' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='any tm5:o3fb tm5:ch4fb tm5:aerfb'
++ has_config any tm5:o3fb tm5:ch4fb tm5:aerfb
++ ((  4  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' any == any ']'
++ shift
++ for __c in '"$@"'
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ for __c in '"$@"'
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ for __c in '"$@"'
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg any tm5:o3fb tm5:ch4fb tm5:aerfb' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from CTM to Atmosphere =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from CTM to Atmosphere =~ ^#defcfg ]]
++ [[ # Fields send from CTM to Atmosphere =~ ^#enddef ]]
++ [[ # Fields send from CTM to Atmosphere =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:o3fb # --- Ozone --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:o3fb # --- Ozone --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:o3fb # --- Ozone ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:o3fb '
++ has_config ifs tm5:o3fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:o3fb # --- Ozone ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Ozone ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck C_O3 A_O3 244 o3ch4.nc  "# --------------- Field 1: Ozone (O3) --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck C_O3 A_O3 244 o3ch4.nc  "# --------------- Field 1: Ozone (O3) --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck C_O3 A_O3 244 o3ch4.nc  "# --------------- Field 1: Ozone (O3) --------------" =~ ^#enddef ]]
++ [[ expfield_fbck C_O3 A_O3 244 o3ch4.nc  "# --------------- Field 1: Ozone (O3) --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:ch4fb # --- Methane --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:ch4fb # --- Methane --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:ch4fb # --- Methane ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:ch4fb '
++ has_config ifs tm5:ch4fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:ch4fb # --- Methane ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Methane ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck C_CH4 A_CH4 244 o3ch4.nc  "# --------------- Field 2: Methane (CH4) --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck C_CH4 A_CH4 244 o3ch4.nc  "# --------------- Field 2: Methane (CH4) --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck C_CH4 A_CH4 244 o3ch4.nc  "# --------------- Field 2: Methane (CH4) --------------" =~ ^#enddef ]]
++ [[ expfield_fbck C_CH4 A_CH4 244 o3ch4.nc  "# --------------- Field 2: Methane (CH4) --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:co2fb # --- CO2 --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:co2fb # --- CO2 --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:co2fb # --- CO2 ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:co2fb '
++ has_config ifs tm5:co2fb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:co2fb # --- CO2 ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- CO2 ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_ccycle C_CO2 A_CO2 244 co2mx.nc  "# --------------- Field 3: CO2 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_ccycle C_CO2 A_CO2 244 co2mx.nc  "# --------------- Field 3: CO2 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_ccycle C_CO2 A_CO2 244 co2mx.nc  "# --------------- Field 3: CO2 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_ccycle C_CO2 A_CO2 244 co2mx.nc  "# --------------- Field 3: CO2 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs tm5:aerfb # --- Aerosols concentrations --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs tm5:aerfb # --- Aerosols concentrations --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs tm5:aerfb # --- Aerosols concentrations ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs tm5:aerfb '
++ has_config ifs tm5:aerfb
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs tm5:aerfb # --- Aerosols concentrations ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- Aerosols concentrations ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # =~ ^[[:blank:]]*$ ]]
++ [[ # =~ ^#defcfg ]]
++ [[ # =~ ^#enddef ]]
++ [[ # =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # --------------- M7 tracers (25 entries) -------------- =~ ^[[:blank:]]*$ ]]
++ [[ # --------------- M7 tracers (25 entries) -------------- =~ ^#defcfg ]]
++ [[ # --------------- M7 tracers (25 entries) -------------- =~ ^#enddef ]]
++ [[ # --------------- M7 tracers (25 entries) -------------- =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # =~ ^[[:blank:]]*$ ]]
++ [[ # =~ ^#defcfg ]]
++ [[ # =~ ^#enddef ]]
++ [[ # =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #expfield_fbck_cutoff C_N1  A_N1  244 C_N1_.nc  "# --------------- N1  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ #expfield_fbck_cutoff C_N1  A_N1  244 C_N1_.nc  "# --------------- N1  --------------" =~ ^#defcfg ]]
++ [[ #expfield_fbck_cutoff C_N1  A_N1  244 C_N1_.nc  "# --------------- N1  --------------" =~ ^#enddef ]]
++ [[ #expfield_fbck_cutoff C_N1  A_N1  244 C_N1_.nc  "# --------------- N1  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #expfield_fbck_cutoff C_SU1 A_SU1 244 C_SU1.nc  "# --------------- SU1 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ #expfield_fbck_cutoff C_SU1 A_SU1 244 C_SU1.nc  "# --------------- SU1 --------------" =~ ^#defcfg ]]
++ [[ #expfield_fbck_cutoff C_SU1 A_SU1 244 C_SU1.nc  "# --------------- SU1 --------------" =~ ^#enddef ]]
++ [[ #expfield_fbck_cutoff C_SU1 A_SU1 244 C_SU1.nc  "# --------------- SU1 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N2  A_N2  244 C_N2_.nc  "# --------------- N2  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N2  A_N2  244 C_N2_.nc  "# --------------- N2  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N2  A_N2  244 C_N2_.nc  "# --------------- N2  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N2  A_N2  244 C_N2_.nc  "# --------------- N2  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SU2 A_SU2 244 C_SU2.nc  "# --------------- SU2 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SU2 A_SU2 244 C_SU2.nc  "# --------------- SU2 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SU2 A_SU2 244 C_SU2.nc  "# --------------- SU2 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SU2 A_SU2 244 C_SU2.nc  "# --------------- SU2 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_BC2 A_BC2 244 C_BC2.nc  "# --------------- BC2 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_BC2 A_BC2 244 C_BC2.nc  "# --------------- BC2 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_BC2 A_BC2 244 C_BC2.nc  "# --------------- BC2 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_BC2 A_BC2 244 C_BC2.nc  "# --------------- BC2 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_OC2 A_OM2 244 C_OC2.nc  "# --------------- OC2 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_OC2 A_OM2 244 C_OC2.nc  "# --------------- OC2 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_OC2 A_OM2 244 C_OC2.nc  "# --------------- OC2 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_OC2 A_OM2 244 C_OC2.nc  "# --------------- OC2 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N3  A_N3  244 C_N3_.nc  "# --------------- N3  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N3  A_N3  244 C_N3_.nc  "# --------------- N3  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N3  A_N3  244 C_N3_.nc  "# --------------- N3  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N3  A_N3  244 C_N3_.nc  "# --------------- N3  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SU3 A_SU3 244 C_SU3.nc  "# --------------- SU3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SU3 A_SU3 244 C_SU3.nc  "# --------------- SU3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SU3 A_SU3 244 C_SU3.nc  "# --------------- SU3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SU3 A_SU3 244 C_SU3.nc  "# --------------- SU3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_BC3 A_BC3 244 C_BC3.nc  "# --------------- BC3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_BC3 A_BC3 244 C_BC3.nc  "# --------------- BC3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_BC3 A_BC3 244 C_BC3.nc  "# --------------- BC3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_BC3 A_BC3 244 C_BC3.nc  "# --------------- BC3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_OC3 A_OM3 244 C_OC3.nc  "# --------------- OC3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_OC3 A_OM3 244 C_OC3.nc  "# --------------- OC3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_OC3 A_OM3 244 C_OC3.nc  "# --------------- OC3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_OC3 A_OM3 244 C_OC3.nc  "# --------------- OC3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SS3 A_SS3 244 C_SS3.nc  "# --------------- SS3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SS3 A_SS3 244 C_SS3.nc  "# --------------- SS3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SS3 A_SS3 244 C_SS3.nc  "# --------------- SS3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SS3 A_SS3 244 C_SS3.nc  "# --------------- SS3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_DU3 A_DD3 244 C_DU3.nc  "# --------------- DU3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_DU3 A_DD3 244 C_DU3.nc  "# --------------- DU3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_DU3 A_DD3 244 C_DU3.nc  "# --------------- DU3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_DU3 A_DD3 244 C_DU3.nc  "# --------------- DU3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N4  A_N4  244 C_N4_.nc  "# --------------- N4  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N4  A_N4  244 C_N4_.nc  "# --------------- N4  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N4  A_N4  244 C_N4_.nc  "# --------------- N4  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N4  A_N4  244 C_N4_.nc  "# --------------- N4  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SU4 A_SU4 244 C_SU4.nc  "# --------------- SU4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SU4 A_SU4 244 C_SU4.nc  "# --------------- SU4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SU4 A_SU4 244 C_SU4.nc  "# --------------- SU4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SU4 A_SU4 244 C_SU4.nc  "# --------------- SU4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_BC4 A_BC4 244 C_BC4.nc  "# --------------- BC4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_BC4 A_BC4 244 C_BC4.nc  "# --------------- BC4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_BC4 A_BC4 244 C_BC4.nc  "# --------------- BC4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_BC4 A_BC4 244 C_BC4.nc  "# --------------- BC4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_OC4 A_OM4 244 C_OC4.nc  "# --------------- OC4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_OC4 A_OM4 244 C_OC4.nc  "# --------------- OC4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_OC4 A_OM4 244 C_OC4.nc  "# --------------- OC4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_OC4 A_OM4 244 C_OC4.nc  "# --------------- OC4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SS4 A_SS4 244 C_SS4.nc  "# --------------- SS4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SS4 A_SS4 244 C_SS4.nc  "# --------------- SS4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SS4 A_SS4 244 C_SS4.nc  "# --------------- SS4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SS4 A_SS4 244 C_SS4.nc  "# --------------- SS4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_DU4 A_DD4 244 C_DU4.nc  "# --------------- DU4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_DU4 A_DD4 244 C_DU4.nc  "# --------------- DU4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_DU4 A_DD4 244 C_DU4.nc  "# --------------- DU4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_DU4 A_DD4 244 C_DU4.nc  "# --------------- DU4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N5  A_N5  244 C_N5_.nc  "# --------------- N5  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N5  A_N5  244 C_N5_.nc  "# --------------- N5  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N5  A_N5  244 C_N5_.nc  "# --------------- N5  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N5  A_N5  244 C_N5_.nc  "# --------------- N5  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_BC5 A_BC5 244 C_BC5.nc  "# --------------- BC5 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_BC5 A_BC5 244 C_BC5.nc  "# --------------- BC5 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_BC5 A_BC5 244 C_BC5.nc  "# --------------- BC5 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_BC5 A_BC5 244 C_BC5.nc  "# --------------- BC5 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_OC5 A_OM5 244 C_OC5.nc  "# --------------- OC5 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_OC5 A_OM5 244 C_OC5.nc  "# --------------- OC5 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_OC5 A_OM5 244 C_OC5.nc  "# --------------- OC5 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_OC5 A_OM5 244 C_OC5.nc  "# --------------- OC5 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N6  A_N6  244 C_N6_.nc  "# --------------- N6  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N6  A_N6  244 C_N6_.nc  "# --------------- N6  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N6  A_N6  244 C_N6_.nc  "# --------------- N6  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N6  A_N6  244 C_N6_.nc  "# --------------- N6  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_DU6 A_DD6 244 C_DU6.nc  "# --------------- DU6 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_DU6 A_DD6 244 C_DU6.nc  "# --------------- DU6 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_DU6 A_DD6 244 C_DU6.nc  "# --------------- DU6 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_DU6 A_DD6 244 C_DU6.nc  "# --------------- DU6 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_N7  A_N7  244 C_N7_.nc  "# --------------- N7  --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_N7  A_N7  244 C_N7_.nc  "# --------------- N7  --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_N7  A_N7  244 C_N7_.nc  "# --------------- N7  --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_N7  A_N7  244 C_N7_.nc  "# --------------- N7  --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_DU7 A_DD7 244 C_DU7.nc  "# --------------- DU7 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_DU7 A_DD7 244 C_DU7.nc  "# --------------- DU7 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_DU7 A_DD7 244 C_DU7.nc  "# --------------- DU7 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_DU7 A_DD7 244 C_DU7.nc  "# --------------- DU7 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_NO3 A_NO3 244 C_NO3.nc  "# --------------- NO3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_NO3 A_NO3 244 C_NO3.nc  "# --------------- NO3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_NO3 A_NO3 244 C_NO3.nc  "# --------------- NO3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_NO3 A_NO3 244 C_NO3.nc  "# --------------- NO3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_MSA A_MSA 244 C_MSA.nc  "# --------------- MSA --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_MSA A_MSA 244 C_MSA.nc  "# --------------- MSA --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_MSA A_MSA 244 C_MSA.nc  "# --------------- MSA --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_MSA A_MSA 244 C_MSA.nc  "# --------------- MSA --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # =~ ^[[:blank:]]*$ ]]
++ [[ # =~ ^#defcfg ]]
++ [[ # =~ ^#enddef ]]
++ [[ # =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # --------------- AEROSOL OPTICAL PROPERTIES FOR THE 14 WAVELENGTHS -------------- =~ ^[[:blank:]]*$ ]]
++ [[ # --------------- AEROSOL OPTICAL PROPERTIES FOR THE 14 WAVELENGTHS -------------- =~ ^#defcfg ]]
++ [[ # --------------- AEROSOL OPTICAL PROPERTIES FOR THE 14 WAVELENGTHS -------------- =~ ^#enddef ]]
++ [[ # --------------- AEROSOL OPTICAL PROPERTIES FOR THE 14 WAVELENGTHS -------------- =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ---------------  OF THE MCRAD RADIATION SCHEME (14*3 ENTRIES) -------------- =~ ^[[:blank:]]*$ ]]
++ [[ # ---------------  OF THE MCRAD RADIATION SCHEME (14*3 ENTRIES) -------------- =~ ^#defcfg ]]
++ [[ # ---------------  OF THE MCRAD RADIATION SCHEME (14*3 ENTRIES) -------------- =~ ^#enddef ]]
++ [[ # ---------------  OF THE MCRAD RADIATION SCHEME (14*3 ENTRIES) -------------- =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # =~ ^[[:blank:]]*$ ]]
++ [[ # =~ ^#defcfg ]]
++ [[ # =~ ^#enddef ]]
++ [[ # =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_01  A_AOD_01 244 C_AOD_01  "# ------------- AOD #1 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_01  A_AOD_01 244 C_AOD_01  "# ------------- AOD #1 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_01  A_AOD_01 244 C_AOD_01  "# ------------- AOD #1 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_01  A_AOD_01 244 C_AOD_01  "# ------------- AOD #1 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_02  A_AOD_02 244 C_AOD_02  "# ------------- AOD #2 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_02  A_AOD_02 244 C_AOD_02  "# ------------- AOD #2 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_02  A_AOD_02 244 C_AOD_02  "# ------------- AOD #2 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_02  A_AOD_02 244 C_AOD_02  "# ------------- AOD #2 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_03  A_AOD_03 244 C_AOD_03  "# ------------- AOD #3 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_03  A_AOD_03 244 C_AOD_03  "# ------------- AOD #3 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_03  A_AOD_03 244 C_AOD_03  "# ------------- AOD #3 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_03  A_AOD_03 244 C_AOD_03  "# ------------- AOD #3 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_04  A_AOD_04 244 C_AOD_04  "# ------------- AOD #4 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_04  A_AOD_04 244 C_AOD_04  "# ------------- AOD #4 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_04  A_AOD_04 244 C_AOD_04  "# ------------- AOD #4 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_04  A_AOD_04 244 C_AOD_04  "# ------------- AOD #4 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_05  A_AOD_05 244 C_AOD_05  "# ------------- AOD #5 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_05  A_AOD_05 244 C_AOD_05  "# ------------- AOD #5 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_05  A_AOD_05 244 C_AOD_05  "# ------------- AOD #5 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_05  A_AOD_05 244 C_AOD_05  "# ------------- AOD #5 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_06  A_AOD_06 244 C_AOD_06  "# ------------- AOD #6 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_06  A_AOD_06 244 C_AOD_06  "# ------------- AOD #6 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_06  A_AOD_06 244 C_AOD_06  "# ------------- AOD #6 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_06  A_AOD_06 244 C_AOD_06  "# ------------- AOD #6 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_07  A_AOD_07 244 C_AOD_07  "# ------------- AOD #7 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_07  A_AOD_07 244 C_AOD_07  "# ------------- AOD #7 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_07  A_AOD_07 244 C_AOD_07  "# ------------- AOD #7 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_07  A_AOD_07 244 C_AOD_07  "# ------------- AOD #7 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_08  A_AOD_08 244 C_AOD_08  "# ------------- AOD #8 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_08  A_AOD_08 244 C_AOD_08  "# ------------- AOD #8 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_08  A_AOD_08 244 C_AOD_08  "# ------------- AOD #8 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_08  A_AOD_08 244 C_AOD_08  "# ------------- AOD #8 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_09  A_AOD_09 244 C_AOD_09  "# ------------- AOD #9 --------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_09  A_AOD_09 244 C_AOD_09  "# ------------- AOD #9 --------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_09  A_AOD_09 244 C_AOD_09  "# ------------- AOD #9 --------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_09  A_AOD_09 244 C_AOD_09  "# ------------- AOD #9 --------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_10  A_AOD_10 244 C_AOD_10  "# ------------- AOD #10 -------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_10  A_AOD_10 244 C_AOD_10  "# ------------- AOD #10 -------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_10  A_AOD_10 244 C_AOD_10  "# ------------- AOD #10 -------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_10  A_AOD_10 244 C_AOD_10  "# ------------- AOD #10 -------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_11  A_AOD_11 244 C_AOD_11  "# ------------- AOD #11 -------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_11  A_AOD_11 244 C_AOD_11  "# ------------- AOD #11 -------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_11  A_AOD_11 244 C_AOD_11  "# ------------- AOD #11 -------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_11  A_AOD_11 244 C_AOD_11  "# ------------- AOD #11 -------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_12  A_AOD_12 244 C_AOD_12  "# ------------- AOD #12 -------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_12  A_AOD_12 244 C_AOD_12  "# ------------- AOD #12 -------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_12  A_AOD_12 244 C_AOD_12  "# ------------- AOD #12 -------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_12  A_AOD_12 244 C_AOD_12  "# ------------- AOD #12 -------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_13  A_AOD_13 244 C_AOD_13  "# ------------- AOD #13 -------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_13  A_AOD_13 244 C_AOD_13  "# ------------- AOD #13 -------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_13  A_AOD_13 244 C_AOD_13  "# ------------- AOD #13 -------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_13  A_AOD_13 244 C_AOD_13  "# ------------- AOD #13 -------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_AOD_14  A_AOD_14 244 C_AOD_14  "# ------------- AOD #14 -------------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_AOD_14  A_AOD_14 244 C_AOD_14  "# ------------- AOD #14 -------------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_AOD_14  A_AOD_14 244 C_AOD_14  "# ------------- AOD #14 -------------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_AOD_14  A_AOD_14 244 C_AOD_14  "# ------------- AOD #14 -------------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_01  A_SSA_01 244 C_SSA_01  "# ----- Single-Scattering Albedo #1 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_01  A_SSA_01 244 C_SSA_01  "# ----- Single-Scattering Albedo #1 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_01  A_SSA_01 244 C_SSA_01  "# ----- Single-Scattering Albedo #1 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_01  A_SSA_01 244 C_SSA_01  "# ----- Single-Scattering Albedo #1 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_02  A_SSA_02 244 C_SSA_02  "# ----- Single-Scattering Albedo #2 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_02  A_SSA_02 244 C_SSA_02  "# ----- Single-Scattering Albedo #2 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_02  A_SSA_02 244 C_SSA_02  "# ----- Single-Scattering Albedo #2 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_02  A_SSA_02 244 C_SSA_02  "# ----- Single-Scattering Albedo #2 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_03  A_SSA_03 244 C_SSA_03  "# ----- Single-Scattering Albedo #3 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_03  A_SSA_03 244 C_SSA_03  "# ----- Single-Scattering Albedo #3 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_03  A_SSA_03 244 C_SSA_03  "# ----- Single-Scattering Albedo #3 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_03  A_SSA_03 244 C_SSA_03  "# ----- Single-Scattering Albedo #3 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_04  A_SSA_04 244 C_SSA_04  "# ----- Single-Scattering Albedo #4 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_04  A_SSA_04 244 C_SSA_04  "# ----- Single-Scattering Albedo #4 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_04  A_SSA_04 244 C_SSA_04  "# ----- Single-Scattering Albedo #4 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_04  A_SSA_04 244 C_SSA_04  "# ----- Single-Scattering Albedo #4 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_05  A_SSA_05 244 C_SSA_05  "# ----- Single-Scattering Albedo #5 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_05  A_SSA_05 244 C_SSA_05  "# ----- Single-Scattering Albedo #5 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_05  A_SSA_05 244 C_SSA_05  "# ----- Single-Scattering Albedo #5 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_05  A_SSA_05 244 C_SSA_05  "# ----- Single-Scattering Albedo #5 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_06  A_SSA_06 244 C_SSA_06  "# ----- Single-Scattering Albedo #6 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_06  A_SSA_06 244 C_SSA_06  "# ----- Single-Scattering Albedo #6 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_06  A_SSA_06 244 C_SSA_06  "# ----- Single-Scattering Albedo #6 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_06  A_SSA_06 244 C_SSA_06  "# ----- Single-Scattering Albedo #6 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_07  A_SSA_07 244 C_SSA_07  "# ----- Single-Scattering Albedo #7 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_07  A_SSA_07 244 C_SSA_07  "# ----- Single-Scattering Albedo #7 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_07  A_SSA_07 244 C_SSA_07  "# ----- Single-Scattering Albedo #7 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_07  A_SSA_07 244 C_SSA_07  "# ----- Single-Scattering Albedo #7 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_08  A_SSA_08 244 C_SSA_08  "# ----- Single-Scattering Albedo #8 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_08  A_SSA_08 244 C_SSA_08  "# ----- Single-Scattering Albedo #8 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_08  A_SSA_08 244 C_SSA_08  "# ----- Single-Scattering Albedo #8 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_08  A_SSA_08 244 C_SSA_08  "# ----- Single-Scattering Albedo #8 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_09  A_SSA_09 244 C_SSA_09  "# ----- Single-Scattering Albedo #9 ----" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_09  A_SSA_09 244 C_SSA_09  "# ----- Single-Scattering Albedo #9 ----" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_09  A_SSA_09 244 C_SSA_09  "# ----- Single-Scattering Albedo #9 ----" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_09  A_SSA_09 244 C_SSA_09  "# ----- Single-Scattering Albedo #9 ----" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_10  A_SSA_10 244 C_SSA_10  "# ----- Single-Scattering Albedo #10 ---" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_10  A_SSA_10 244 C_SSA_10  "# ----- Single-Scattering Albedo #10 ---" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_10  A_SSA_10 244 C_SSA_10  "# ----- Single-Scattering Albedo #10 ---" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_10  A_SSA_10 244 C_SSA_10  "# ----- Single-Scattering Albedo #10 ---" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_11  A_SSA_11 244 C_SSA_11  "# ----- Single-Scattering Albedo #11 ---" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_11  A_SSA_11 244 C_SSA_11  "# ----- Single-Scattering Albedo #11 ---" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_11  A_SSA_11 244 C_SSA_11  "# ----- Single-Scattering Albedo #11 ---" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_11  A_SSA_11 244 C_SSA_11  "# ----- Single-Scattering Albedo #11 ---" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_12  A_SSA_12 244 C_SSA_12  "# ----- Single-Scattering Albedo #12 ---" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_12  A_SSA_12 244 C_SSA_12  "# ----- Single-Scattering Albedo #12 ---" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_12  A_SSA_12 244 C_SSA_12  "# ----- Single-Scattering Albedo #12 ---" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_12  A_SSA_12 244 C_SSA_12  "# ----- Single-Scattering Albedo #12 ---" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_13  A_SSA_13 244 C_SSA_13  "# ----- Single-Scattering Albedo #13 ---" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_13  A_SSA_13 244 C_SSA_13  "# ----- Single-Scattering Albedo #13 ---" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_13  A_SSA_13 244 C_SSA_13  "# ----- Single-Scattering Albedo #13 ---" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_13  A_SSA_13 244 C_SSA_13  "# ----- Single-Scattering Albedo #13 ---" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_SSA_14  A_SSA_14 244 C_SSA_14  "# ----- Single-Scattering Albedo #14 ---" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_SSA_14  A_SSA_14 244 C_SSA_14  "# ----- Single-Scattering Albedo #14 ---" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_SSA_14  A_SSA_14 244 C_SSA_14  "# ----- Single-Scattering Albedo #14 ---" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_SSA_14  A_SSA_14 244 C_SSA_14  "# ----- Single-Scattering Albedo #14 ---" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_01  A_ASF_01 244 C_ASF_01  "# --------- Asymmetry Factor #1 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_01  A_ASF_01 244 C_ASF_01  "# --------- Asymmetry Factor #1 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_01  A_ASF_01 244 C_ASF_01  "# --------- Asymmetry Factor #1 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_01  A_ASF_01 244 C_ASF_01  "# --------- Asymmetry Factor #1 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_02  A_ASF_02 244 C_ASF_02  "# --------- Asymmetry Factor #2 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_02  A_ASF_02 244 C_ASF_02  "# --------- Asymmetry Factor #2 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_02  A_ASF_02 244 C_ASF_02  "# --------- Asymmetry Factor #2 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_02  A_ASF_02 244 C_ASF_02  "# --------- Asymmetry Factor #2 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_03  A_ASF_03 244 C_ASF_03  "# --------- Asymmetry Factor #3 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_03  A_ASF_03 244 C_ASF_03  "# --------- Asymmetry Factor #3 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_03  A_ASF_03 244 C_ASF_03  "# --------- Asymmetry Factor #3 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_03  A_ASF_03 244 C_ASF_03  "# --------- Asymmetry Factor #3 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_04  A_ASF_04 244 C_ASF_04  "# --------- Asymmetry Factor #4 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_04  A_ASF_04 244 C_ASF_04  "# --------- Asymmetry Factor #4 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_04  A_ASF_04 244 C_ASF_04  "# --------- Asymmetry Factor #4 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_04  A_ASF_04 244 C_ASF_04  "# --------- Asymmetry Factor #4 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_05  A_ASF_05 244 C_ASF_05  "# --------- Asymmetry Factor #5 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_05  A_ASF_05 244 C_ASF_05  "# --------- Asymmetry Factor #5 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_05  A_ASF_05 244 C_ASF_05  "# --------- Asymmetry Factor #5 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_05  A_ASF_05 244 C_ASF_05  "# --------- Asymmetry Factor #5 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_06  A_ASF_06 244 C_ASF_06  "# --------- Asymmetry Factor #6 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_06  A_ASF_06 244 C_ASF_06  "# --------- Asymmetry Factor #6 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_06  A_ASF_06 244 C_ASF_06  "# --------- Asymmetry Factor #6 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_06  A_ASF_06 244 C_ASF_06  "# --------- Asymmetry Factor #6 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_07  A_ASF_07 244 C_ASF_07  "# --------- Asymmetry Factor #7 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_07  A_ASF_07 244 C_ASF_07  "# --------- Asymmetry Factor #7 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_07  A_ASF_07 244 C_ASF_07  "# --------- Asymmetry Factor #7 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_07  A_ASF_07 244 C_ASF_07  "# --------- Asymmetry Factor #7 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_08  A_ASF_08 244 C_ASF_08  "# --------- Asymmetry Factor #8 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_08  A_ASF_08 244 C_ASF_08  "# --------- Asymmetry Factor #8 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_08  A_ASF_08 244 C_ASF_08  "# --------- Asymmetry Factor #8 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_08  A_ASF_08 244 C_ASF_08  "# --------- Asymmetry Factor #8 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_09  A_ASF_09 244 C_ASF_09  "# --------- Asymmetry Factor #9 --------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_09  A_ASF_09 244 C_ASF_09  "# --------- Asymmetry Factor #9 --------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_09  A_ASF_09 244 C_ASF_09  "# --------- Asymmetry Factor #9 --------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_09  A_ASF_09 244 C_ASF_09  "# --------- Asymmetry Factor #9 --------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_10  A_ASF_10 244 C_ASF_10  "# --------- Asymmetry Factor #10 -------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_10  A_ASF_10 244 C_ASF_10  "# --------- Asymmetry Factor #10 -------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_10  A_ASF_10 244 C_ASF_10  "# --------- Asymmetry Factor #10 -------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_10  A_ASF_10 244 C_ASF_10  "# --------- Asymmetry Factor #10 -------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_11  A_ASF_11 244 C_ASF_11  "# --------- Asymmetry Factor #11 -------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_11  A_ASF_11 244 C_ASF_11  "# --------- Asymmetry Factor #11 -------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_11  A_ASF_11 244 C_ASF_11  "# --------- Asymmetry Factor #11 -------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_11  A_ASF_11 244 C_ASF_11  "# --------- Asymmetry Factor #11 -------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_12  A_ASF_12 244 C_ASF_12  "# --------- Asymmetry Factor #12 -------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_12  A_ASF_12 244 C_ASF_12  "# --------- Asymmetry Factor #12 -------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_12  A_ASF_12 244 C_ASF_12  "# --------- Asymmetry Factor #12 -------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_12  A_ASF_12 244 C_ASF_12  "# --------- Asymmetry Factor #12 -------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_13  A_ASF_13 244 C_ASF_13  "# --------- Asymmetry Factor #13 -------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_13  A_ASF_13 244 C_ASF_13  "# --------- Asymmetry Factor #13 -------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_13  A_ASF_13 244 C_ASF_13  "# --------- Asymmetry Factor #13 -------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_13  A_ASF_13 244 C_ASF_13  "# --------- Asymmetry Factor #13 -------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ expfield_fbck_cutoff C_ASF_14  A_ASF_14 244 C_ASF_14  "# --------- Asymmetry Factor #14 -------" =~ ^[[:blank:]]*$ ]]
++ [[ expfield_fbck_cutoff C_ASF_14  A_ASF_14 244 C_ASF_14  "# --------- Asymmetry Factor #14 -------" =~ ^#defcfg ]]
++ [[ expfield_fbck_cutoff C_ASF_14  A_ASF_14 244 C_ASF_14  "# --------- Asymmetry Factor #14 -------" =~ ^#enddef ]]
++ [[ expfield_fbck_cutoff C_ASF_14  A_ASF_14 244 C_ASF_14  "# --------- Asymmetry Factor #14 -------" =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg'
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from Atmosphere to LPJ-GUESS =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from Atmosphere to LPJ-GUESS =~ ^#defcfg ]]
++ [[ # Fields send from Atmosphere to LPJ-GUESS =~ ^#enddef ]]
++ [[ # Fields send from Atmosphere to LPJ-GUESS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg # --- '2m_temperature' 'K' -- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg # --- '2m_temperature' 'K' -- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''2m_temperature'\'' '\''K'\'' --' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''2m_temperature'\'' '\''K'\'' --' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''2m_temperature'\'' '\''K'\'' --'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   T2MVeg T2M_LPJG 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   T2MVeg T2M_LPJG 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   T2MVeg T2M_LPJG 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   T2MVeg T2M_LPJG 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg # --- 'Total precip' 'm_timestep-1' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg # --- 'Total precip' 'm_timestep-1' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''Total precip'\'' '\''m_timestep-1'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''Total precip'\'' '\''m_timestep-1'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Total precip'\'' '\''m_timestep-1'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   TPVeg TPRE_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   TPVeg TPRE_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   TPVeg TPRE_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   TPVeg TPRE_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Mass snow' 'kg_m-2' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Mass snow' 'kg_m-2' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Mass snow'\'' '\''kg_m-2'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Mass snow'\'' '\''kg_m-2'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Mass snow'\'' '\''kg_m-2'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SDVeg SNOC_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SDVeg SNOC_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SDVeg SNOC_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SDVeg SNOC_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Density snow' 'kg_m-3' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Density snow' 'kg_m-3' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Density snow'\'' '\''kg_m-3'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Density snow'\'' '\''kg_m-3'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Density snow'\'' '\''kg_m-3'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SDensVeg SNOD_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SDensVeg SNOD_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SDensVeg SNOD_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SDensVeg SNOD_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil T lay1' 'K' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil T lay1' 'K' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay1'\'' '\''K'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay1'\'' '\''K'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil T lay1'\'' '\''K'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilTVeg.L001 ST1L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilTVeg.L001 ST1L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilTVeg.L001 ST1L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilTVeg.L001 ST1L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil T lay2' 'K' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil T lay2' 'K' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay2'\'' '\''K'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay2'\'' '\''K'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil T lay2'\'' '\''K'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilTVeg.L002 ST2L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilTVeg.L002 ST2L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilTVeg.L002 ST2L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilTVeg.L002 ST2L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg # --- 'Soil T lay3' 'K' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg # --- 'Soil T lay3' 'K' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''Soil T lay3'\'' '\''K'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg # --- '\''Soil T lay3'\'' '\''K'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil T lay3'\'' '\''K'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilTVeg.L003 ST3L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilTVeg.L003 ST3L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilTVeg.L003 ST3L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilTVeg.L003 ST3L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil T lay4' 'K' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil T lay4' 'K' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay4'\'' '\''K'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil T lay4'\'' '\''K'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil T lay4'\'' '\''K'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilTVeg.L004 ST4L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilTVeg.L004 ST4L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilTVeg.L004 ST4L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilTVeg.L004 ST4L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil M lay1' 'm3_m-3' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil M lay1' 'm3_m-3' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay1'\'' '\''m3_m-3'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay1'\'' '\''m3_m-3'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil M lay1'\'' '\''m3_m-3'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilMVeg.L001 SM1L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilMVeg.L001 SM1L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilMVeg.L001 SM1L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilMVeg.L001 SM1L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil M lay2' 'm3_m-3' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil M lay2' 'm3_m-3' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay2'\'' '\''m3_m-3'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay2'\'' '\''m3_m-3'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil M lay2'\'' '\''m3_m-3'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilMVeg.L002 SM2L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilMVeg.L002 SM2L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilMVeg.L002 SM2L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilMVeg.L002 SM2L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil M lay3' 'm3_m-3' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil M lay3' 'm3_m-3' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay3'\'' '\''m3_m-3'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay3'\'' '\''m3_m-3'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil M lay3'\'' '\''m3_m-3'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilMVeg.L003 SM3L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilMVeg.L003 SM3L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilMVeg.L003 SM3L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilMVeg.L003 SM3L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Soil M lay4' 'm3_m-3' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Soil M lay4' 'm3_m-3' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay4'\'' '\''m3_m-3'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Soil M lay4'\'' '\''m3_m-3'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Soil M lay4'\'' '\''m3_m-3'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SoilMVeg.L004 SM4L_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SoilMVeg.L004 SM4L_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SoilMVeg.L004 SM4L_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SoilMVeg.L004 SM4L_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'surf sol SW rad' 'J_m-2' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'surf sol SW rad' 'J_m-2' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''surf sol SW rad'\'' '\''J_m-2'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''surf sol SW rad'\'' '\''J_m-2'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''surf sol SW rad'\'' '\''J_m-2'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SSRVeg SWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SSRVeg SWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SSRVeg SWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SSRVeg SWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'surf LW rad' 'J_m-2' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'surf LW rad' 'J_m-2' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''surf LW rad'\'' '\''J_m-2'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''surf LW rad'\'' '\''J_m-2'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''surf LW rad'\'' '\''J_m-2'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SLRVeg LWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   SLRVeg LWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^#defcfg ]]
++ [[   SLRVeg LWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^#enddef ]]
++ [[   SLRVeg LWNR_LPJ 1  1 vegin.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=900 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=900 =~ ^#enddef ]]
++ [[   A256 A256 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg lpjg atm =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg lpjg atm =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg lpjg atm' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='lpjg atm'
++ has_config lpjg atm
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg lpjg atm' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from LPJ-GUESS to Atmosphere =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from LPJ-GUESS to Atmosphere =~ ^#defcfg ]]
++ [[ # Fields send from LPJ-GUESS to Atmosphere =~ ^#enddef ]]
++ [[ # Fields send from LPJ-GUESS to Atmosphere =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'low_LAI' 'm2_m-2' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'low_LAI' 'm2_m-2' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''low_LAI'\'' '\''m2_m-2'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''low_LAI'\'' '\''m2_m-2'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''low_LAI'\'' '\''m2_m-2'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_LLAI LAILVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_LLAI LAILVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_LLAI LAILVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_LLAI LAILVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'high_LAI' 'm2 m-2' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'high_LAI' 'm2 m-2' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''high_LAI'\'' '\''m2 m-2'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''high_LAI'\'' '\''m2 m-2'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''high_LAI'\'' '\''m2 m-2'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_HLAI LAIHVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_HLAI LAIHVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_HLAI LAIHVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_HLAI LAIHVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'High Veg Type' '1-20' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'High Veg Type' '1-20' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''High Veg Type'\'' '\''1-20'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''High Veg Type'\'' '\''1-20'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''High Veg Type'\'' '\''1-20'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_TYPH TypeHVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_TYPH TypeHVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_TYPH TypeHVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_TYPH TypeHVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'LPJG High Veg Frac' '0-1' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'LPJG High Veg Frac' '0-1' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''LPJG High Veg Frac'\'' '\''0-1'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''LPJG High Veg Frac'\'' '\''0-1'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''LPJG High Veg Frac'\'' '\''0-1'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_FRAH FracHVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_FRAH FracHVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_FRAH FracHVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_FRAH FracHVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'Low Veg Type' '1-20' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'Low Veg Type' '1-20' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Low Veg Type'\'' '\''1-20'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''Low Veg Type'\'' '\''1-20'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''Low Veg Type'\'' '\''1-20'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_TYPL TypeLVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_TYPL TypeLVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_TYPL TypeLVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_TYPL TypeLVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg atm lpjg  # --- 'LPJG Low Veg Frac' '0-1' --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg atm lpjg  # --- 'LPJG Low Veg Frac' '0-1' --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''LPJG Low Veg Frac'\'' '\''0-1'\'' ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='atm lpjg  '
++ has_config atm lpjg
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' atm == any ']'
++ [[ atm == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ atm ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ atm ]]
++ for __m in '$config'
++ [[ lim3 =~ atm ]]
++ for __m in '$config'
++ [[ rnfmapper =~ atm ]]
++ for __m in '$config'
++ [[ xios:detached =~ atm ]]
++ for __m in '$config'
++ [[ oasis =~ atm ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ atm ]]
++ for __m in '$config'
++ [[ atm =~ atm ]]
++ [[ atm =~ atm ]]
++ __f=1
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg atm lpjg  # --- '\''LPJG Low Veg Frac'\'' '\''0-1'\'' ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- '\''LPJG Low Veg Frac'\'' '\''0-1'\'' ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_FRAL FracLVeg 1  1 lpjgv.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   GUE_FRAL FracLVeg 1  1 lpjgv.nc EXPORTED =~ ^#defcfg ]]
++ [[   GUE_FRAL FracLVeg 1  1 lpjgv.nc EXPORTED =~ ^#enddef ]]
++ [[   GUE_FRAL FracLVeg 1  1 lpjgv.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   A256 A256 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   A256 A256 LAG=86400 =~ ^#defcfg ]]
++ [[   A256 A256 LAG=86400 =~ ^#enddef ]]
++ [[   A256 A256 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P 0 P 0 =~ ^[[:blank:]]*$ ]]
++ [[   P 0 P 0 =~ ^#defcfg ]]
++ [[   P 0 P 0 =~ ^#enddef ]]
++ [[   P 0 P 0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS =~ ^#defcfg ]]
++ [[   LOCTRANS =~ ^#enddef ]]
++ [[   LOCTRANS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    INSTANT =~ ^[[:blank:]]*$ ]]
++ [[    INSTANT =~ ^#defcfg ]]
++ [[    INSTANT =~ ^#enddef ]]
++ [[    INSTANT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs amip =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs amip =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs amip' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs amip'
++ has_config ifs amip
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ amip ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ amip ]]
++ for __m in '$config'
++ [[ lim3 =~ amip ]]
++ for __m in '$config'
++ [[ rnfmapper =~ amip ]]
++ for __m in '$config'
++ [[ xios:detached =~ amip ]]
++ for __m in '$config'
++ [[ oasis =~ amip ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ amip ]]
++ for __m in '$config'
++ [[ atm =~ amip ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs amip' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from AMIP to IFS =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from AMIP to IFS =~ ^#defcfg ]]
++ [[ # Fields send from AMIP to IFS =~ ^#enddef ]]
++ [[ # Fields send from AMIP to IFS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg ifs amip # --- AMIP forcing data --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg ifs amip # --- AMIP forcing data --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg ifs amip # --- AMIP forcing data ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='ifs amip '
++ has_config ifs amip
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' ifs == any ']'
++ [[ ifs == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ ifs ]]
++ [[ ifs =~ ifs ]]
++ __f=1
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ ifs ]]
++ for __m in '$config'
++ [[ lim3 =~ ifs ]]
++ for __m in '$config'
++ [[ rnfmapper =~ ifs ]]
++ for __m in '$config'
++ [[ xios:detached =~ ifs ]]
++ for __m in '$config'
++ [[ oasis =~ ifs ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ ifs ]]
++ for __m in '$config'
++ [[ atm =~ ifs ]]
++ ((  __f  ))
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ amip ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ amip ]]
++ for __m in '$config'
++ [[ lim3 =~ amip ]]
++ for __m in '$config'
++ [[ rnfmapper =~ amip ]]
++ for __m in '$config'
++ [[ xios:detached =~ amip ]]
++ for __m in '$config'
++ [[ oasis =~ amip ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ amip ]]
++ for __m in '$config'
++ [[ atm =~ amip ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg ifs amip # --- AMIP forcing data ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- AMIP forcing data ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   AMIP_sst:AMIP_sic A_SST:A_Ice_frac 1  1 rstas.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   AMIP_sst:AMIP_sic A_SST:A_Ice_frac 1  1 rstas.nc EXPORTED =~ ^#defcfg ]]
++ [[   AMIP_sst:AMIP_sic A_SST:A_Ice_frac 1  1 rstas.nc EXPORTED =~ ^#enddef ]]
++ [[   AMIP_sst:AMIP_sic A_SST:A_Ice_frac 1  1 rstas.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   AMIP L256 LAG=0 =~ ^[[:blank:]]*$ ]]
++ [[   AMIP L256 LAG=0 =~ ^#defcfg ]]
++ [[   AMIP L256 LAG=0 =~ ^#enddef ]]
++ [[   AMIP L256 LAG=0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg lpjg tm5:co2 =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg lpjg tm5:co2 =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg lpjg tm5:co2' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='lpjg tm5:co2'
++ has_config lpjg tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg lpjg tm5:co2' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from TM5-MP to LPJ-GUESS =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from TM5-MP to LPJ-GUESS =~ ^#defcfg ]]
++ [[ # Fields send from TM5-MP to LPJ-GUESS =~ ^#enddef ]]
++ [[ # Fields send from TM5-MP to LPJ-GUESS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg lpjg tm5:co2 # --- atmospheric CO2 concentrations (ppm - daily average/gridcell) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg lpjg tm5:co2 # --- atmospheric CO2 concentrations (ppm - daily average/gridcell) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg lpjg tm5:co2 # --- atmospheric CO2 concentrations (ppm - daily average/gridcell) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='lpjg tm5:co2 '
++ has_config lpjg tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg lpjg tm5:co2 # --- atmospheric CO2 concentrations (ppm - daily average/gridcell) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- atmospheric CO2 concentrations (ppm - daily average/gridcell) ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LCO2_TM5 CO2_LPJG 1 86400  1 l_co2.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   LCO2_TM5 CO2_LPJG 1 86400  1 l_co2.nc EXPORTED =~ ^#defcfg ]]
++ [[   LCO2_TM5 CO2_LPJG 1 86400  1 l_co2.nc EXPORTED =~ ^#enddef ]]
++ [[   LCO2_TM5 CO2_LPJG 1 86400  1 l_co2.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   CTM3 B256 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   CTM3 B256 LAG= =~ ^#defcfg ]]
++ [[   CTM3 B256 LAG= =~ ^#enddef ]]
++ [[   CTM3 B256 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    BILINEAR LR SCALAR LATITUDE 1 =~ ^[[:blank:]]*$ ]]
++ [[    BILINEAR LR SCALAR LATITUDE 1 =~ ^#defcfg ]]
++ [[    BILINEAR LR SCALAR LATITUDE 1 =~ ^#enddef ]]
++ [[    BILINEAR LR SCALAR LATITUDE 1 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg lpjg tm5:co2 =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg lpjg tm5:co2 =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg lpjg tm5:co2' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='lpjg tm5:co2'
++ has_config lpjg tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg lpjg tm5:co2' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from LPJ-GUESS to TM5-MP =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from LPJ-GUESS to TM5-MP =~ ^#defcfg ]]
++ [[ # Fields send from LPJ-GUESS to TM5-MP =~ ^#enddef ]]
++ [[ # Fields send from LPJ-GUESS to TM5-MP =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg lpjg tm5 # --- C fluxes (kg carbon/m2/d) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg lpjg tm5 # --- C fluxes (kg carbon/m2/d) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg lpjg tm5 # --- C fluxes (kg carbon/m2/d) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='lpjg tm5 '
++ has_config lpjg tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg lpjg tm5 # --- C fluxes (kg carbon/m2/d) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- C fluxes (kg carbon/m2/d) ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   GUE_CNAT:GUE_CANT:GUE_CNPP TM5_LandCNAT:TM5_LandCANT:TM5_LandCNPP 1 86400  2 rlpjg.nc EXPOUT =~ ^[[:blank:]]*$ ]]
++ [[   GUE_CNAT:GUE_CANT:GUE_CNPP TM5_LandCNAT:TM5_LandCANT:TM5_LandCNPP 1 86400  2 rlpjg.nc EXPOUT =~ ^#defcfg ]]
++ [[   GUE_CNAT:GUE_CANT:GUE_CNPP TM5_LandCNAT:TM5_LandCANT:TM5_LandCNPP 1 86400  2 rlpjg.nc EXPOUT =~ ^#enddef ]]
++ [[   GUE_CNAT:GUE_CANT:GUE_CNPP TM5_LandCNAT:TM5_LandCANT:TM5_LandCNPP 1 86400  2 rlpjg.nc EXPOUT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   B256 CTM3 LAG=86400 =~ ^[[:blank:]]*$ ]]
++ [[   B256 CTM3 LAG=86400 =~ ^#defcfg ]]
++ [[   B256 CTM3 LAG=86400 =~ ^#enddef ]]
++ [[   B256 CTM3 LAG=86400 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  0 =~ ^#defcfg ]]
++ [[   P  0  P  0 =~ ^#enddef ]]
++ [[   P  0  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR CONSERV =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR CONSERV =~ ^#defcfg ]]
++ [[   SCRIPR CONSERV =~ ^#enddef ]]
++ [[   SCRIPR CONSERV =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT D SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GLBPOS =~ ^[[:blank:]]*$ ]]
++ [[    GLBPOS =~ ^#defcfg ]]
++ [[    GLBPOS =~ ^#enddef ]]
++ [[    GLBPOS =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg pisces tm5:co2 =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg pisces tm5:co2 =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg pisces tm5:co2' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='pisces tm5:co2'
++ has_config pisces tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ for __m in '$config'
++ [[ atm =~ pisces ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg pisces tm5:co2' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from TM5-MP to PISCES. =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from TM5-MP to PISCES. =~ ^#defcfg ]]
++ [[ # Fields send from TM5-MP to PISCES. =~ ^#enddef ]]
++ [[ # Fields send from TM5-MP to PISCES. =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #  - temporal interpolation: inst or daily mean? =~ ^[[:blank:]]*$ ]]
++ [[ #  - temporal interpolation: inst or daily mean? =~ ^#defcfg ]]
++ [[ #  - temporal interpolation: inst or daily mean? =~ ^#enddef ]]
++ [[ #  - temporal interpolation: inst or daily mean? =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg pisces tm5:co2 # --- atmospheric CO2 concentrations (ppm) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg pisces tm5:co2 # --- atmospheric CO2 concentrations (ppm) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg pisces tm5:co2 # --- atmospheric CO2 concentrations (ppm) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='pisces tm5:co2 '
++ has_config pisces tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ for __m in '$config'
++ [[ atm =~ pisces ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg pisces tm5:co2 # --- atmospheric CO2 concentrations (ppm) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- atmospheric CO2 concentrations (ppm) ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   OCO2_TM5 O_AtmCO2 1 86400  1 o_co2.nc EXPORTED =~ ^[[:blank:]]*$ ]]
++ [[   OCO2_TM5 O_AtmCO2 1 86400  1 o_co2.nc EXPORTED =~ ^#defcfg ]]
++ [[   OCO2_TM5 O_AtmCO2 1 86400  1 o_co2.nc EXPORTED =~ ^#enddef ]]
++ [[   OCO2_TM5 O_AtmCO2 1 86400  1 o_co2.nc EXPORTED =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LTM3 Ot25 LAG= =~ ^[[:blank:]]*$ ]]
++ [[   LTM3 Ot25 LAG= =~ ^#defcfg ]]
++ [[   LTM3 Ot25 LAG= =~ ^#enddef ]]
++ [[   LTM3 Ot25 LAG= =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  0  P  2 =~ ^[[:blank:]]*$ ]]
++ [[   P  0  P  2 =~ ^#defcfg ]]
++ [[   P  0  P  2 =~ ^#enddef ]]
++ [[   P  0  P  2 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   SCRIPR =~ ^[[:blank:]]*$ ]]
++ [[   SCRIPR =~ ^#defcfg ]]
++ [[   SCRIPR =~ ^#enddef ]]
++ [[   SCRIPR =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg pisces tm5:co2 =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg pisces tm5:co2 =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg pisces tm5:co2' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='pisces tm5:co2'
++ has_config pisces tm5:co2
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ for __m in '$config'
++ [[ atm =~ pisces ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg pisces tm5:co2' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
+++ :
++ comment=
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # Fields send from PISCES to TM5-MP =~ ^[[:blank:]]*$ ]]
++ [[ # Fields send from PISCES to TM5-MP =~ ^#defcfg ]]
++ [[ # Fields send from PISCES to TM5-MP =~ ^#enddef ]]
++ [[ # Fields send from PISCES to TM5-MP =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ # ==================================================================== =~ ^[[:blank:]]*$ ]]
++ [[ # ==================================================================== =~ ^#defcfg ]]
++ [[ # ==================================================================== =~ ^#enddef ]]
++ [[ # ==================================================================== =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ #defcfg pisces tm5 # --- C fluxes (molC/m2/s) --- =~ ^[[:blank:]]*$ ]]
++ [[ #defcfg pisces tm5 # --- C fluxes (molC/m2/s) --- =~ ^#defcfg ]]
expr "$line" : '^#defcfg[[:blank:]]*\([^#]*\)' || :
+++ expr '#defcfg pisces tm5 # --- C fluxes (molC/m2/s) ---' : '^#defcfg[[:blank:]]*\([^#]*\)'
++ cfgstring='pisces tm5 '
++ has_config pisces tm5
++ ((  2  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' pisces == any ']'
++ [[ pisces == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ pisces ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ pisces ]]
++ for __m in '$config'
++ [[ lim3 =~ pisces ]]
++ for __m in '$config'
++ [[ rnfmapper =~ pisces ]]
++ for __m in '$config'
++ [[ xios:detached =~ pisces ]]
++ for __m in '$config'
++ [[ oasis =~ pisces ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ pisces ]]
++ for __m in '$config'
++ [[ atm =~ pisces ]]
++ ((  __f  ))
++ return 1
++ lineout=0
expr "$line" : '^#defcfg[^#]*[[:blank:]]*\(.*\)' || :
+++ expr '#defcfg pisces tm5 # --- C fluxes (molC/m2/s) ---' : '^#defcfg[^#]*[[:blank:]]*\(.*\)'
++ comment='# --- C fluxes (molC/m2/s) ---'
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   O_CO2FLX TM5_OceCFLX 1 86400  3 pisce.nc EXPOUT =~ ^[[:blank:]]*$ ]]
++ [[   O_CO2FLX TM5_OceCFLX 1 86400  3 pisce.nc EXPOUT =~ ^#defcfg ]]
++ [[   O_CO2FLX TM5_OceCFLX 1 86400  3 pisce.nc EXPOUT =~ ^#enddef ]]
++ [[   O_CO2FLX TM5_OceCFLX 1 86400  3 pisce.nc EXPOUT =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   Ot25 LTM3 LAG=900 =~ ^[[:blank:]]*$ ]]
++ [[   Ot25 LTM3 LAG=900 =~ ^#defcfg ]]
++ [[   Ot25 LTM3 LAG=900 =~ ^#enddef ]]
++ [[   Ot25 LTM3 LAG=900 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   P  2  P  0 =~ ^[[:blank:]]*$ ]]
++ [[   P  2  P  0 =~ ^#defcfg ]]
++ [[   P  2  P  0 =~ ^#enddef ]]
++ [[   P  2  P  0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[   LOCTRANS SCRIPR CONSERV =~ ^[[:blank:]]*$ ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#defcfg ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^#enddef ]]
++ [[   LOCTRANS SCRIPR CONSERV =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    AVERAGE =~ ^[[:blank:]]*$ ]]
++ [[    AVERAGE =~ ^#defcfg ]]
++ [[    AVERAGE =~ ^#enddef ]]
++ [[    AVERAGE =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^[[:blank:]]*$ ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#defcfg ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^#enddef ]]
++ [[    GAUSWGT LR SCALAR LATITUDE 1 9 2.0 =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[    GLOBAL =~ ^[[:blank:]]*$ ]]
++ [[    GLOBAL =~ ^#defcfg ]]
++ [[    GLOBAL =~ ^#enddef ]]
++ [[    GLOBAL =~ ^expfield ]]
++ ((  lineout  ))
++ IFS=
++ read line
++ [[ #enddef =~ ^[[:blank:]]*$ ]]
++ [[ #enddef =~ ^#defcfg ]]
++ [[ #enddef =~ ^#enddef ]]
++ lineout=1
++ IFS=
++ read line
++ [[ '' =~ ^[[:blank:]]*$ ]]
++ continue
++ IFS=
++ read line
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^[[:blank:]]*$ ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#defcfg ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^#enddef ]]
++ [[ # ------------------------------------------------------------------------------------------------- =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# -------------------------------------------------------------------------------------------------'
++ IFS=
++ read line
++ [[  $END =~ ^[[:blank:]]*$ ]]
++ [[  $END =~ ^#defcfg ]]
++ [[  $END =~ ^#enddef ]]
++ [[  $END =~ ^expfield ]]
++ ((  lineout  ))
++ echo ' $END'
++ IFS=
++ read line
++ [[ # ================================================================================================= =~ ^[[:blank:]]*$ ]]
++ [[ # ================================================================================================= =~ ^#defcfg ]]
++ [[ # ================================================================================================= =~ ^#enddef ]]
++ [[ # ================================================================================================= =~ ^expfield ]]
++ ((  lineout  ))
++ echo '# ================================================================================================='
++ IFS=
++ read line
set -u
++ set -u
has_config lpjg
++ has_config lpjg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
+ tempfile=tmp.242402
+ case ${ifs_veg_source} in
+ icmclfile=/gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD
printf "%04d" $((leg_start_date_yyyy-1))
++ printf %04d 1992
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19921215 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-12 ICMCLt0niINIT
+ (( y=1993  ))
+ (( y<=1993  ))
printf "%04d" $y
++ printf %04d 1993
+ yy=1993
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 1
+ mm=01
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930115 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-01 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 2
+ mm=02
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930215 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-02 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 3
+ mm=03
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930315 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-03 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 4
+ mm=04
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930415 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-04 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 5
+ mm=05
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930515 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-05 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 6
+ mm=06
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930615 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-06 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 7
+ mm=07
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930715 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-07 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 8
+ mm=08
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930815 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-08 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 9
+ mm=09
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19930915 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-09 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 10
+ mm=10
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19931015 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-10 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 11
+ mm=11
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19931115 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-11 tmp.242402
+ cat tmp.242402
+ for m in '{1..12}'
printf "%02d" $m
++ printf %02d 12
+ mm=12
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19931215 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-12 tmp.242402
+ cat tmp.242402
+ (( y++  ))
+ (( y<=1993  ))
printf "%04d" $((leg_end_date_yyyy+1))
++ printf %04d 1994
+ /apps/GRIB/1.14.0/INTEL//bin/grib_set -s dataDate=19940115 /gpfs/scratch/bsc32/bsc32627/t0ni/19931101/fc0/inidata/ifs/T511L91/climate/ICMCL_ONLY_VEG_PD-01 tmp.242402
+ cat tmp.242402
+ rm -f tmp.242402
+ false
+ false
+ true
+ false
+ echo 'Restart files sanity check before launch:'
+ false
+ export DR_HOOK_IGNORE_SIGNALS=-1
+ DR_HOOK_IGNORE_SIGNALS=-1
+ export CPLNG=active
+ CPLNG=active
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ for __m in '$config'
+ [[ atm =~ nemo ]]
+ ((  __f  ))
+ return 0
+ cmd='95 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe --              1391 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe --              912 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf -v ecmwf -e t0ni'
+ has_config lpjg
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' lpjg == any ']'
+ [[ lpjg == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ for __m in '$config'
+ [[ atm =~ lpjg ]]
+ ((  __f  ))
+ return 1
+ has_config tm5
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' tm5 == any ']'
+ [[ tm5 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ for __m in '$config'
+ [[ atm =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ has_config amip
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ for __m in '$config'
+ [[ atm =~ amip ]]
+ ((  __f  ))
+ return 1
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ for __m in '$config'
+ [[ atm =~ nemo ]]
+ ((  __f  ))
+ return 0
+ cmd='95 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe --              1391 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe --              912 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf -v ecmwf -e t0ni -- 1 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe'
date +%s
++ date +%s
+ t1=1639809909
+ launch 95 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe -- 1391 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe -- 912 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf -v ecmwf -e t0ni -- 1 /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ cmd=mpirun
+ '[' true = true ']'
+ cmd='mpirun -machinefile machinefile'
+ machinefile_init
+ max_ppn=48
+ components=(ifs nem xio rnf amip lpjg)
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ for component in '${components[@]}'
+ eval ifs_exc=FALSE
ifs_exc=FALSE
++ ifs_exc=FALSE
+ eval ifs_ppn=1
ifs_ppn=1
++ ifs_ppn=1
+ for component in '${components[@]}'
+ eval nem_exc=FALSE
nem_exc=FALSE
++ nem_exc=FALSE
+ eval nem_ppn=1
nem_ppn=1
++ nem_ppn=1
+ for component in '${components[@]}'
+ eval xio_exc=FALSE
xio_exc=FALSE
++ xio_exc=FALSE
+ eval xio_ppn=1
xio_ppn=1
++ xio_ppn=1
+ for component in '${components[@]}'
+ eval rnf_exc=FALSE
rnf_exc=FALSE
++ rnf_exc=FALSE
+ eval rnf_ppn=1
rnf_ppn=1
++ rnf_ppn=1
+ for component in '${components[@]}'
+ eval amip_exc=FALSE
amip_exc=FALSE
++ amip_exc=FALSE
+ eval amip_ppn=1
amip_ppn=1
++ amip_ppn=1
+ for component in '${components[@]}'
+ eval lpjg_exc=FALSE
lpjg_exc=FALSE
++ lpjg_exc=FALSE
+ eval lpjg_ppn=1
lpjg_ppn=1
++ lpjg_ppn=1
+ machinefile_config
+ has_config ifs nemo pisces rnfmapper xios lpjg
+ ((  6  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ for __m in '$config'
+ [[ atm =~ ifs ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ for __m in '$config'
+ [[ atm =~ nemo ]]
+ ((  __f  ))
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ for __m in '$config'
+ [[ atm =~ pisces ]]
+ ((  __f  ))
+ return 1
+ ifs_exc=TRUE
+ nem_exc=TRUE
+ xio_exc=TRUE
+ lpjg_exc=TRUE
+ tm5_exc=TRUE
+ ifs_ppn=48
+ nem_ppn=48
+ xio_ppn=48
+ lpjg_ppn=48
+ tm5_ppn=45
+ get_hosts
+ hosts=(`scontrol show hostname | paste -s`)
scontrol show hostname | paste -s
++ scontrol show hostname
++ paste -s
+ declare -a -g processes_hosts
seq 0 ${#hosts[@]}
++ seq 0 50
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ for n in '`seq 0 ${#hosts[@]}`'
+ processes_hosts[$n]=0
+ current_hostid=0
+ ((  15  ))
+ nranks=95
basename $2
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ executable=./xios_server.exe
+ '[' true = true ']'
+ machinefile_add ./xios_server.exe 95
+ total_proc=95
+ for component in '${components[@]}'
+ binary=ifs_exe_file
+ exclusive=ifs_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ '[' ./ifsmaster-ecconf = ./xios_server.exe ']'
+ for component in '${components[@]}'
+ binary=nem_exe_file
+ exclusive=nem_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ '[' ./nemo.exe = ./xios_server.exe ']'
+ for component in '${components[@]}'
+ binary=xio_exe_file
+ exclusive=xio_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ '[' ./xios_server.exe = ./xios_server.exe ']'
+ ppn=xio_ppn
+ [[ TRUE == \T\R\U\E ]]
+ '[' 0 -gt 0 ']'
+ count=0
+ '[' 95 -gt 0 ']'
+ '[' 0 -ge 50 ']'
+ current_hostname=s01r2b25
+ [[ 95 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 94 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 93 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 92 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 91 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 90 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 89 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 88 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 87 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 86 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 85 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 84 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 83 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 82 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 81 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 80 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 79 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 78 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 77 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 76 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 75 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 74 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 73 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 72 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 71 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 70 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 69 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 68 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 67 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 66 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 65 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 64 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 63 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 62 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 61 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 60 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 59 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 58 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 57 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 56 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 55 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 54 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 53 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 52 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 51 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 50 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 49 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 48 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b25
+ let 'count += 1'
+ let 'processes_hosts[0] += 1'
+ let 'total_proc -= 1'
+ [[ 47 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 47 -gt 0 ']'
+ '[' 1 -ge 50 ']'
+ current_hostname=s01r2b26
+ [[ 47 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 46 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 45 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 44 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 43 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 42 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 41 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 40 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 39 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 38 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 37 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 36 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 35 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 34 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 33 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 32 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 31 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 30 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 29 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 28 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 27 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 26 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 25 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 24 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 23 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 22 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 21 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 20 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 19 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 18 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 17 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 16 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 15 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 14 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 13 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 12 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 11 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 10 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 9 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 8 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 7 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 6 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 5 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 4 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 3 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 2 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ [[ 1 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ true
+ [[ 0 -gt 0 ]]
+ '[' 47 -eq 48 ']'
+ '[' 0 -gt 0 ']'
+ for component in '${components[@]}'
+ binary=rnf_exe_file
+ exclusive=rnf_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ '[' ./runoff-mapper.exe = ./xios_server.exe ']'
+ for component in '${components[@]}'
+ binary=amip_exe_file
+ exclusive=amip_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/amip-forcing/bin/amip-forcing.exe
+ '[' ./amip-forcing.exe = ./xios_server.exe ']'
+ for component in '${components[@]}'
+ binary=lpjg_exe_file
+ exclusive=lpjg_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/lpjg/build/guess_T511
+ '[' ./guess_T511 = ./xios_server.exe ']'
+ shift
+ shift
+ cmd+=' -np 95 ./xios_server.exe'
+ ((  13  ))
+ '[' -- '!=' -- ']'
+ shift
+ ((  12  ))
+ cmd+=' :'
+ ((  12  ))
+ nranks=1391
basename $2
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ executable=./nemo.exe
+ '[' true = true ']'
+ machinefile_add ./nemo.exe 1391
+ total_proc=1391
+ for component in '${components[@]}'
+ binary=ifs_exe_file
+ exclusive=ifs_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ '[' ./ifsmaster-ecconf = ./nemo.exe ']'
+ for component in '${components[@]}'
+ binary=nem_exe_file
+ exclusive=nem_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ '[' ./nemo.exe = ./nemo.exe ']'
+ ppn=nem_ppn
+ [[ TRUE == \T\R\U\E ]]
+ '[' 47 -gt 0 ']'
+ let 'current_hostid += 1'
+ '[' 0 -gt 0 ']'
+ count=0
+ '[' 1391 -gt 0 ']'
+ '[' 2 -ge 50 ']'
+ current_hostname=s01r2b27
+ [[ 1391 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1390 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1389 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1388 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1387 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1386 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1385 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1384 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1383 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1382 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1381 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1380 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1379 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1378 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1377 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1376 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1375 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1374 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1373 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1372 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1371 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1370 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1369 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1368 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1367 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1366 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1365 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1364 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1363 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1362 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1361 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1360 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1359 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1358 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1357 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1356 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1355 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1354 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1353 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1352 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1351 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1350 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1349 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1348 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1347 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1346 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1345 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1344 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b27
+ let 'count += 1'
+ let 'processes_hosts[2] += 1'
+ let 'total_proc -= 1'
+ [[ 1343 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1343 -gt 0 ']'
+ '[' 3 -ge 50 ']'
+ current_hostname=s01r2b28
+ [[ 1343 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1342 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1341 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1340 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1339 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1338 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1337 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1336 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1335 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1334 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1333 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1332 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1331 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1330 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1329 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1328 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1327 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1326 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1325 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1324 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1323 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1322 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1321 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1320 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1319 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1318 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1317 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1316 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1315 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1314 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1313 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1312 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1311 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1310 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1309 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1308 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1307 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1306 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1305 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1304 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1303 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1302 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1301 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1300 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1299 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1298 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1297 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1296 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b28
+ let 'count += 1'
+ let 'processes_hosts[3] += 1'
+ let 'total_proc -= 1'
+ [[ 1295 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1295 -gt 0 ']'
+ '[' 4 -ge 50 ']'
+ current_hostname=s01r2b29
+ [[ 1295 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1294 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1293 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1292 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1291 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1290 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1289 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1288 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1287 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1286 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1285 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1284 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1283 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1282 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1281 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1280 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1279 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1278 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1277 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1276 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1275 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1274 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1273 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1272 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1271 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1270 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1269 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1268 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1267 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1266 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1265 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1264 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1263 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1262 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1261 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1260 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1259 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1258 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1257 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1256 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1255 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1254 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1253 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1252 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1251 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1250 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1249 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1248 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b29
+ let 'count += 1'
+ let 'processes_hosts[4] += 1'
+ let 'total_proc -= 1'
+ [[ 1247 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1247 -gt 0 ']'
+ '[' 5 -ge 50 ']'
+ current_hostname=s01r2b30
+ [[ 1247 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1246 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1245 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1244 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1243 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1242 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1241 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1240 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1239 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1238 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1237 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1236 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1235 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1234 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1233 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1232 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1231 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1230 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1229 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1228 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1227 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1226 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1225 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1224 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1223 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1222 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1221 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1220 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1219 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1218 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1217 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1216 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1215 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1214 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1213 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1212 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1211 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1210 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1209 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1208 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1207 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1206 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1205 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1204 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1203 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1202 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1201 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1200 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b30
+ let 'count += 1'
+ let 'processes_hosts[5] += 1'
+ let 'total_proc -= 1'
+ [[ 1199 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1199 -gt 0 ']'
+ '[' 6 -ge 50 ']'
+ current_hostname=s01r2b31
+ [[ 1199 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1198 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1197 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1196 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1195 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1194 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1193 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1192 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1191 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1190 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1189 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1188 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1187 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1186 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1185 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1184 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1183 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1182 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1181 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1180 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1179 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1178 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1177 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1176 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1175 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1174 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1173 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1172 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1171 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1170 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1169 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1168 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1167 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1166 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1165 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1164 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1163 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1162 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1161 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1160 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1159 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1158 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1157 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1156 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1155 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1154 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1153 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1152 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b31
+ let 'count += 1'
+ let 'processes_hosts[6] += 1'
+ let 'total_proc -= 1'
+ [[ 1151 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1151 -gt 0 ']'
+ '[' 7 -ge 50 ']'
+ current_hostname=s01r2b32
+ [[ 1151 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1150 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1149 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1148 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1147 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1146 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1145 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1144 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1143 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1142 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1141 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1140 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1139 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1138 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1137 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1136 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1135 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1134 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1133 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1132 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1131 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1130 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1129 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1128 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1127 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1126 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1125 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1124 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1123 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1122 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1121 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1120 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1119 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1118 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1117 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1116 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1115 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1114 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1113 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1112 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1111 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1110 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1109 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1108 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1107 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1106 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1105 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1104 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b32
+ let 'count += 1'
+ let 'processes_hosts[7] += 1'
+ let 'total_proc -= 1'
+ [[ 1103 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1103 -gt 0 ']'
+ '[' 8 -ge 50 ']'
+ current_hostname=s01r2b33
+ [[ 1103 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1102 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1101 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1100 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1099 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1098 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1097 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1096 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1095 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1094 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1093 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1092 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1091 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1090 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1089 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1088 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1087 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1086 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1085 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1084 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1083 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1082 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1081 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1080 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1079 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1078 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1077 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1076 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1075 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1074 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1073 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1072 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1071 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1070 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1069 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1068 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1067 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1066 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1065 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1064 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1063 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1062 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1061 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1060 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1059 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1058 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1057 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1056 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b33
+ let 'count += 1'
+ let 'processes_hosts[8] += 1'
+ let 'total_proc -= 1'
+ [[ 1055 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1055 -gt 0 ']'
+ '[' 9 -ge 50 ']'
+ current_hostname=s01r2b34
+ [[ 1055 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1054 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1053 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1052 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1051 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1050 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1049 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1048 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1047 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1046 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1045 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1044 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1043 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1042 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1041 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1040 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1039 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1038 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1037 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1036 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1035 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1034 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1033 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1032 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1031 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1030 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1029 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1028 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1027 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1026 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1025 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1024 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1023 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1022 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1021 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1020 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1019 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1018 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1017 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1016 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1015 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1014 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1013 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1012 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1011 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1010 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1009 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1008 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b34
+ let 'count += 1'
+ let 'processes_hosts[9] += 1'
+ let 'total_proc -= 1'
+ [[ 1007 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1007 -gt 0 ']'
+ '[' 10 -ge 50 ']'
+ current_hostname=s01r2b35
+ [[ 1007 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1006 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1005 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1004 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1003 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1002 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1001 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 1000 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 999 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 998 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 997 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 996 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 995 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 994 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 993 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 992 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 991 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 990 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 989 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 988 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 987 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 986 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 985 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 984 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 983 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 982 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 981 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 980 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 979 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 978 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 977 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 976 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 975 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 974 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 973 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 972 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 971 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 970 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 969 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 968 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 967 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 966 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 965 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 964 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 963 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 962 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 961 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 960 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b35
+ let 'count += 1'
+ let 'processes_hosts[10] += 1'
+ let 'total_proc -= 1'
+ [[ 959 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 959 -gt 0 ']'
+ '[' 11 -ge 50 ']'
+ current_hostname=s01r2b36
+ [[ 959 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 958 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 957 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 956 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 955 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 954 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 953 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 952 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 951 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 950 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 949 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 948 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 947 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 946 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 945 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 944 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 943 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 942 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 941 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 940 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 939 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 938 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 937 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 936 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 935 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 934 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 933 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 932 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 931 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 930 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 929 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 928 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 927 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 926 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 925 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 924 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 923 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 922 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 921 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 920 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 919 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 918 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 917 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 916 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 915 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 914 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 913 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 912 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b36
+ let 'count += 1'
+ let 'processes_hosts[11] += 1'
+ let 'total_proc -= 1'
+ [[ 911 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 911 -gt 0 ']'
+ '[' 12 -ge 50 ']'
+ current_hostname=s01r2b37
+ [[ 911 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 910 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 909 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 908 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 907 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 906 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 905 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 904 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 903 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 902 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 901 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 900 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 899 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 898 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 897 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 896 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 895 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 894 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 893 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 892 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 891 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 890 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 889 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 888 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 887 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 886 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 885 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 884 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 883 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 882 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 881 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 880 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 879 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 878 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 877 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 876 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 875 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 874 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 873 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 872 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 871 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 870 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 869 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 868 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 867 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 866 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 865 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 864 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b37
+ let 'count += 1'
+ let 'processes_hosts[12] += 1'
+ let 'total_proc -= 1'
+ [[ 863 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 863 -gt 0 ']'
+ '[' 13 -ge 50 ']'
+ current_hostname=s01r2b39
+ [[ 863 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 862 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 861 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 860 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 859 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 858 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 857 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 856 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 855 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 854 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 853 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 852 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 851 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 850 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 849 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 848 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 847 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 846 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 845 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 844 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 843 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 842 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 841 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 840 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 839 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 838 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 837 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 836 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 835 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 834 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 833 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 832 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 831 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 830 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 829 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 828 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 827 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 826 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 825 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 824 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 823 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 822 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 821 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 820 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 819 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 818 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 817 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 816 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b39
+ let 'count += 1'
+ let 'processes_hosts[13] += 1'
+ let 'total_proc -= 1'
+ [[ 815 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 815 -gt 0 ']'
+ '[' 14 -ge 50 ']'
+ current_hostname=s01r2b40
+ [[ 815 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 814 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 813 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 812 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 811 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 810 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 809 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 808 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 807 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 806 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 805 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 804 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 803 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 802 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 801 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 800 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 799 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 798 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 797 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 796 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 795 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 794 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 793 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 792 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 791 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 790 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 789 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 788 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 787 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 786 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 785 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 784 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 783 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 782 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 781 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 780 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 779 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 778 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 777 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 776 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 775 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 774 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 773 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 772 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 771 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 770 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 769 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 768 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b40
+ let 'count += 1'
+ let 'processes_hosts[14] += 1'
+ let 'total_proc -= 1'
+ [[ 767 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 767 -gt 0 ']'
+ '[' 15 -ge 50 ']'
+ current_hostname=s01r2b41
+ [[ 767 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 766 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 765 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 764 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 763 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 762 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 761 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 760 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 759 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 758 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 757 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 756 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 755 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 754 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 753 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 752 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 751 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 750 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 749 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 748 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 747 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 746 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 745 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 744 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 743 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 742 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 741 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 740 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 739 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 738 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 737 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 736 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 735 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 734 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 733 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 732 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 731 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 730 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 729 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 728 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 727 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 726 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 725 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 724 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 723 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 722 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 721 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 720 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b41
+ let 'count += 1'
+ let 'processes_hosts[15] += 1'
+ let 'total_proc -= 1'
+ [[ 719 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 719 -gt 0 ']'
+ '[' 16 -ge 50 ']'
+ current_hostname=s01r2b42
+ [[ 719 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 718 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 717 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 716 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 715 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 714 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 713 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 712 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 711 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 710 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 709 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 708 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 707 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 706 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 705 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 704 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 703 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 702 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 701 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 700 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 699 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 698 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 697 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 696 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 695 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 694 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 693 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 692 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 691 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 690 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 689 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 688 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 687 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 686 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 685 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 684 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 683 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 682 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 681 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 680 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 679 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 678 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 677 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 676 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 675 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 674 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 673 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 672 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b42
+ let 'count += 1'
+ let 'processes_hosts[16] += 1'
+ let 'total_proc -= 1'
+ [[ 671 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 671 -gt 0 ']'
+ '[' 17 -ge 50 ']'
+ current_hostname=s01r2b43
+ [[ 671 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 670 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 669 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 668 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 667 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 666 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 665 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 664 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 663 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 662 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 661 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 660 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 659 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 658 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 657 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 656 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 655 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 654 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 653 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 652 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 651 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 650 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 649 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 648 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 647 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 646 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 645 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 644 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 643 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 642 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 641 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 640 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 639 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 638 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 637 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 636 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 635 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 634 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 633 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 632 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 631 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 630 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 629 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 628 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 627 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 626 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 625 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 624 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b43
+ let 'count += 1'
+ let 'processes_hosts[17] += 1'
+ let 'total_proc -= 1'
+ [[ 623 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 623 -gt 0 ']'
+ '[' 18 -ge 50 ']'
+ current_hostname=s01r2b44
+ [[ 623 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 622 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 621 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 620 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 619 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 618 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 617 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 616 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 615 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 614 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 613 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 612 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 611 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 610 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 609 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 608 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 607 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 606 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 605 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 604 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 603 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 602 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 601 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 600 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 599 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 598 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 597 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 596 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 595 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 594 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 593 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 592 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 591 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 590 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 589 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 588 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 587 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 586 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 585 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 584 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 583 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 582 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 581 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 580 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 579 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 578 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 577 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 576 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b44
+ let 'count += 1'
+ let 'processes_hosts[18] += 1'
+ let 'total_proc -= 1'
+ [[ 575 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 575 -gt 0 ']'
+ '[' 19 -ge 50 ']'
+ current_hostname=s01r2b45
+ [[ 575 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 574 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 573 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 572 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 571 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 570 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 569 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 568 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 567 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 566 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 565 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 564 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 563 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 562 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 561 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 560 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 559 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 558 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 557 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 556 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 555 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 554 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 553 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 552 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 551 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 550 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 549 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 548 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 547 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 546 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 545 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 544 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 543 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 542 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 541 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 540 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 539 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 538 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 537 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 536 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 535 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 534 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 533 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 532 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 531 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 530 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 529 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 528 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b45
+ let 'count += 1'
+ let 'processes_hosts[19] += 1'
+ let 'total_proc -= 1'
+ [[ 527 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 527 -gt 0 ']'
+ '[' 20 -ge 50 ']'
+ current_hostname=s01r2b46
+ [[ 527 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 526 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 525 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 524 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 523 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 522 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 521 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 520 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 519 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 518 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 517 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 516 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 515 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 514 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 513 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 512 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 511 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 510 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 509 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 508 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 507 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 506 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 505 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 504 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 503 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 502 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 501 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 500 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 499 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 498 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 497 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 496 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 495 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 494 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 493 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 492 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 491 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 490 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 489 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 488 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 487 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 486 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 485 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 484 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 483 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 482 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 481 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 480 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b46
+ let 'count += 1'
+ let 'processes_hosts[20] += 1'
+ let 'total_proc -= 1'
+ [[ 479 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 479 -gt 0 ']'
+ '[' 21 -ge 50 ']'
+ current_hostname=s01r2b47
+ [[ 479 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 478 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 477 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 476 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 475 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 474 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 473 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 472 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 471 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 470 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 469 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 468 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 467 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 466 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 465 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 464 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 463 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 462 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 461 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 460 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 459 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 458 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 457 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 456 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 455 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 454 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 453 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 452 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 451 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 450 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 449 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 448 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 447 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 446 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 445 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 444 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 443 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 442 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 441 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 440 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 439 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 438 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 437 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 436 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 435 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 434 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 433 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 432 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b47
+ let 'count += 1'
+ let 'processes_hosts[21] += 1'
+ let 'total_proc -= 1'
+ [[ 431 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 431 -gt 0 ']'
+ '[' 22 -ge 50 ']'
+ current_hostname=s01r2b48
+ [[ 431 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 430 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 429 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 428 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 427 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 426 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 425 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 424 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 423 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 422 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 421 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 420 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 419 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 418 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 417 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 416 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 415 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 414 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 413 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 412 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 411 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 410 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 409 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 408 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 407 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 406 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 405 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 404 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 403 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 402 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 401 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 400 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 399 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 398 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 397 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 396 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 395 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 394 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 393 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 392 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 391 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 390 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 389 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 388 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 387 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 386 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 385 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 384 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s01r2b48
+ let 'count += 1'
+ let 'processes_hosts[22] += 1'
+ let 'total_proc -= 1'
+ [[ 383 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 383 -gt 0 ']'
+ '[' 23 -ge 50 ']'
+ current_hostname=s05r2b04
+ [[ 383 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 382 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 381 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 380 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 379 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 378 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 377 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 376 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 375 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 374 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 373 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 372 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 371 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 370 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 369 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 368 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 367 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 366 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 365 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 364 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 363 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 362 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 361 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 360 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 359 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 358 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 357 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 356 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 355 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 354 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 353 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 352 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 351 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 350 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 349 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 348 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 347 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 346 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 345 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 344 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 343 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 342 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 341 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 340 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 339 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 338 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 337 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 336 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s05r2b04
+ let 'count += 1'
+ let 'processes_hosts[23] += 1'
+ let 'total_proc -= 1'
+ [[ 335 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 335 -gt 0 ']'
+ '[' 24 -ge 50 ']'
+ current_hostname=s05r2b12
+ [[ 335 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 334 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 333 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 332 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 331 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 330 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 329 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 328 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 327 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 326 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 325 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 324 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 323 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 322 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 321 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 320 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 319 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 318 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 317 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 316 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 315 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 314 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 313 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 312 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 311 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 310 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 309 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 308 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 307 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 306 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 305 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 304 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 303 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 302 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 301 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 300 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 299 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 298 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 297 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 296 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 295 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 294 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 293 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 292 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 291 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 290 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 289 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 288 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s05r2b12
+ let 'count += 1'
+ let 'processes_hosts[24] += 1'
+ let 'total_proc -= 1'
+ [[ 287 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 287 -gt 0 ']'
+ '[' 25 -ge 50 ']'
+ current_hostname=s05r2b14
+ [[ 287 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 286 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 285 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 284 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 283 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 282 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 281 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 280 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 279 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 278 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 277 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 276 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 275 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 274 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 273 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 272 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 271 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 270 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 269 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 268 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 267 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 266 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 265 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 264 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 263 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 262 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 261 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 260 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 259 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 258 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 257 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 256 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 255 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 254 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 253 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 252 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 251 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 250 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 249 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 248 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 247 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 246 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 245 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 244 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 243 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 242 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 241 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 240 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s05r2b14
+ let 'count += 1'
+ let 'processes_hosts[25] += 1'
+ let 'total_proc -= 1'
+ [[ 239 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 239 -gt 0 ']'
+ '[' 26 -ge 50 ']'
+ current_hostname=s08r2b49
+ [[ 239 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 238 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 237 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 236 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 235 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 234 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 233 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 232 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 231 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 230 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 229 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 228 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 227 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 226 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 225 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 224 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 223 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 222 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 221 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 220 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 219 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 218 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 217 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 216 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 215 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 214 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 213 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 212 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 211 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 210 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 209 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 208 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 207 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 206 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 205 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 204 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 203 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 202 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 201 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 200 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 199 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 198 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 197 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 196 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 195 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 194 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 193 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 192 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b49
+ let 'count += 1'
+ let 'processes_hosts[26] += 1'
+ let 'total_proc -= 1'
+ [[ 191 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 191 -gt 0 ']'
+ '[' 27 -ge 50 ']'
+ current_hostname=s08r2b50
+ [[ 191 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 190 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 189 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 188 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 187 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 186 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 185 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 184 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 183 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 182 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 181 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 180 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 179 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 178 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 177 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 176 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 175 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 174 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 173 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 172 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 171 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 170 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 169 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 168 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 167 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 166 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 165 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 164 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 163 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 162 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 161 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 160 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 159 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 158 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 157 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 156 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 155 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 154 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 153 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 152 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 151 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 150 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 149 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 148 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 147 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 146 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 145 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 144 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b50
+ let 'count += 1'
+ let 'processes_hosts[27] += 1'
+ let 'total_proc -= 1'
+ [[ 143 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 143 -gt 0 ']'
+ '[' 28 -ge 50 ']'
+ current_hostname=s08r2b51
+ [[ 143 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 142 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 141 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 140 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 139 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 138 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 137 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 136 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 135 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 134 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 133 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 132 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 131 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 130 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 129 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 128 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 127 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 126 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 125 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 124 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 123 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 122 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 121 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 120 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 119 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 118 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 117 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 116 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 115 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 114 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 113 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 112 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 111 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 110 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 109 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 108 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 107 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 106 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 105 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 104 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 103 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 102 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 101 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 100 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 99 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 98 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 97 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 96 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b51
+ let 'count += 1'
+ let 'processes_hosts[28] += 1'
+ let 'total_proc -= 1'
+ [[ 95 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 95 -gt 0 ']'
+ '[' 29 -ge 50 ']'
+ current_hostname=s08r2b52
+ [[ 95 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 94 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 93 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 92 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 91 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 90 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 89 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 88 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 87 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 86 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 85 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 84 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 83 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 82 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 81 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 80 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 79 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 78 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 77 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 76 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 75 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 74 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 73 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 72 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 71 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 70 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 69 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 68 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 67 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 66 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 65 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 64 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 63 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 62 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 61 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 60 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 59 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 58 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 57 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 56 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 55 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 54 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 53 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 52 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 51 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 50 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 49 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 48 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b52
+ let 'count += 1'
+ let 'processes_hosts[29] += 1'
+ let 'total_proc -= 1'
+ [[ 47 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 47 -gt 0 ']'
+ '[' 30 -ge 50 ']'
+ current_hostname=s08r2b53
+ [[ 47 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 46 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 45 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 44 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 43 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 42 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 41 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 40 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 39 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 38 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 37 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 36 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 35 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 34 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 33 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 32 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 31 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 30 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 29 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 28 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 27 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 26 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 25 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 24 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 23 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 22 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 21 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 20 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 19 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 18 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 17 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 16 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 15 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 14 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 13 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 12 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 11 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 10 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 9 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 8 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 7 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 6 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 5 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 4 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 3 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 2 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ [[ 1 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b53
+ let 'count += 1'
+ let 'processes_hosts[30] += 1'
+ let 'total_proc -= 1'
+ true
+ [[ 0 -gt 0 ]]
+ '[' 47 -eq 48 ']'
+ '[' 0 -gt 0 ']'
+ for component in '${components[@]}'
+ binary=xio_exe_file
+ exclusive=xio_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ '[' ./xios_server.exe = ./nemo.exe ']'
+ for component in '${components[@]}'
+ binary=rnf_exe_file
+ exclusive=rnf_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ '[' ./runoff-mapper.exe = ./nemo.exe ']'
+ for component in '${components[@]}'
+ binary=amip_exe_file
+ exclusive=amip_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/amip-forcing/bin/amip-forcing.exe
+ '[' ./amip-forcing.exe = ./nemo.exe ']'
+ for component in '${components[@]}'
+ binary=lpjg_exe_file
+ exclusive=lpjg_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/lpjg/build/guess_T511
+ '[' ./guess_T511 = ./nemo.exe ']'
+ shift
+ shift
+ cmd+=' -np 1391 ./nemo.exe'
+ ((  10  ))
+ '[' -- '!=' -- ']'
+ shift
+ ((  9  ))
+ cmd+=' :'
+ ((  9  ))
+ nranks=912
basename $2
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ executable=./ifsmaster-ecconf
+ '[' true = true ']'
+ machinefile_add ./ifsmaster-ecconf 912
+ total_proc=912
+ for component in '${components[@]}'
+ binary=ifs_exe_file
+ exclusive=ifs_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ '[' ./ifsmaster-ecconf = ./ifsmaster-ecconf ']'
+ ppn=ifs_ppn
+ [[ TRUE == \T\R\U\E ]]
+ '[' 47 -gt 0 ']'
+ let 'current_hostid += 1'
+ '[' 0 -gt 0 ']'
+ count=0
+ '[' 912 -gt 0 ']'
+ '[' 31 -ge 50 ']'
+ current_hostname=s08r2b54
+ [[ 912 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 911 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 910 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 909 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 908 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 907 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 906 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 905 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 904 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 903 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 902 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 901 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 900 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 899 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 898 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 897 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 896 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 895 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 894 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 893 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 892 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 891 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 890 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 889 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 888 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 887 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 886 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 885 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 884 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 883 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 882 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 881 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 880 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 879 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 878 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 877 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 876 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 875 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 874 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 873 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 872 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 871 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 870 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 869 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 868 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 867 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 866 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 865 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b54
+ let 'count += 1'
+ let 'processes_hosts[31] += 1'
+ let 'total_proc -= 1'
+ [[ 864 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 864 -gt 0 ']'
+ '[' 32 -ge 50 ']'
+ current_hostname=s08r2b55
+ [[ 864 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 863 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 862 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 861 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 860 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 859 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 858 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 857 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 856 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 855 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 854 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 853 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 852 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 851 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 850 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 849 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 848 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 847 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 846 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 845 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 844 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 843 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 842 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 841 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 840 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 839 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 838 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 837 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 836 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 835 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 834 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 833 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 832 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 831 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 830 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 829 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 828 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 827 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 826 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 825 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 824 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 823 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 822 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 821 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 820 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 819 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 818 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 817 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b55
+ let 'count += 1'
+ let 'processes_hosts[32] += 1'
+ let 'total_proc -= 1'
+ [[ 816 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 816 -gt 0 ']'
+ '[' 33 -ge 50 ']'
+ current_hostname=s08r2b56
+ [[ 816 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 815 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 814 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 813 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 812 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 811 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 810 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 809 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 808 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 807 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 806 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 805 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 804 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 803 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 802 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 801 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 800 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 799 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 798 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 797 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 796 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 795 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 794 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 793 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 792 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 791 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 790 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 789 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 788 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 787 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 786 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 785 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 784 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 783 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 782 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 781 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 780 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 779 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 778 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 777 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 776 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 775 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 774 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 773 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 772 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 771 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 770 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 769 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b56
+ let 'count += 1'
+ let 'processes_hosts[33] += 1'
+ let 'total_proc -= 1'
+ [[ 768 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 768 -gt 0 ']'
+ '[' 34 -ge 50 ']'
+ current_hostname=s08r2b57
+ [[ 768 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 767 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 766 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 765 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 764 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 763 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 762 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 761 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 760 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 759 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 758 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 757 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 756 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 755 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 754 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 753 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 752 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 751 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 750 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 749 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 748 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 747 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 746 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 745 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 744 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 743 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 742 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 741 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 740 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 739 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 738 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 737 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 736 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 735 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 734 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 733 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 732 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 731 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 730 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 729 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 728 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 727 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 726 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 725 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 724 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 723 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 722 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 721 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b57
+ let 'count += 1'
+ let 'processes_hosts[34] += 1'
+ let 'total_proc -= 1'
+ [[ 720 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 720 -gt 0 ']'
+ '[' 35 -ge 50 ']'
+ current_hostname=s08r2b58
+ [[ 720 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 719 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 718 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 717 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 716 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 715 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 714 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 713 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 712 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 711 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 710 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 709 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 708 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 707 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 706 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 705 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 704 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 703 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 702 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 701 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 700 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 699 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 698 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 697 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 696 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 695 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 694 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 693 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 692 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 691 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 690 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 689 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 688 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 687 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 686 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 685 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 684 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 683 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 682 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 681 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 680 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 679 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 678 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 677 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 676 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 675 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 674 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 673 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b58
+ let 'count += 1'
+ let 'processes_hosts[35] += 1'
+ let 'total_proc -= 1'
+ [[ 672 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 672 -gt 0 ']'
+ '[' 36 -ge 50 ']'
+ current_hostname=s08r2b59
+ [[ 672 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 671 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 670 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 669 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 668 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 667 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 666 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 665 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 664 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 663 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 662 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 661 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 660 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 659 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 658 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 657 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 656 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 655 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 654 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 653 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 652 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 651 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 650 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 649 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 648 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 647 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 646 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 645 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 644 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 643 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 642 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 641 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 640 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 639 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 638 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 637 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 636 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 635 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 634 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 633 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 632 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 631 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 630 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 629 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 628 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 627 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 626 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 625 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b59
+ let 'count += 1'
+ let 'processes_hosts[36] += 1'
+ let 'total_proc -= 1'
+ [[ 624 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 624 -gt 0 ']'
+ '[' 37 -ge 50 ']'
+ current_hostname=s08r2b60
+ [[ 624 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 623 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 622 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 621 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 620 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 619 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 618 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 617 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 616 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 615 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 614 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 613 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 612 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 611 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 610 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 609 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 608 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 607 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 606 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 605 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 604 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 603 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 602 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 601 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 600 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 599 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 598 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 597 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 596 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 595 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 594 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 593 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 592 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 591 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 590 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 589 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 588 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 587 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 586 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 585 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 584 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 583 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 582 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 581 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 580 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 579 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 578 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 577 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b60
+ let 'count += 1'
+ let 'processes_hosts[37] += 1'
+ let 'total_proc -= 1'
+ [[ 576 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 576 -gt 0 ']'
+ '[' 38 -ge 50 ']'
+ current_hostname=s08r2b61
+ [[ 576 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 575 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 574 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 573 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 572 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 571 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 570 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 569 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 568 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 567 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 566 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 565 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 564 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 563 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 562 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 561 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 560 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 559 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 558 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 557 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 556 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 555 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 554 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 553 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 552 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 551 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 550 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 549 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 548 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 547 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 546 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 545 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 544 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 543 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 542 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 541 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 540 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 539 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 538 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 537 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 536 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 535 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 534 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 533 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 532 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 531 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 530 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 529 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b61
+ let 'count += 1'
+ let 'processes_hosts[38] += 1'
+ let 'total_proc -= 1'
+ [[ 528 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 528 -gt 0 ']'
+ '[' 39 -ge 50 ']'
+ current_hostname=s08r2b62
+ [[ 528 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 527 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 526 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 525 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 524 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 523 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 522 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 521 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 520 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 519 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 518 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 517 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 516 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 515 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 514 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 513 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 512 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 511 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 510 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 509 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 508 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 507 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 506 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 505 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 504 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 503 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 502 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 501 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 500 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 499 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 498 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 497 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 496 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 495 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 494 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 493 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 492 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 491 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 490 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 489 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 488 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 487 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 486 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 485 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 484 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 483 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 482 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 481 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b62
+ let 'count += 1'
+ let 'processes_hosts[39] += 1'
+ let 'total_proc -= 1'
+ [[ 480 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 480 -gt 0 ']'
+ '[' 40 -ge 50 ']'
+ current_hostname=s08r2b63
+ [[ 480 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 479 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 478 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 477 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 476 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 475 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 474 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 473 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 472 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 471 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 470 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 469 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 468 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 467 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 466 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 465 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 464 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 463 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 462 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 461 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 460 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 459 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 458 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 457 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 456 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 455 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 454 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 453 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 452 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 451 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 450 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 449 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 448 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 447 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 446 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 445 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 444 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 443 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 442 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 441 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 440 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 439 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 438 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 437 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 436 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 435 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 434 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 433 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b63
+ let 'count += 1'
+ let 'processes_hosts[40] += 1'
+ let 'total_proc -= 1'
+ [[ 432 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 432 -gt 0 ']'
+ '[' 41 -ge 50 ']'
+ current_hostname=s08r2b64
+ [[ 432 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 431 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 430 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 429 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 428 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 427 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 426 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 425 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 424 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 423 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 422 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 421 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 420 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 419 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 418 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 417 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 416 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 415 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 414 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 413 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 412 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 411 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 410 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 409 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 408 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 407 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 406 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 405 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 404 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 403 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 402 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 401 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 400 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 399 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 398 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 397 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 396 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 395 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 394 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 393 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 392 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 391 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 390 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 389 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 388 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 387 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 386 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 385 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b64
+ let 'count += 1'
+ let 'processes_hosts[41] += 1'
+ let 'total_proc -= 1'
+ [[ 384 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 384 -gt 0 ']'
+ '[' 42 -ge 50 ']'
+ current_hostname=s08r2b65
+ [[ 384 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 383 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 382 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 381 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 380 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 379 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 378 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 377 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 376 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 375 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 374 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 373 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 372 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 371 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 370 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 369 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 368 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 367 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 366 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 365 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 364 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 363 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 362 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 361 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 360 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 359 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 358 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 357 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 356 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 355 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 354 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 353 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 352 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 351 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 350 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 349 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 348 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 347 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 346 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 345 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 344 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 343 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 342 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 341 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 340 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 339 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 338 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 337 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b65
+ let 'count += 1'
+ let 'processes_hosts[42] += 1'
+ let 'total_proc -= 1'
+ [[ 336 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 336 -gt 0 ']'
+ '[' 43 -ge 50 ']'
+ current_hostname=s08r2b66
+ [[ 336 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 335 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 334 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 333 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 332 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 331 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 330 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 329 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 328 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 327 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 326 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 325 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 324 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 323 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 322 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 321 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 320 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 319 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 318 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 317 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 316 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 315 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 314 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 313 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 312 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 311 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 310 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 309 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 308 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 307 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 306 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 305 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 304 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 303 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 302 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 301 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 300 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 299 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 298 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 297 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 296 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 295 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 294 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 293 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 292 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 291 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 290 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 289 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b66
+ let 'count += 1'
+ let 'processes_hosts[43] += 1'
+ let 'total_proc -= 1'
+ [[ 288 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 288 -gt 0 ']'
+ '[' 44 -ge 50 ']'
+ current_hostname=s08r2b67
+ [[ 288 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 287 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 286 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 285 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 284 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 283 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 282 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 281 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 280 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 279 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 278 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 277 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 276 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 275 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 274 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 273 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 272 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 271 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 270 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 269 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 268 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 267 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 266 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 265 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 264 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 263 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 262 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 261 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 260 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 259 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 258 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 257 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 256 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 255 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 254 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 253 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 252 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 251 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 250 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 249 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 248 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 247 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 246 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 245 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 244 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 243 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 242 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 241 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b67
+ let 'count += 1'
+ let 'processes_hosts[44] += 1'
+ let 'total_proc -= 1'
+ [[ 240 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 240 -gt 0 ']'
+ '[' 45 -ge 50 ']'
+ current_hostname=s08r2b68
+ [[ 240 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 239 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 238 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 237 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 236 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 235 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 234 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 233 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 232 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 231 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 230 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 229 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 228 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 227 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 226 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 225 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 224 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 223 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 222 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 221 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 220 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 219 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 218 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 217 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 216 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 215 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 214 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 213 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 212 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 211 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 210 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 209 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 208 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 207 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 206 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 205 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 204 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 203 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 202 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 201 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 200 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 199 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 198 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 197 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 196 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 195 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 194 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 193 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b68
+ let 'count += 1'
+ let 'processes_hosts[45] += 1'
+ let 'total_proc -= 1'
+ [[ 192 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 192 -gt 0 ']'
+ '[' 46 -ge 50 ']'
+ current_hostname=s08r2b69
+ [[ 192 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 191 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 190 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 189 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 188 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 187 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 186 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 185 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 184 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 183 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 182 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 181 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 180 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 179 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 178 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 177 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 176 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 175 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 174 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 173 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 172 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 171 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 170 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 169 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 168 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 167 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 166 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 165 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 164 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 163 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 162 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 161 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 160 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 159 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 158 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 157 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 156 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 155 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 154 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 153 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 152 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 151 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 150 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 149 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 148 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 147 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 146 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 145 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b69
+ let 'count += 1'
+ let 'processes_hosts[46] += 1'
+ let 'total_proc -= 1'
+ [[ 144 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 144 -gt 0 ']'
+ '[' 47 -ge 50 ']'
+ current_hostname=s08r2b70
+ [[ 144 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 143 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 142 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 141 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 140 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 139 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 138 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 137 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 136 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 135 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 134 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 133 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 132 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 131 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 130 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 129 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 128 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 127 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 126 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 125 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 124 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 123 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 122 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 121 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 120 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 119 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 118 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 117 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 116 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 115 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 114 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 113 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 112 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 111 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 110 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 109 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 108 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 107 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 106 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 105 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 104 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 103 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 102 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 101 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 100 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 99 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 98 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 97 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b70
+ let 'count += 1'
+ let 'processes_hosts[47] += 1'
+ let 'total_proc -= 1'
+ [[ 96 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 96 -gt 0 ']'
+ '[' 48 -ge 50 ']'
+ current_hostname=s08r2b71
+ [[ 96 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 95 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 94 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 93 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 92 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 91 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 90 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 89 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 88 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 87 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 86 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 85 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 84 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 83 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 82 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 81 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 80 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 79 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 78 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 77 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 76 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 75 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 74 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 73 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 72 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 71 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 70 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 69 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 68 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 67 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 66 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 65 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 64 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 63 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 62 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 61 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 60 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 59 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 58 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 57 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 56 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 55 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 54 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 53 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 52 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 51 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 50 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 49 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b71
+ let 'count += 1'
+ let 'processes_hosts[48] += 1'
+ let 'total_proc -= 1'
+ [[ 48 -gt 0 ]]
+ [[ 48 -lt 48 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 48 -gt 0 ']'
+ '[' 49 -ge 50 ']'
+ current_hostname=s08r2b72
+ [[ 48 -gt 0 ]]
+ [[ 0 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 47 -gt 0 ]]
+ [[ 1 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 46 -gt 0 ]]
+ [[ 2 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 45 -gt 0 ]]
+ [[ 3 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 44 -gt 0 ]]
+ [[ 4 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 43 -gt 0 ]]
+ [[ 5 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 42 -gt 0 ]]
+ [[ 6 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 41 -gt 0 ]]
+ [[ 7 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 40 -gt 0 ]]
+ [[ 8 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 39 -gt 0 ]]
+ [[ 9 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 38 -gt 0 ]]
+ [[ 10 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 37 -gt 0 ]]
+ [[ 11 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 36 -gt 0 ]]
+ [[ 12 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 35 -gt 0 ]]
+ [[ 13 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 34 -gt 0 ]]
+ [[ 14 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 33 -gt 0 ]]
+ [[ 15 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 32 -gt 0 ]]
+ [[ 16 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 31 -gt 0 ]]
+ [[ 17 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 30 -gt 0 ]]
+ [[ 18 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 29 -gt 0 ]]
+ [[ 19 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 28 -gt 0 ]]
+ [[ 20 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 27 -gt 0 ]]
+ [[ 21 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 26 -gt 0 ]]
+ [[ 22 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 25 -gt 0 ]]
+ [[ 23 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 24 -gt 0 ]]
+ [[ 24 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 23 -gt 0 ]]
+ [[ 25 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 22 -gt 0 ]]
+ [[ 26 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 21 -gt 0 ]]
+ [[ 27 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 20 -gt 0 ]]
+ [[ 28 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 19 -gt 0 ]]
+ [[ 29 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 18 -gt 0 ]]
+ [[ 30 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 17 -gt 0 ]]
+ [[ 31 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 16 -gt 0 ]]
+ [[ 32 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 15 -gt 0 ]]
+ [[ 33 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 14 -gt 0 ]]
+ [[ 34 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 13 -gt 0 ]]
+ [[ 35 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 12 -gt 0 ]]
+ [[ 36 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 11 -gt 0 ]]
+ [[ 37 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 10 -gt 0 ]]
+ [[ 38 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 9 -gt 0 ]]
+ [[ 39 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 8 -gt 0 ]]
+ [[ 40 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 7 -gt 0 ]]
+ [[ 41 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 6 -gt 0 ]]
+ [[ 42 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 5 -gt 0 ]]
+ [[ 43 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 4 -gt 0 ]]
+ [[ 44 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 3 -gt 0 ]]
+ [[ 45 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 2 -gt 0 ]]
+ [[ 46 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ [[ 1 -gt 0 ]]
+ [[ 47 -lt 48 ]]
+ echo s08r2b72
+ let 'count += 1'
+ let 'processes_hosts[49] += 1'
+ let 'total_proc -= 1'
+ true
+ [[ 0 -gt 0 ]]
+ '[' 48 -eq 48 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 0 -gt 0 ']'
+ for component in '${components[@]}'
+ binary=nem_exe_file
+ exclusive=nem_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ '[' ./nemo.exe = ./ifsmaster-ecconf ']'
+ for component in '${components[@]}'
+ binary=xio_exe_file
+ exclusive=xio_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ '[' ./xios_server.exe = ./ifsmaster-ecconf ']'
+ for component in '${components[@]}'
+ binary=rnf_exe_file
+ exclusive=rnf_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ '[' ./runoff-mapper.exe = ./ifsmaster-ecconf ']'
+ for component in '${components[@]}'
+ binary=amip_exe_file
+ exclusive=amip_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/amip-forcing/bin/amip-forcing.exe
+ '[' ./amip-forcing.exe = ./ifsmaster-ecconf ']'
+ for component in '${components[@]}'
+ binary=lpjg_exe_file
+ exclusive=lpjg_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/lpjg/build/guess_T511
+ '[' ./guess_T511 = ./ifsmaster-ecconf ']'
+ shift
+ shift
+ cmd+=' -np 912 ./ifsmaster-ecconf'
+ ((  7  ))
+ '[' -v '!=' -- ']'
+ cmd+=' -v'
+ shift
+ ((  6  ))
+ '[' ecmwf '!=' -- ']'
+ cmd+=' ecmwf'
+ shift
+ ((  5  ))
+ '[' -e '!=' -- ']'
+ cmd+=' -e'
+ shift
+ ((  4  ))
+ '[' t0ni '!=' -- ']'
+ cmd+=' t0ni'
+ shift
+ ((  3  ))
+ '[' -- '!=' -- ']'
+ shift
+ ((  2  ))
+ cmd+=' :'
+ ((  2  ))
+ nranks=1
basename $2
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ executable=./runoff-mapper.exe
+ '[' true = true ']'
+ machinefile_add ./runoff-mapper.exe 1
+ total_proc=1
+ for component in '${components[@]}'
+ binary=ifs_exe_file
+ exclusive=ifs_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/ifs-36r4/bin/ifsmaster-ecconf
+ '[' ./ifsmaster-ecconf = ./runoff-mapper.exe ']'
+ for component in '${components[@]}'
+ binary=nem_exe_file
+ exclusive=nem_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/nemo-3.6/CONFIG/ORCA025L75_LIM3/BLD/bin/nemo.exe
+ '[' ./nemo.exe = ./runoff-mapper.exe ']'
+ for component in '${components[@]}'
+ binary=xio_exe_file
+ exclusive=xio_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/xios-2.5/bin/xios_server.exe
+ '[' ./xios_server.exe = ./runoff-mapper.exe ']'
+ for component in '${components[@]}'
+ binary=rnf_exe_file
+ exclusive=rnf_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/runoff-mapper/bin/runoff-mapper.exe
+ '[' ./runoff-mapper.exe = ./runoff-mapper.exe ']'
+ ppn=rnf_ppn
+ [[ FALSE == \T\R\U\E ]]
+ current_hostid=0
+ machinefile_find_available_node
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 1 -gt 0 ']'
+ '[' 1 -ge 50 ']'
+ current_hostname=s01r2b26
+ [[ 1 -gt 0 ]]
+ [[ 0 -lt 1 ]]
+ echo s01r2b26
+ let 'count += 1'
+ let 'processes_hosts[1] += 1'
+ let 'total_proc -= 1'
+ true
+ [[ 0 -gt 0 ]]
+ '[' 1 -eq 1 ']'
+ let 'current_hostid += 1'
+ machinefile_find_available_node
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 49 -gt 48 ']'
+ let 'current_hostid += 1'
+ '[' 48 -gt 48 ']'
+ count=0
+ '[' 0 -gt 0 ']'
+ for component in '${components[@]}'
+ binary=amip_exe_file
+ exclusive=amip_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/amip-forcing/bin/amip-forcing.exe
+ '[' ./amip-forcing.exe = ./runoff-mapper.exe ']'
+ for component in '${components[@]}'
+ binary=lpjg_exe_file
+ exclusive=lpjg_exc
basename ${!binary}
++ basename /gpfs/scratch/bsc32/bsc32627/t0ni/auto-ecearth3/sources/sources/lpjg/build/guess_T511
+ '[' ./guess_T511 = ./runoff-mapper.exe ']'
+ shift
+ shift
+ cmd+=' -np 1 ./runoff-mapper.exe'
+ ((  0  ))
+ shift
+ true
+ ((  0  ))
+ ((  0  ))
+ mpirun -machinefile machinefile -np 95 ./xios_server.exe : -np 1391 ./nemo.exe : -np 912 ./ifsmaster-ecconf -v ecmwf -e t0ni : -np 1 ./runoff-mapper.exe
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
(oasis_init_comp): Calling MPI_Init
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
  IMYTID,INUMTIDS=           1           1
>>>ignore_signals(): DR_HOOK will ignore signal#1 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#2 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#3 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#4 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#5 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#6 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#7 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#8 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#9 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#10 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#11 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#12 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#13 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#14 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#15 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#16 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#17 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#18 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#19 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#20 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#21 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#22 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#23 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#24 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#25 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#26 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#27 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#28 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#29 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#30 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#31 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#32 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#33 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#34 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#35 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#36 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#37 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#38 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#39 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#40 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#41 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#42 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#43 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#44 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#45 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#46 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#47 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#48 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#49 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#50 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#51 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#52 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#53 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#54 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#55 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#56 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#57 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#58 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#59 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#60 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#61 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#62 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#63 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#64 altogether
>>>ignore_signals(): DR_HOOK will ignore signal#65 altogether
  07:47:29 STEP        0 H=        0:00 +CPU=  6.361
  07:47:29 STEP        1 H=        0:15 +CPU=  0.464
  07:47:29 STEP        2 H=        0:30 +CPU=  0.473
  07:49:13 STEP        3 H=        0:45 +CPU=103.283
  07:49:14 STEP        4 H=        1:00 +CPU=  0.755
  07:49:14 STEP        5 H=        1:15 +CPU=  0.474
  07:49:15 STEP        6 H=        1:30 +CPU=  0.772
  07:49:16 STEP        7 H=        1:45 +CPU=  0.467
  07:49:16 STEP        8 H=        2:00 +CPU=  0.760
  07:49:17 STEP        9 H=        2:15 +CPU=  0.739
  07:49:18 STEP       10 H=        2:30 +CPU=  0.462
  07:49:18 STEP       11 H=        2:45 +CPU=  0.473
  07:49:19 STEP       12 H=        3:00 +CPU=  1.293
  07:49:20 STEP       13 H=        3:15 +CPU=  0.460
  07:49:20 STEP       14 H=        3:30 +CPU=  0.467
  07:49:21 STEP       15 H=        3:45 +CPU=  0.747
  07:49:22 STEP       16 H=        4:00 +CPU=  0.747
  07:49:22 STEP       17 H=        4:15 +CPU=  0.473
  07:49:23 STEP       18 H=        4:30 +CPU=  0.796
  07:49:23 STEP       19 H=        4:45 +CPU=  0.463
  07:49:24 STEP       20 H=        5:00 +CPU=  0.752
  07:49:25 STEP       21 H=        5:15 +CPU=  0.760
  07:49:26 STEP       22 H=        5:30 +CPU=  0.603
  07:49:26 STEP       23 H=        5:45 +CPU=  0.473
  07:49:28 STEP       24 H=        6:00 +CPU=  1.383
  07:49:28 STEP       25 H=        6:15 +CPU=  0.465
  07:49:29 STEP       26 H=        6:30 +CPU=  0.470
  07:49:29 STEP       27 H=        6:45 +CPU=  0.467
  07:49:30 STEP       28 H=        7:00 +CPU=  0.752
  07:49:30 STEP       29 H=        7:15 +CPU=  0.472
  07:49:31 STEP       30 H=        7:30 +CPU=  0.899
  07:49:32 STEP       31 H=        7:45 +CPU=  0.468
  07:49:32 STEP       32 H=        8:00 +CPU=  0.757
  07:49:33 STEP       33 H=        8:15 +CPU=  0.751
  07:49:34 STEP       34 H=        8:30 +CPU=  0.465
  07:49:34 STEP       35 H=        8:45 +CPU=  0.479
  07:49:35 STEP       36 H=        9:00 +CPU=  1.291
  07:49:36 STEP       37 H=        9:15 +CPU=  0.470
  07:49:36 STEP       38 H=        9:30 +CPU=  0.475
  07:49:37 STEP       39 H=        9:45 +CPU=  0.732
  07:49:38 STEP       40 H=       10:00 +CPU=  0.757
  07:49:38 STEP       41 H=       10:15 +CPU=  0.474
  07:49:39 STEP       42 H=       10:30 +CPU=  0.780
  07:49:40 STEP       43 H=       10:45 +CPU=  0.634
  07:49:41 STEP       44 H=       11:00 +CPU=  0.761
  07:49:41 STEP       45 H=       11:15 +CPU=  0.738
  07:49:42 STEP       46 H=       11:30 +CPU=  0.470
  07:49:42 STEP       47 H=       11:45 +CPU=  0.475
  07:49:44 STEP       48 H=       12:00 +CPU=  1.502
  07:49:45 STEP       49 H=       12:15 +CPU=  0.475
  07:49:45 STEP       50 H=       12:30 +CPU=  0.480
  07:49:46 STEP       51 H=       12:45 +CPU=  0.478
  07:49:46 STEP       52 H=       13:00 +CPU=  0.777
  07:49:47 STEP       53 H=       13:15 +CPU=  0.647
  07:49:48 STEP       54 H=       13:30 +CPU=  0.780
  07:49:48 STEP       55 H=       13:45 +CPU=  0.484
  07:49:49 STEP       56 H=       14:00 +CPU=  0.776
  07:49:50 STEP       57 H=       14:15 +CPU=  0.754
  07:49:50 STEP       58 H=       14:30 +CPU=  0.483
  07:49:51 STEP       59 H=       14:45 +CPU=  0.484
  07:49:52 STEP       60 H=       15:00 +CPU=  1.389
  07:49:53 STEP       61 H=       15:15 +CPU=  0.477
  07:49:53 STEP       62 H=       15:30 +CPU=  0.478
  07:49:54 STEP       63 H=       15:45 +CPU=  0.827
  07:49:55 STEP       64 H=       16:00 +CPU=  0.762
  07:49:55 STEP       65 H=       16:15 +CPU=  0.485
  07:49:56 STEP       66 H=       16:30 +CPU=  0.766
  07:49:56 STEP       67 H=       16:45 +CPU=  0.474
  07:49:57 STEP       68 H=       17:00 +CPU=  0.763
  07:49:58 STEP       69 H=       17:15 +CPU=  0.781
  07:49:58 STEP       70 H=       17:30 +CPU=  0.469
  07:49:59 STEP       71 H=       17:45 +CPU=  0.478
  07:50:01 STEP       72 H=       18:00 +CPU=  1.508
  07:50:01 STEP       73 H=       18:15 +CPU=  0.466
  07:50:02 STEP       74 H=       18:30 +CPU=  0.476
  07:50:02 STEP       75 H=       18:45 +CPU=  0.465
  07:50:03 STEP       76 H=       19:00 +CPU=  0.751
  07:50:03 STEP       77 H=       19:15 +CPU=  0.473
  07:50:04 STEP       78 H=       19:30 +CPU=  0.889
  07:50:05 STEP       79 H=       19:45 +CPU=  0.468
  07:50:06 STEP       80 H=       20:00 +CPU=  0.937
  07:50:06 STEP       81 H=       20:15 +CPU=  0.572
  07:50:07 STEP       82 H=       20:30 +CPU=  0.467
  07:50:07 STEP       83 H=       20:45 +CPU=  0.516
  07:50:09 STEP       84 H=       21:00 +CPU=  1.415
  07:50:09 STEP       85 H=       21:15 +CPU=  0.469
  07:50:10 STEP       86 H=       21:30 +CPU=  0.624
  07:50:11 STEP       87 H=       21:45 +CPU=  0.822
  07:50:11 STEP       88 H=       22:00 +CPU=  0.772
  07:50:12 STEP       89 H=       22:15 +CPU=  0.469
  07:50:13 STEP       90 H=       22:30 +CPU=  0.805
  07:50:13 STEP       91 H=       22:45 +CPU=  0.477
  07:50:14 STEP       92 H=       23:00 +CPU=  0.910
  07:50:15 STEP       93 H=       23:15 +CPU=  0.631
  07:50:15 STEP       94 H=       23:30 +CPU=  0.464
  07:50:16 STEP       95 H=       23:45 +CPU=  0.472
  07:50:17 STEP       96 H=       24:00 +CPU=  1.510
  07:50:18 STEP       97 H=       24:15 +CPU=  0.458
  07:50:18 STEP       98 H=       24:30 +CPU=  0.467
  07:50:19 STEP       99 H=       24:45 +CPU=  0.470
  07:50:19 STEP      100 H=       25:00 +CPU=  0.748
  07:50:20 STEP      101 H=       25:15 +CPU=  0.470
  07:50:21 STEP      102 H=       25:30 +CPU=  0.900
  07:50:21 STEP      103 H=       25:45 +CPU=  0.468
  07:50:22 STEP      104 H=       26:00 +CPU=  0.757
  07:50:23 STEP      105 H=       26:15 +CPU=  0.818
  07:50:23 STEP      106 H=       26:30 +CPU=  0.461
  07:50:24 STEP      107 H=       26:45 +CPU=  0.473
  07:50:25 STEP      108 H=       27:00 +CPU=  1.342
  07:50:25 STEP      109 H=       27:15 +CPU=  0.467
  07:50:26 STEP      110 H=       27:30 +CPU=  0.472
  07:50:27 STEP      111 H=       27:45 +CPU=  0.787
  07:50:27 STEP      112 H=       28:00 +CPU=  0.753
  07:50:28 STEP      113 H=       28:15 +CPU=  0.631
  07:50:29 STEP      114 H=       28:30 +CPU=  0.643
  07:50:29 STEP      115 H=       28:45 +CPU=  0.465
  07:50:30 STEP      116 H=       29:00 +CPU=  0.756
  07:50:31 STEP      117 H=       29:15 +CPU=  0.752
  07:50:31 STEP      118 H=       29:30 +CPU=  0.465
  07:50:32 STEP      119 H=       29:45 +CPU=  0.611
  07:50:33 STEP      120 H=       30:00 +CPU=  1.405
  07:50:34 STEP      121 H=       30:15 +CPU=  0.465
  07:50:34 STEP      122 H=       30:30 +CPU=  0.467
  07:50:35 STEP      123 H=       30:45 +CPU=  0.463
  07:50:36 STEP      124 H=       31:00 +CPU=  0.746
  07:50:36 STEP      125 H=       31:15 +CPU=  0.476
  07:50:37 STEP      126 H=       31:30 +CPU=  0.932
  07:50:37 STEP      127 H=       31:45 +CPU=  0.465
  07:50:38 STEP      128 H=       32:00 +CPU=  0.752
  07:50:39 STEP      129 H=       32:15 +CPU=  0.792
  07:50:40 STEP      130 H=       32:30 +CPU=  0.616
  07:50:40 STEP      131 H=       32:45 +CPU=  0.472
  07:50:41 STEP      132 H=       33:00 +CPU=  1.362
  07:50:42 STEP      133 H=       33:15 +CPU=  0.467
  07:50:42 STEP      134 H=       33:30 +CPU=  0.474
  07:50:43 STEP      135 H=       33:45 +CPU=  0.740
  07:50:44 STEP      136 H=       34:00 +CPU=  0.754
  07:50:44 STEP      137 H=       34:15 +CPU=  0.473
  07:50:45 STEP      138 H=       34:30 +CPU=  0.743
  07:50:46 STEP      139 H=       34:45 +CPU=  0.473
  07:50:46 STEP      140 H=       35:00 +CPU=  0.757
  07:50:47 STEP      141 H=       35:15 +CPU=  0.763
  07:50:48 STEP      142 H=       35:30 +CPU=  0.476
  07:50:48 STEP      143 H=       35:45 +CPU=  0.478
  07:50:50 STEP      144 H=       36:00 +CPU=  1.513
  07:50:50 STEP      145 H=       36:15 +CPU=  0.470
  07:50:51 STEP      146 H=       36:30 +CPU=  0.633
  07:50:51 STEP      147 H=       36:45 +CPU=  0.474
  07:50:52 STEP      148 H=       37:00 +CPU=  0.767
  07:50:52 STEP      149 H=       37:15 +CPU=  0.489
  07:50:53 STEP      150 H=       37:30 +CPU=  0.987
  07:50:54 STEP      151 H=       37:45 +CPU=  0.623
  07:50:55 STEP      152 H=       38:00 +CPU=  0.777
  07:50:55 STEP      153 H=       38:15 +CPU=  0.570
  07:50:56 STEP      154 H=       38:30 +CPU=  0.488
  07:50:56 STEP      155 H=       38:45 +CPU=  0.489
  07:50:58 STEP      156 H=       39:00 +CPU=  1.394
  07:50:58 STEP      157 H=       39:15 +CPU=  0.485
  07:50:59 STEP      158 H=       39:30 +CPU=  0.490
  07:51:00 STEP      159 H=       39:45 +CPU=  0.729
  07:51:00 STEP      160 H=       40:00 +CPU=  0.762
  07:51:01 STEP      161 H=       40:15 +CPU=  0.625
  07:51:01 STEP      162 H=       40:30 +CPU=  0.563
  07:51:02 STEP      163 H=       40:45 +CPU=  0.478
  07:51:03 STEP      164 H=       41:00 +CPU=  0.767
  07:51:04 STEP      165 H=       41:15 +CPU=  0.801
  07:51:04 STEP      166 H=       41:30 +CPU=  0.470
  07:51:04 STEP      167 H=       41:45 +CPU=  0.473
  07:51:07 STEP      168 H=       42:00 +CPU=  1.516
  07:51:07 STEP      169 H=       42:15 +CPU=  0.498
  07:51:08 STEP      170 H=       42:30 +CPU=  0.478
  07:51:08 STEP      171 H=       42:45 +CPU=  0.473
  07:51:09 STEP      172 H=       43:00 +CPU=  0.774
  07:51:10 STEP      173 H=       43:15 +CPU=  0.780
  07:51:10 STEP      174 H=       43:30 +CPU=  0.857
  07:51:11 STEP      175 H=       43:45 +CPU=  0.470
  07:51:12 STEP      176 H=       44:00 +CPU=  0.747
  07:51:13 STEP      177 H=       44:15 +CPU=  0.858
  07:51:13 STEP      178 H=       44:30 +CPU=  0.633
  07:51:14 STEP      179 H=       44:45 +CPU=  0.475
  07:51:15 STEP      180 H=       45:00 +CPU=  1.208
  07:51:15 STEP      181 H=       45:15 +CPU=  0.470
  07:51:16 STEP      182 H=       45:30 +CPU=  0.476
  07:51:17 STEP      183 H=       45:45 +CPU=  0.739
  07:51:17 STEP      184 H=       46:00 +CPU=  0.745
  07:51:18 STEP      185 H=       46:15 +CPU=  0.473
  07:51:19 STEP      186 H=       46:30 +CPU=  0.754
  07:51:19 STEP      187 H=       46:45 +CPU=  0.471
  07:51:20 STEP      188 H=       47:00 +CPU=  0.759
  07:51:21 STEP      189 H=       47:15 +CPU=  0.740
  07:51:21 STEP      190 H=       47:30 +CPU=  0.469
  07:51:21 STEP      191 H=       47:45 +CPU=  0.473
  07:51:23 STEP      192 H=       48:00 +CPU=  1.587
  07:51:24 STEP      193 H=       48:15 +CPU=  0.466
  07:51:24 STEP      194 H=       48:30 +CPU=  0.475
  07:51:25 STEP      195 H=       48:45 +CPU=  0.468
  07:51:25 STEP      196 H=       49:00 +CPU=  0.756
  07:51:26 STEP      197 H=       49:15 +CPU=  0.473
  07:51:27 STEP      198 H=       49:30 +CPU=  0.958
  07:51:27 STEP      199 H=       49:45 +CPU=  0.472
  07:51:28 STEP      200 H=       50:00 +CPU=  0.756
  07:51:29 STEP      201 H=       50:15 +CPU=  0.764
  07:51:29 STEP      202 H=       50:30 +CPU=  0.466
  07:51:30 STEP      203 H=       50:45 +CPU=  0.475
  07:51:31 STEP      204 H=       51:00 +CPU=  1.324
  07:51:32 STEP      205 H=       51:15 +CPU=  0.468
  07:51:32 STEP      206 H=       51:30 +CPU=  0.477
  07:51:33 STEP      207 H=       51:45 +CPU=  0.770
  07:51:34 STEP      208 H=       52:00 +CPU=  0.749
  07:51:34 STEP      209 H=       52:15 +CPU=  0.475
  07:51:35 STEP      210 H=       52:30 +CPU=  0.762
  07:51:35 STEP      211 H=       52:45 +CPU=  0.466
  07:51:36 STEP      212 H=       53:00 +CPU=  0.755
  07:51:37 STEP      213 H=       53:15 +CPU=  0.754
  07:51:37 STEP      214 H=       53:30 +CPU=  0.470
  07:51:38 STEP      215 H=       53:45 +CPU=  0.462
  07:51:40 STEP      216 H=       54:00 +CPU=  1.695
  07:51:40 STEP      217 H=       54:15 +CPU=  0.469
  07:51:41 STEP      218 H=       54:30 +CPU=  0.472
  07:51:41 STEP      219 H=       54:45 +CPU=  0.478
  07:51:42 STEP      220 H=       55:00 +CPU=  0.751
  07:51:42 STEP      221 H=       55:15 +CPU=  0.475
  07:51:43 STEP      222 H=       55:30 +CPU=  0.896
  07:51:44 STEP      223 H=       55:45 +CPU=  0.471
  07:51:44 STEP      224 H=       56:00 +CPU=  0.759
  07:51:45 STEP      225 H=       56:15 +CPU=  0.735
  07:51:46 STEP      226 H=       56:30 +CPU=  0.472
  07:51:46 STEP      227 H=       56:45 +CPU=  0.476
  07:51:47 STEP      228 H=       57:00 +CPU=  1.315
  07:51:48 STEP      229 H=       57:15 +CPU=  0.613
  07:51:48 STEP      230 H=       57:30 +CPU=  0.478
  07:51:49 STEP      231 H=       57:45 +CPU=  0.594
  07:51:50 STEP      232 H=       58:00 +CPU=  0.753
  07:51:50 STEP      233 H=       58:15 +CPU=  0.474
  07:51:51 STEP      234 H=       58:30 +CPU=  0.845
  07:51:52 STEP      235 H=       58:45 +CPU=  0.469
  07:51:52 STEP      236 H=       59:00 +CPU=  0.761
  07:51:53 STEP      237 H=       59:15 +CPU=  0.888
  07:51:54 STEP      238 H=       59:30 +CPU=  0.471
  07:51:54 STEP      239 H=       59:45 +CPU=  0.477
  07:51:56 STEP      240 H=       60:00 +CPU=  1.483
  07:51:56 STEP      241 H=       60:15 +CPU=  0.469
  07:51:57 STEP      242 H=       60:30 +CPU=  0.475
  07:51:57 STEP      243 H=       60:45 +CPU=  0.469
  07:51:58 STEP      244 H=       61:00 +CPU=  0.754
  07:51:58 STEP      245 H=       61:15 +CPU=  0.479
  07:51:59 STEP      246 H=       61:30 +CPU=  0.927
  07:52:00 STEP      247 H=       61:45 +CPU=  0.477
  07:52:01 STEP      248 H=       62:00 +CPU=  0.924
  07:52:01 STEP      249 H=       62:15 +CPU=  0.574
  07:52:02 STEP      250 H=       62:30 +CPU=  0.486
  07:52:02 STEP      251 H=       62:45 +CPU=  0.489
  07:52:04 STEP      252 H=       63:00 +CPU=  1.346
  07:52:04 STEP      253 H=       63:15 +CPU=  0.485
  07:52:05 STEP      254 H=       63:30 +CPU=  0.492
  07:52:05 STEP      255 H=       63:45 +CPU=  0.723
  07:52:06 STEP      256 H=       64:00 +CPU=  0.768
  07:52:07 STEP      257 H=       64:15 +CPU=  0.488
  07:52:07 STEP      258 H=       64:30 +CPU=  0.675
  07:52:08 STEP      259 H=       64:45 +CPU=  0.477
  07:52:09 STEP      260 H=       65:00 +CPU=  0.802
  07:52:10 STEP      261 H=       65:15 +CPU=  0.924
  07:52:10 STEP      262 H=       65:30 +CPU=  0.485
  07:52:11 STEP      263 H=       65:45 +CPU=  0.483
  07:52:12 STEP      264 H=       66:00 +CPU=  1.697
  07:52:13 STEP      265 H=       66:15 +CPU=  0.477
  07:52:13 STEP      266 H=       66:30 +CPU=  0.633
  07:52:14 STEP      267 H=       66:45 +CPU=  0.477
  07:52:15 STEP      268 H=       67:00 +CPU=  0.763
  07:52:15 STEP      269 H=       67:15 +CPU=  0.476
  07:52:16 STEP      270 H=       67:30 +CPU=  0.929
  07:52:17 STEP      271 H=       67:45 +CPU=  0.469
  07:52:17 STEP      272 H=       68:00 +CPU=  0.755
  07:52:18 STEP      273 H=       68:15 +CPU=  0.751
  07:52:19 STEP      274 H=       68:30 +CPU=  0.467
  07:52:19 STEP      275 H=       68:45 +CPU=  0.474
  07:52:20 STEP      276 H=       69:00 +CPU=  1.405
  07:52:21 STEP      277 H=       69:15 +CPU=  0.472
  07:52:21 STEP      278 H=       69:30 +CPU=  0.474
  07:52:22 STEP      279 H=       69:45 +CPU=  0.813
  07:52:23 STEP      280 H=       70:00 +CPU=  0.753
  07:52:23 STEP      281 H=       70:15 +CPU=  0.466
  07:52:24 STEP      282 H=       70:30 +CPU=  0.767
  07:52:25 STEP      283 H=       70:45 +CPU=  0.468
  07:52:25 STEP      284 H=       71:00 +CPU=  0.753
  07:52:26 STEP      285 H=       71:15 +CPU=  0.803
  07:52:27 STEP      286 H=       71:30 +CPU=  0.470
  07:52:27 STEP      287 H=       71:45 +CPU=  0.476
  07:52:29 STEP      288 H=       72:00 +CPU=  1.499
  07:52:29 STEP      289 H=       72:15 +CPU=  0.470
  07:52:30 STEP      290 H=       72:30 +CPU=  0.473
  07:52:30 STEP      291 H=       72:45 +CPU=  0.486
  07:52:31 STEP      292 H=       73:00 +CPU=  0.755
  07:52:31 STEP      293 H=       73:15 +CPU=  0.487
  07:52:32 STEP      294 H=       73:30 +CPU=  0.876
  07:52:33 STEP      295 H=       73:45 +CPU=  0.470
  07:52:34 STEP      296 H=       74:00 +CPU=  0.760
  07:52:34 STEP      297 H=       74:15 +CPU=  0.744
  07:52:35 STEP      298 H=       74:30 +CPU=  0.474
  07:52:35 STEP      299 H=       74:45 +CPU=  0.479
  07:52:37 STEP      300 H=       75:00 +CPU=  1.332
  07:52:37 STEP      301 H=       75:15 +CPU=  0.473
  07:52:38 STEP      302 H=       75:30 +CPU=  0.475
  07:52:38 STEP      303 H=       75:45 +CPU=  0.760
  07:52:39 STEP      304 H=       76:00 +CPU=  0.755
  07:52:40 STEP      305 H=       76:15 +CPU=  0.648
  07:52:40 STEP      306 H=       76:30 +CPU=  0.746
  07:52:41 STEP      307 H=       76:45 +CPU=  0.471
  07:52:42 STEP      308 H=       77:00 +CPU=  0.765
  07:52:42 STEP      309 H=       77:15 +CPU=  0.718
  07:52:43 STEP      310 H=       77:30 +CPU=  0.475
  07:52:43 STEP      311 H=       77:45 +CPU=  0.477
  07:52:45 STEP      312 H=       78:00 +CPU=  1.490
  07:52:46 STEP      313 H=       78:15 +CPU=  0.472
  07:52:46 STEP      314 H=       78:30 +CPU=  0.484
  07:52:47 STEP      315 H=       78:45 +CPU=  0.475
  07:52:47 STEP      316 H=       79:00 +CPU=  0.759
  07:52:48 STEP      317 H=       79:15 +CPU=  0.484
  07:52:49 STEP      318 H=       79:30 +CPU=  0.879
  07:52:49 STEP      319 H=       79:45 +CPU=  0.483
  07:52:50 STEP      320 H=       80:00 +CPU=  0.768
  07:52:51 STEP      321 H=       80:15 +CPU=  0.742
  07:52:51 STEP      322 H=       80:30 +CPU=  0.481
  07:52:52 STEP      323 H=       80:45 +CPU=  0.483
  07:52:53 STEP      324 H=       81:00 +CPU=  1.477
  07:52:54 STEP      325 H=       81:15 +CPU=  0.470
  07:52:54 STEP      326 H=       81:30 +CPU=  0.483
  07:52:55 STEP      327 H=       81:45 +CPU=  0.715
  07:52:56 STEP      328 H=       82:00 +CPU=  0.760
  07:52:56 STEP      329 H=       82:15 +CPU=  0.494
  07:52:57 STEP      330 H=       82:30 +CPU=  0.735
  07:52:57 STEP      331 H=       82:45 +CPU=  0.479
  07:52:58 STEP      332 H=       83:00 +CPU=  0.764
  07:52:59 STEP      333 H=       83:15 +CPU=  0.751
  07:52:59 STEP      334 H=       83:30 +CPU=  0.476
  07:53:00 STEP      335 H=       83:45 +CPU=  0.480
  07:53:02 STEP      336 H=       84:00 +CPU=  1.466
  07:53:02 STEP      337 H=       84:15 +CPU=  0.472
  07:53:03 STEP      338 H=       84:30 +CPU=  0.481
  07:53:03 STEP      339 H=       84:45 +CPU=  0.474
  07:53:04 STEP      340 H=       85:00 +CPU=  0.764
  07:53:05 STEP      341 H=       85:15 +CPU=  0.638
  07:53:05 STEP      342 H=       85:30 +CPU=  0.734
  07:53:06 STEP      343 H=       85:45 +CPU=  0.477
  07:53:06 STEP      344 H=       86:00 +CPU=  0.770
  07:53:07 STEP      345 H=       86:15 +CPU=  0.712
  07:53:08 STEP      346 H=       86:30 +CPU=  0.486
  07:53:08 STEP      347 H=       86:45 +CPU=  0.490
  07:53:10 STEP      348 H=       87:00 +CPU=  1.520
  07:53:10 STEP      349 H=       87:15 +CPU=  0.509
  07:53:11 STEP      350 H=       87:30 +CPU=  0.660
  07:53:12 STEP      351 H=       87:45 +CPU=  0.633
  07:53:12 STEP      352 H=       88:00 +CPU=  0.774
  07:53:13 STEP      353 H=       88:15 +CPU=  0.629
  07:53:14 STEP      354 H=       88:30 +CPU=  0.628
  07:53:14 STEP      355 H=       88:45 +CPU=  0.515
  07:53:15 STEP      356 H=       89:00 +CPU=  0.760
  07:53:16 STEP      357 H=       89:15 +CPU=  0.738
  07:53:16 STEP      358 H=       89:30 +CPU=  0.469
  07:53:17 STEP      359 H=       89:45 +CPU=  0.474
  07:53:18 STEP      360 H=       90:00 +CPU=  1.501
  07:53:19 STEP      361 H=       90:15 +CPU=  0.472
  07:53:19 STEP      362 H=       90:30 +CPU=  0.480
  07:53:20 STEP      363 H=       90:45 +CPU=  0.467
  07:53:21 STEP      364 H=       91:00 +CPU=  0.757
  07:53:21 STEP      365 H=       91:15 +CPU=  0.478
  07:53:22 STEP      366 H=       91:30 +CPU=  0.974
  07:53:22 STEP      367 H=       91:45 +CPU=  0.472
  07:53:23 STEP      368 H=       92:00 +CPU=  0.761
  07:53:24 STEP      369 H=       92:15 +CPU=  0.759
  07:53:24 STEP      370 H=       92:30 +CPU=  0.470
  07:53:25 STEP      371 H=       92:45 +CPU=  0.472
  07:53:26 STEP      372 H=       93:00 +CPU=  1.339
  07:53:27 STEP      373 H=       93:15 +CPU=  0.467
  07:53:27 STEP      374 H=       93:30 +CPU=  0.472
  07:53:28 STEP      375 H=       93:45 +CPU=  0.758
  07:53:29 STEP      376 H=       94:00 +CPU=  0.750
  07:53:29 STEP      377 H=       94:15 +CPU=  0.610
  07:53:30 STEP      378 H=       94:30 +CPU=  0.631
  07:53:30 STEP      379 H=       94:45 +CPU=  0.468
  07:53:31 STEP      380 H=       95:00 +CPU=  0.761
  07:53:32 STEP      381 H=       95:15 +CPU=  0.758
  07:53:32 STEP      382 H=       95:30 +CPU=  0.466
  07:53:33 STEP      383 H=       95:45 +CPU=  0.472
  07:53:35 STEP      384 H=       96:00 +CPU=  1.550
  07:53:35 STEP      385 H=       96:15 +CPU=  0.467
  07:53:35 STEP      386 H=       96:30 +CPU=  0.473
  07:53:36 STEP      387 H=       96:45 +CPU=  0.495
  07:53:37 STEP      388 H=       97:00 +CPU=  0.752
  07:53:37 STEP      389 H=       97:15 +CPU=  0.483
  07:53:38 STEP      390 H=       97:30 +CPU=  0.903
  07:53:39 STEP      391 H=       97:45 +CPU=  0.471
  07:53:40 STEP      392 H=       98:00 +CPU=  0.937
  07:53:40 STEP      393 H=       98:15 +CPU=  0.790
  07:53:41 STEP      394 H=       98:30 +CPU=  0.471
  07:53:41 STEP      395 H=       98:45 +CPU=  0.491
  07:53:43 STEP      396 H=       99:00 +CPU=  1.276
  07:53:43 STEP      397 H=       99:15 +CPU=  0.474
  07:53:44 STEP      398 H=       99:30 +CPU=  0.490
  07:53:44 STEP      399 H=       99:45 +CPU=  0.731
  07:53:45 STEP      400 H=      100:00 +CPU=  0.758
  07:53:45 STEP      401 H=      100:15 +CPU=  0.479
  07:53:46 STEP      402 H=      100:30 +CPU=  0.751
  07:53:47 STEP      403 H=      100:45 +CPU=  0.473
  07:53:48 STEP      404 H=      101:00 +CPU=  0.915
  07:53:48 STEP      405 H=      101:15 +CPU=  0.592
  07:53:49 STEP      406 H=      101:30 +CPU=  0.479
  07:53:49 STEP      407 H=      101:45 +CPU=  0.623
  07:53:51 STEP      408 H=      102:00 +CPU=  1.455
  07:53:51 STEP      409 H=      102:15 +CPU=  0.475
  07:53:52 STEP      410 H=      102:30 +CPU=  0.485
  07:53:52 STEP      411 H=      102:45 +CPU=  0.497
  07:53:53 STEP      412 H=      103:00 +CPU=  0.761
  07:53:54 STEP      413 H=      103:15 +CPU=  0.476
  07:53:55 STEP      414 H=      103:30 +CPU=  0.915
  07:53:55 STEP      415 H=      103:45 +CPU=  0.476
  07:53:56 STEP      416 H=      104:00 +CPU=  0.770
  07:53:57 STEP      417 H=      104:15 +CPU=  0.777
  07:53:57 STEP      418 H=      104:30 +CPU=  0.480
  07:53:58 STEP      419 H=      104:45 +CPU=  0.485
  07:53:59 STEP      420 H=      105:00 +CPU=  1.552
  07:54:00 STEP      421 H=      105:15 +CPU=  0.478
  07:54:00 STEP      422 H=      105:30 +CPU=  0.484
  07:54:01 STEP      423 H=      105:45 +CPU=  0.712
  07:54:02 STEP      424 H=      106:00 +CPU=  0.760
  07:54:02 STEP      425 H=      106:15 +CPU=  0.485
  07:54:03 STEP      426 H=      106:30 +CPU=  0.706
  07:54:03 STEP      427 H=      106:45 +CPU=  0.477
  07:54:04 STEP      428 H=      107:00 +CPU=  0.775
  07:54:05 STEP      429 H=      107:15 +CPU=  0.681
  07:54:05 STEP      430 H=      107:30 +CPU=  0.480
  07:54:06 STEP      431 H=      107:45 +CPU=  0.651
  07:54:07 STEP      432 H=      108:00 +CPU=  1.341
  07:54:08 STEP      433 H=      108:15 +CPU=  0.470
  07:54:08 STEP      434 H=      108:30 +CPU=  0.484
  07:54:09 STEP      435 H=      108:45 +CPU=  0.502
  07:54:10 STEP      436 H=      109:00 +CPU=  0.900
  07:54:10 STEP      437 H=      109:15 +CPU=  0.481
  07:54:11 STEP      438 H=      109:30 +CPU=  1.018
  07:54:12 STEP      439 H=      109:45 +CPU=  0.484
  07:54:12 STEP      440 H=      110:00 +CPU=  0.768
  07:54:13 STEP      441 H=      110:15 +CPU=  0.723
  07:54:14 STEP      442 H=      110:30 +CPU=  0.477
  07:54:14 STEP      443 H=      110:45 +CPU=  0.495
  07:54:15 STEP      444 H=      111:00 +CPU=  1.335
  07:54:16 STEP      445 H=      111:15 +CPU=  0.474
  07:54:16 STEP      446 H=      111:30 +CPU=  0.483
  07:54:17 STEP      447 H=      111:45 +CPU=  0.716
  07:54:18 STEP      448 H=      112:00 +CPU=  0.757
  07:54:18 STEP      449 H=      112:15 +CPU=  0.484
  07:54:19 STEP      450 H=      112:30 +CPU=  0.728
  07:54:20 STEP      451 H=      112:45 +CPU=  0.475
  07:54:20 STEP      452 H=      113:00 +CPU=  0.770
  07:54:21 STEP      453 H=      113:15 +CPU=  0.746
  07:54:22 STEP      454 H=      113:30 +CPU=  0.477
  07:54:22 STEP      455 H=      113:45 +CPU=  0.478
  07:54:24 STEP      456 H=      114:00 +CPU=  1.563
  07:54:24 STEP      457 H=      114:15 +CPU=  0.475
  07:54:25 STEP      458 H=      114:30 +CPU=  0.482
  07:54:25 STEP      459 H=      114:45 +CPU=  0.470
  07:54:26 STEP      460 H=      115:00 +CPU=  0.756
  07:54:26 STEP      461 H=      115:15 +CPU=  0.476
  07:54:27 STEP      462 H=      115:30 +CPU=  0.947
  07:54:28 STEP      463 H=      115:45 +CPU=  0.469
  07:54:29 STEP      464 H=      116:00 +CPU=  0.916
  07:54:29 STEP      465 H=      116:15 +CPU=  0.612
  07:54:30 STEP      466 H=      116:30 +CPU=  0.469
  07:54:30 STEP      467 H=      116:45 +CPU=  0.478
  07:54:32 STEP      468 H=      117:00 +CPU=  1.326
  07:54:32 STEP      469 H=      117:15 +CPU=  0.470
  07:54:33 STEP      470 H=      117:30 +CPU=  0.473
  07:54:33 STEP      471 H=      117:45 +CPU=  0.775
  07:54:34 STEP      472 H=      118:00 +CPU=  0.754
  07:54:35 STEP      473 H=      118:15 +CPU=  0.475
  07:54:35 STEP      474 H=      118:30 +CPU=  0.783
  07:54:36 STEP      475 H=      118:45 +CPU=  0.467
  07:54:37 STEP      476 H=      119:00 +CPU=  0.758
  07:54:37 STEP      477 H=      119:15 +CPU=  0.764
  07:54:38 STEP      478 H=      119:30 +CPU=  0.468
  07:54:39 STEP      479 H=      119:45 +CPU=  0.636
  07:54:40 STEP      480 H=      120:00 +CPU=  1.421
  07:54:41 STEP      481 H=      120:15 +CPU=  0.471
  07:54:41 STEP      482 H=      120:30 +CPU=  0.479
  07:54:42 STEP      483 H=      120:45 +CPU=  0.468
  07:54:42 STEP      484 H=      121:00 +CPU=  0.759
  07:54:43 STEP      485 H=      121:15 +CPU=  0.476
  07:54:44 STEP      486 H=      121:30 +CPU=  0.914
  07:54:44 STEP      487 H=      121:45 +CPU=  0.471
  07:54:45 STEP      488 H=      122:00 +CPU=  0.772
  07:54:46 STEP      489 H=      122:15 +CPU=  0.738
  07:54:46 STEP      490 H=      122:30 +CPU=  0.472
  07:54:47 STEP      491 H=      122:45 +CPU=  0.478
  07:54:48 STEP      492 H=      123:00 +CPU=  1.347
  07:54:49 STEP      493 H=      123:15 +CPU=  0.475
  07:54:49 STEP      494 H=      123:30 +CPU=  0.484
  07:54:50 STEP      495 H=      123:45 +CPU=  0.734
  07:54:51 STEP      496 H=      124:00 +CPU=  0.763
  07:54:51 STEP      497 H=      124:15 +CPU=  0.479
  07:54:52 STEP      498 H=      124:30 +CPU=  0.803
  07:54:52 STEP      499 H=      124:45 +CPU=  0.471
  07:54:53 STEP      500 H=      125:00 +CPU=  0.763
  07:54:54 STEP      501 H=      125:15 +CPU=  0.816
  07:54:54 STEP      502 H=      125:30 +CPU=  0.470
  07:54:55 STEP      503 H=      125:45 +CPU=  0.629
  07:54:57 STEP      504 H=      126:00 +CPU=  1.347
  07:54:58 STEP      505 H=      126:15 +CPU=  0.465
  07:54:58 STEP      506 H=      126:30 +CPU=  0.471
  07:54:59 STEP      507 H=      126:45 +CPU=  0.470
  07:54:59 STEP      508 H=      127:00 +CPU=  0.752
  07:55:00 STEP      509 H=      127:15 +CPU=  0.468
  07:55:01 STEP      510 H=      127:30 +CPU=  0.890
  07:55:01 STEP      511 H=      127:45 +CPU=  0.474
  07:55:02 STEP      512 H=      128:00 +CPU=  0.753
  07:55:03 STEP      513 H=      128:15 +CPU=  0.712
  07:55:03 STEP      514 H=      128:30 +CPU=  0.466
  07:55:04 STEP      515 H=      128:45 +CPU=  0.494
  07:55:05 STEP      516 H=      129:00 +CPU=  1.282
  07:55:05 STEP      517 H=      129:15 +CPU=  0.463
  07:55:06 STEP      518 H=      129:30 +CPU=  0.466
  07:55:07 STEP      519 H=      129:45 +CPU=  0.765
  07:55:07 STEP      520 H=      130:00 +CPU=  0.765
  07:55:08 STEP      521 H=      130:15 +CPU=  0.466
  07:55:09 STEP      522 H=      130:30 +CPU=  0.839
  07:55:09 STEP      523 H=      130:45 +CPU=  0.468
  07:55:10 STEP      524 H=      131:00 +CPU=  0.725
  07:55:11 STEP      525 H=      131:15 +CPU=  0.904
  07:55:11 STEP      526 H=      131:30 +CPU=  0.589
  07:55:12 STEP      527 H=      131:45 +CPU=  0.633
  07:55:14 STEP      528 H=      132:00 +CPU=  1.246
  07:55:14 STEP      529 H=      132:15 +CPU=  0.473
  07:55:15 STEP      530 H=      132:30 +CPU=  0.510
  07:55:15 STEP      531 H=      132:45 +CPU=  0.464
  07:55:16 STEP      532 H=      133:00 +CPU=  0.755
  07:55:16 STEP      533 H=      133:15 +CPU=  0.485
  07:55:17 STEP      534 H=      133:30 +CPU=  0.908
  07:55:18 STEP      535 H=      133:45 +CPU=  0.482
  07:55:19 STEP      536 H=      134:00 +CPU=  0.778
  07:55:19 STEP      537 H=      134:15 +CPU=  0.712
  07:55:20 STEP      538 H=      134:30 +CPU=  0.484
  07:55:20 STEP      539 H=      134:45 +CPU=  0.485
  07:55:22 STEP      540 H=      135:00 +CPU=  1.339
  07:55:22 STEP      541 H=      135:15 +CPU=  0.477
  07:55:22 STEP      542 H=      135:30 +CPU=  0.476
  07:55:23 STEP      543 H=      135:45 +CPU=  0.768
  07:55:24 STEP      544 H=      136:00 +CPU=  0.751
  07:55:24 STEP      545 H=      136:15 +CPU=  0.470
  07:55:25 STEP      546 H=      136:30 +CPU=  0.757
  07:55:26 STEP      547 H=      136:45 +CPU=  0.467
  07:55:26 STEP      548 H=      137:00 +CPU=  0.757
  07:55:27 STEP      549 H=      137:15 +CPU=  0.781
  07:55:28 STEP      550 H=      137:30 +CPU=  0.463
  07:55:28 STEP      551 H=      137:45 +CPU=  0.470
  07:55:30 STEP      552 H=      138:00 +CPU=  1.536
  07:55:30 STEP      553 H=      138:15 +CPU=  0.461
  07:55:31 STEP      554 H=      138:30 +CPU=  0.467
  07:55:31 STEP      555 H=      138:45 +CPU=  0.458
  07:55:32 STEP      556 H=      139:00 +CPU=  0.753
  07:55:32 STEP      557 H=      139:15 +CPU=  0.465
  07:55:33 STEP      558 H=      139:30 +CPU=  0.975
  07:55:34 STEP      559 H=      139:45 +CPU=  0.463
  07:55:35 STEP      560 H=      140:00 +CPU=  0.753
  07:55:35 STEP      561 H=      140:15 +CPU=  0.752
  07:55:36 STEP      562 H=      140:30 +CPU=  0.464
  07:55:36 STEP      563 H=      140:45 +CPU=  0.469
  07:55:38 STEP      564 H=      141:00 +CPU=  1.355
  07:55:38 STEP      565 H=      141:15 +CPU=  0.648
  07:55:39 STEP      566 H=      141:30 +CPU=  0.473
  07:55:40 STEP      567 H=      141:45 +CPU=  0.959
  07:55:41 STEP      568 H=      142:00 +CPU=  0.751
  07:55:41 STEP      569 H=      142:15 +CPU=  0.476
  07:55:42 STEP      570 H=      142:30 +CPU=  0.770
  07:55:42 STEP      571 H=      142:45 +CPU=  0.465
  07:55:43 STEP      572 H=      143:00 +CPU=  0.761
  07:55:44 STEP      573 H=      143:15 +CPU=  0.770
  07:55:44 STEP      574 H=      143:30 +CPU=  0.472
  07:55:45 STEP      575 H=      143:45 +CPU=  0.471
  07:55:46 STEP      576 H=      144:00 +CPU=  1.523
  07:55:47 STEP      577 H=      144:15 +CPU=  0.465
  07:55:47 STEP      578 H=      144:30 +CPU=  0.470
  07:55:48 STEP      579 H=      144:45 +CPU=  0.506
  07:55:49 STEP      580 H=      145:00 +CPU=  0.753
  07:55:49 STEP      581 H=      145:15 +CPU=  0.475
  07:55:50 STEP      582 H=      145:30 +CPU=  0.904
  07:55:50 STEP      583 H=      145:45 +CPU=  0.463
  07:55:51 STEP      584 H=      146:00 +CPU=  0.755
  07:55:52 STEP      585 H=      146:15 +CPU=  0.849
  07:55:52 STEP      586 H=      146:30 +CPU=  0.462
  07:55:53 STEP      587 H=      146:45 +CPU=  0.471
  07:55:54 STEP      588 H=      147:00 +CPU=  1.382
  07:55:55 STEP      589 H=      147:15 +CPU=  0.465
  07:55:55 STEP      590 H=      147:30 +CPU=  0.469
  07:55:56 STEP      591 H=      147:45 +CPU=  0.762
  07:55:57 STEP      592 H=      148:00 +CPU=  0.752
  07:55:57 STEP      593 H=      148:15 +CPU=  0.473
  07:55:58 STEP      594 H=      148:30 +CPU=  0.788
  07:55:58 STEP      595 H=      148:45 +CPU=  0.463
  07:55:59 STEP      596 H=      149:00 +CPU=  0.920
  07:56:00 STEP      597 H=      149:15 +CPU=  0.588
  07:56:00 STEP      598 H=      149:30 +CPU=  0.465
  07:56:01 STEP      599 H=      149:45 +CPU=  0.631
  07:56:03 STEP      600 H=      150:00 +CPU=  1.377
  07:56:03 STEP      601 H=      150:15 +CPU=  0.467
  07:56:04 STEP      602 H=      150:30 +CPU=  0.474
  07:56:04 STEP      603 H=      150:45 +CPU=  0.467
  07:56:05 STEP      604 H=      151:00 +CPU=  0.753
  07:56:05 STEP      605 H=      151:15 +CPU=  0.489
  07:56:06 STEP      606 H=      151:30 +CPU=  0.906
  07:56:07 STEP      607 H=      151:45 +CPU=  0.468
  07:56:08 STEP      608 H=      152:00 +CPU=  0.763
  07:56:08 STEP      609 H=      152:15 +CPU=  0.798
  07:56:09 STEP      610 H=      152:30 +CPU=  0.470
  07:56:09 STEP      611 H=      152:45 +CPU=  0.645
  07:56:11 STEP      612 H=      153:00 +CPU=  1.364
  07:56:11 STEP      613 H=      153:15 +CPU=  0.451
  07:56:12 STEP      614 H=      153:30 +CPU=  0.471
  07:56:13 STEP      615 H=      153:45 +CPU=  0.828
  07:56:13 STEP      616 H=      154:00 +CPU=  0.754
  07:56:14 STEP      617 H=      154:15 +CPU=  0.484
  07:56:15 STEP      618 H=      154:30 +CPU=  0.788
  07:56:15 STEP      619 H=      154:45 +CPU=  0.468
  07:56:16 STEP      620 H=      155:00 +CPU=  0.760
  07:56:17 STEP      621 H=      155:15 +CPU=  0.719
  07:56:17 STEP      622 H=      155:30 +CPU=  0.481
  07:56:18 STEP      623 H=      155:45 +CPU=  0.479
  07:56:19 STEP      624 H=      156:00 +CPU=  1.521
  07:56:20 STEP      625 H=      156:15 +CPU=  0.472
  07:56:20 STEP      626 H=      156:30 +CPU=  0.477
  07:56:21 STEP      627 H=      156:45 +CPU=  0.475
  07:56:21 STEP      628 H=      157:00 +CPU=  0.761
  07:56:22 STEP      629 H=      157:15 +CPU=  0.496
  07:56:23 STEP      630 H=      157:30 +CPU=  0.976
  07:56:23 STEP      631 H=      157:45 +CPU=  0.488
  07:56:24 STEP      632 H=      158:00 +CPU=  0.776
  07:56:25 STEP      633 H=      158:15 +CPU=  0.719
  07:56:25 STEP      634 H=      158:30 +CPU=  0.489
  07:56:26 STEP      635 H=      158:45 +CPU=  0.493
  07:56:27 STEP      636 H=      159:00 +CPU=  1.318
  07:56:28 STEP      637 H=      159:15 +CPU=  0.485
  07:56:28 STEP      638 H=      159:30 +CPU=  0.488
  07:56:29 STEP      639 H=      159:45 +CPU=  0.741
  07:56:30 STEP      640 H=      160:00 +CPU=  0.769
  07:56:30 STEP      641 H=      160:15 +CPU=  0.487
  07:56:31 STEP      642 H=      160:30 +CPU=  0.704
  07:56:31 STEP      643 H=      160:45 +CPU=  0.472
  07:56:32 STEP      644 H=      161:00 +CPU=  0.762
  07:56:33 STEP      645 H=      161:15 +CPU=  0.742
  07:56:33 STEP      646 H=      161:30 +CPU=  0.468
  07:56:34 STEP      647 H=      161:45 +CPU=  0.473
  07:56:36 STEP      648 H=      162:00 +CPU=  1.520
  07:56:37 STEP      649 H=      162:15 +CPU=  0.468
  07:56:37 STEP      650 H=      162:30 +CPU=  0.477
  07:56:37 STEP      651 H=      162:45 +CPU=  0.463
  07:56:38 STEP      652 H=      163:00 +CPU=  0.752
  07:56:39 STEP      653 H=      163:15 +CPU=  0.469
  07:56:40 STEP      654 H=      163:30 +CPU=  1.113
  07:56:40 STEP      655 H=      163:45 +CPU=  0.463
  07:56:41 STEP      656 H=      164:00 +CPU=  0.758
  07:56:42 STEP      657 H=      164:15 +CPU=  0.766
  07:56:42 STEP      658 H=      164:30 +CPU=  0.465
  07:56:43 STEP      659 H=      164:45 +CPU=  0.468
  07:56:44 STEP      660 H=      165:00 +CPU=  1.314
  07:56:45 STEP      661 H=      165:15 +CPU=  0.464
  07:56:45 STEP      662 H=      165:30 +CPU=  0.467
  07:56:46 STEP      663 H=      165:45 +CPU=  0.772
  07:56:46 STEP      664 H=      166:00 +CPU=  0.745
  07:56:47 STEP      665 H=      166:15 +CPU=  0.469
  07:56:48 STEP      666 H=      166:30 +CPU=  0.799
  07:56:48 STEP      667 H=      166:45 +CPU=  0.462
  07:56:49 STEP      668 H=      167:00 +CPU=  0.753
  07:56:50 STEP      669 H=      167:15 +CPU=  0.808
  07:56:50 STEP      670 H=      167:30 +CPU=  0.463
  07:56:51 STEP      671 H=      167:45 +CPU=  0.624
  07:56:53 STEP      672 H=      168:00 +CPU=  1.468
  07:56:53 STEP      673 H=      168:15 +CPU=  0.463
  07:56:54 STEP      674 H=      168:30 +CPU=  0.469
  07:56:54 STEP      675 H=      168:45 +CPU=  0.461
  07:56:55 STEP      676 H=      169:00 +CPU=  0.748
  07:56:55 STEP      677 H=      169:15 +CPU=  0.466
  07:56:56 STEP      678 H=      169:30 +CPU=  0.946
  07:56:57 STEP      679 H=      169:45 +CPU=  0.465
  07:56:57 STEP      680 H=      170:00 +CPU=  0.755
  07:56:58 STEP      681 H=      170:15 +CPU=  0.788
  07:56:59 STEP      682 H=      170:30 +CPU=  0.459
  07:56:59 STEP      683 H=      170:45 +CPU=  0.465
  07:57:01 STEP      684 H=      171:00 +CPU=  1.339
  07:57:01 STEP      685 H=      171:15 +CPU=  0.464
  07:57:01 STEP      686 H=      171:30 +CPU=  0.466
  07:57:02 STEP      687 H=      171:45 +CPU=  0.704
  07:57:03 STEP      688 H=      172:00 +CPU=  0.747
  07:57:03 STEP      689 H=      172:15 +CPU=  0.465
  07:57:04 STEP      690 H=      172:30 +CPU=  0.744
  07:57:05 STEP      691 H=      172:45 +CPU=  0.460
  07:57:05 STEP      692 H=      173:00 +CPU=  0.756
  07:57:06 STEP      693 H=      173:15 +CPU=  0.769
  07:57:07 STEP      694 H=      173:30 +CPU=  0.468
  07:57:07 STEP      695 H=      173:45 +CPU=  0.536
  07:57:09 STEP      696 H=      174:00 +CPU=  1.552
  07:57:09 STEP      697 H=      174:15 +CPU=  0.466
  07:57:10 STEP      698 H=      174:30 +CPU=  0.648
  07:57:10 STEP      699 H=      174:45 +CPU=  0.525
  07:57:11 STEP      700 H=      175:00 +CPU=  0.737
  07:57:12 STEP      701 H=      175:15 +CPU=  0.490
  07:57:13 STEP      702 H=      175:30 +CPU=  0.929
  07:57:13 STEP      703 H=      175:45 +CPU=  0.504
  07:57:14 STEP      704 H=      176:00 +CPU=  0.777
  07:57:15 STEP      705 H=      176:15 +CPU=  0.686
  07:57:15 STEP      706 H=      176:30 +CPU=  0.475
  07:57:15 STEP      707 H=      176:45 +CPU=  0.473
  07:57:17 STEP      708 H=      177:00 +CPU=  1.303
  07:57:17 STEP      709 H=      177:15 +CPU=  0.467
  07:57:18 STEP      710 H=      177:30 +CPU=  0.467
  07:57:18 STEP      711 H=      177:45 +CPU=  0.754
  07:57:19 STEP      712 H=      178:00 +CPU=  0.749
  07:57:20 STEP      713 H=      178:15 +CPU=  0.467
  07:57:20 STEP      714 H=      178:30 +CPU=  0.757
  07:57:21 STEP      715 H=      178:45 +CPU=  0.465
  07:57:22 STEP      716 H=      179:00 +CPU=  0.757
  07:57:22 STEP      717 H=      179:15 +CPU=  0.808
  07:57:23 STEP      718 H=      179:30 +CPU=  0.471
  07:57:23 STEP      719 H=      179:45 +CPU=  0.472
  07:57:25 STEP      720 H=      180:00 +CPU=  1.514
  07:57:26 STEP      721 H=      180:15 +CPU=  0.468
  07:57:26 STEP      722 H=      180:30 +CPU=  0.476
  07:57:27 STEP      723 H=      180:45 +CPU=  0.465
  07:57:27 STEP      724 H=      181:00 +CPU=  0.750
  07:57:28 STEP      725 H=      181:15 +CPU=  0.631
  07:57:29 STEP      726 H=      181:30 +CPU=  0.802
  07:57:29 STEP      727 H=      181:45 +CPU=  0.480
  07:57:30 STEP      728 H=      182:00 +CPU=  0.772
  07:57:31 STEP      729 H=      182:15 +CPU=  0.727
  07:57:31 STEP      730 H=      182:30 +CPU=  0.485
  07:57:32 STEP      731 H=      182:45 +CPU=  0.492
  07:57:33 STEP      732 H=      183:00 +CPU=  1.283
  07:57:33 STEP      733 H=      183:15 +CPU=  0.480
  07:57:34 STEP      734 H=      183:30 +CPU=  0.483
  07:57:35 STEP      735 H=      183:45 +CPU=  0.745
  07:57:35 STEP      736 H=      184:00 +CPU=  0.757
  07:57:36 STEP      737 H=      184:15 +CPU=  0.479
  07:57:37 STEP      738 H=      184:30 +CPU=  0.727
  07:57:37 STEP      739 H=      184:45 +CPU=  0.472
  07:57:38 STEP      740 H=      185:00 +CPU=  0.757
  07:57:39 STEP      741 H=      185:15 +CPU=  0.796
  07:57:39 STEP      742 H=      185:30 +CPU=  0.467
  07:57:40 STEP      743 H=      185:45 +CPU=  0.653
  07:57:42 STEP      744 H=      186:00 +CPU=  1.508
  07:57:42 STEP      745 H=      186:15 +CPU=  0.467
  07:57:43 STEP      746 H=      186:30 +CPU=  0.476
  07:57:43 STEP      747 H=      186:45 +CPU=  0.468
  07:57:44 STEP      748 H=      187:00 +CPU=  0.753
  07:57:44 STEP      749 H=      187:15 +CPU=  0.476
  07:57:45 STEP      750 H=      187:30 +CPU=  0.904
  07:57:46 STEP      751 H=      187:45 +CPU=  0.472
  07:57:46 STEP      752 H=      188:00 +CPU=  0.771
  07:57:47 STEP      753 H=      188:15 +CPU=  0.752
  07:57:48 STEP      754 H=      188:30 +CPU=  0.473
  07:57:48 STEP      755 H=      188:45 +CPU=  0.475
  07:57:49 STEP      756 H=      189:00 +CPU=  1.294
  07:57:50 STEP      757 H=      189:15 +CPU=  0.471
  07:57:50 STEP      758 H=      189:30 +CPU=  0.477
  07:57:51 STEP      759 H=      189:45 +CPU=  0.787
  07:57:52 STEP      760 H=      190:00 +CPU=  0.760
  07:57:52 STEP      761 H=      190:15 +CPU=  0.476
  07:57:53 STEP      762 H=      190:30 +CPU=  0.914
  07:57:54 STEP      763 H=      190:45 +CPU=  0.477
  07:57:55 STEP      764 H=      191:00 +CPU=  0.755
  07:57:55 STEP      765 H=      191:15 +CPU=  0.716
  07:57:56 STEP      766 H=      191:30 +CPU=  0.469
  07:57:56 STEP      767 H=      191:45 +CPU=  0.629
  07:57:59 STEP      768 H=      192:00 +CPU=  1.415
  07:58:00 STEP      769 H=      192:15 +CPU=  0.445
  07:58:00 STEP      770 H=      192:30 +CPU=  0.478
  07:58:00 STEP      771 H=      192:45 +CPU=  0.466
  07:58:01 STEP      772 H=      193:00 +CPU=  0.749
  07:58:02 STEP      773 H=      193:15 +CPU=  0.468
  07:58:03 STEP      774 H=      193:30 +CPU=  0.903
  07:58:03 STEP      775 H=      193:45 +CPU=  0.466
  07:58:04 STEP      776 H=      194:00 +CPU=  0.762
  07:58:05 STEP      777 H=      194:15 +CPU=  0.719
  07:58:05 STEP      778 H=      194:30 +CPU=  0.467
  07:58:06 STEP      779 H=      194:45 +CPU=  0.503
  07:58:07 STEP      780 H=      195:00 +CPU=  1.285
  07:58:07 STEP      781 H=      195:15 +CPU=  0.465
  07:58:08 STEP      782 H=      195:30 +CPU=  0.469
  07:58:09 STEP      783 H=      195:45 +CPU=  0.885
  07:58:09 STEP      784 H=      196:00 +CPU=  0.878
  07:58:10 STEP      785 H=      196:15 +CPU=  0.483
  07:58:11 STEP      786 H=      196:30 +CPU=  0.886
  07:58:11 STEP      787 H=      196:45 +CPU=  0.464
  07:58:12 STEP      788 H=      197:00 +CPU=  0.756
  07:58:13 STEP      789 H=      197:15 +CPU=  0.762
  07:58:13 STEP      790 H=      197:30 +CPU=  0.472
  07:58:14 STEP      791 H=      197:45 +CPU=  0.484
  07:58:16 STEP      792 H=      198:00 +CPU=  1.530
  07:58:16 STEP      793 H=      198:15 +CPU=  0.466
  07:58:17 STEP      794 H=      198:30 +CPU=  0.631
  07:58:18 STEP      795 H=      198:45 +CPU=  0.467
  07:58:18 STEP      796 H=      199:00 +CPU=  0.759
  07:58:19 STEP      797 H=      199:15 +CPU=  0.482
  07:58:20 STEP      798 H=      199:30 +CPU=  0.887
  07:58:20 STEP      799 H=      199:45 +CPU=  0.470
  07:58:21 STEP      800 H=      200:00 +CPU=  0.919
  07:58:22 STEP      801 H=      200:15 +CPU=  0.641
  07:58:22 STEP      802 H=      200:30 +CPU=  0.472
  07:58:23 STEP      803 H=      200:45 +CPU=  0.475
  07:58:24 STEP      804 H=      201:00 +CPU=  1.340
  07:58:25 STEP      805 H=      201:15 +CPU=  0.469
  07:58:25 STEP      806 H=      201:30 +CPU=  0.473
  07:58:26 STEP      807 H=      201:45 +CPU=  0.791
  07:58:27 STEP      808 H=      202:00 +CPU=  0.760
  07:58:27 STEP      809 H=      202:15 +CPU=  0.478
  07:58:28 STEP      810 H=      202:30 +CPU=  0.742
  07:58:28 STEP      811 H=      202:45 +CPU=  0.470
  07:58:29 STEP      812 H=      203:00 +CPU=  0.756
  07:58:30 STEP      813 H=      203:15 +CPU=  0.747
  07:58:30 STEP      814 H=      203:30 +CPU=  0.465
  07:58:31 STEP      815 H=      203:45 +CPU=  0.470
  07:58:32 STEP      816 H=      204:00 +CPU=  1.514
  07:58:33 STEP      817 H=      204:15 +CPU=  0.466
  07:58:33 STEP      818 H=      204:30 +CPU=  0.470
  07:58:34 STEP      819 H=      204:45 +CPU=  0.467
  07:58:35 STEP      820 H=      205:00 +CPU=  0.751
  07:58:35 STEP      821 H=      205:15 +CPU=  0.475
  07:58:36 STEP      822 H=      205:30 +CPU=  0.913
  07:58:36 STEP      823 H=      205:45 +CPU=  0.479
  07:58:37 STEP      824 H=      206:00 +CPU=  0.769
  07:58:38 STEP      825 H=      206:15 +CPU=  0.754
  07:58:39 STEP      826 H=      206:30 +CPU=  0.482
  07:58:39 STEP      827 H=      206:45 +CPU=  0.488
  07:58:41 STEP      828 H=      207:00 +CPU=  1.549
  07:58:41 STEP      829 H=      207:15 +CPU=  0.482
  07:58:42 STEP      830 H=      207:30 +CPU=  0.486
  07:58:42 STEP      831 H=      207:45 +CPU=  0.696
  07:58:43 STEP      832 H=      208:00 +CPU=  0.759
  07:58:43 STEP      833 H=      208:15 +CPU=  0.478
  07:58:44 STEP      834 H=      208:30 +CPU=  0.739
  07:58:45 STEP      835 H=      208:45 +CPU=  0.468
  07:58:45 STEP      836 H=      209:00 +CPU=  0.755
  07:58:46 STEP      837 H=      209:15 +CPU=  0.763
  07:58:47 STEP      838 H=      209:30 +CPU=  0.468
  07:58:47 STEP      839 H=      209:45 +CPU=  0.469
  07:58:49 STEP      840 H=      210:00 +CPU=  1.512
  07:58:49 STEP      841 H=      210:15 +CPU=  0.466
  07:58:50 STEP      842 H=      210:30 +CPU=  0.477
  07:58:50 STEP      843 H=      210:45 +CPU=  0.465
  07:58:51 STEP      844 H=      211:00 +CPU=  0.753
  07:58:51 STEP      845 H=      211:15 +CPU=  0.472
  07:58:52 STEP      846 H=      211:30 +CPU=  1.037
  07:58:53 STEP      847 H=      211:45 +CPU=  0.466
  07:58:54 STEP      848 H=      212:00 +CPU=  0.754
  07:58:54 STEP      849 H=      212:15 +CPU=  0.797
  07:58:55 STEP      850 H=      212:30 +CPU=  0.463
  07:58:55 STEP      851 H=      212:45 +CPU=  0.467
  07:58:57 STEP      852 H=      213:00 +CPU=  1.382
  07:58:57 STEP      853 H=      213:15 +CPU=  0.466
  07:58:58 STEP      854 H=      213:30 +CPU=  0.468
  07:58:59 STEP      855 H=      213:45 +CPU=  0.780
  07:58:59 STEP      856 H=      214:00 +CPU=  0.748
  07:59:00 STEP      857 H=      214:15 +CPU=  0.467
  07:59:01 STEP      858 H=      214:30 +CPU=  0.844
  07:59:01 STEP      859 H=      214:45 +CPU=  0.466
  07:59:02 STEP      860 H=      215:00 +CPU=  0.754
  07:59:03 STEP      861 H=      215:15 +CPU=  0.722
  07:59:03 STEP      862 H=      215:30 +CPU=  0.464
  07:59:03 STEP      863 H=      215:45 +CPU=  0.472
  07:59:05 STEP      864 H=      216:00 +CPU=  1.505
  07:59:06 STEP      865 H=      216:15 +CPU=  0.487
  07:59:06 STEP      866 H=      216:30 +CPU=  0.476
  07:59:06 STEP      867 H=      216:45 +CPU=  0.463
  07:59:07 STEP      868 H=      217:00 +CPU=  0.777
  07:59:08 STEP      869 H=      217:15 +CPU=  0.473
  07:59:09 STEP      870 H=      217:30 +CPU=  1.036
  07:59:09 STEP      871 H=      217:45 +CPU=  0.467
  07:59:10 STEP      872 H=      218:00 +CPU=  0.914
  07:59:11 STEP      873 H=      218:15 +CPU=  0.892
  07:59:12 STEP      874 H=      218:30 +CPU=  0.470
  07:59:12 STEP      875 H=      218:45 +CPU=  0.473
  07:59:13 STEP      876 H=      219:00 +CPU=  1.329
  07:59:14 STEP      877 H=      219:15 +CPU=  0.481
  07:59:14 STEP      878 H=      219:30 +CPU=  0.477
  07:59:15 STEP      879 H=      219:45 +CPU=  0.800
  07:59:16 STEP      880 H=      220:00 +CPU=  0.752
  07:59:16 STEP      881 H=      220:15 +CPU=  0.472
  07:59:17 STEP      882 H=      220:30 +CPU=  0.733
  07:59:18 STEP      883 H=      220:45 +CPU=  0.470
  07:59:18 STEP      884 H=      221:00 +CPU=  0.758
  07:59:19 STEP      885 H=      221:15 +CPU=  0.715
  07:59:19 STEP      886 H=      221:30 +CPU=  0.464
  07:59:20 STEP      887 H=      221:45 +CPU=  0.478
  07:59:22 STEP      888 H=      222:00 +CPU=  1.533
  07:59:22 STEP      889 H=      222:15 +CPU=  0.466
  07:59:23 STEP      890 H=      222:30 +CPU=  0.477
  07:59:23 STEP      891 H=      222:45 +CPU=  0.464
  07:59:24 STEP      892 H=      223:00 +CPU=  0.749
  07:59:24 STEP      893 H=      223:15 +CPU=  0.463
  07:59:25 STEP      894 H=      223:30 +CPU=  0.924
  07:59:26 STEP      895 H=      223:45 +CPU=  0.462
  07:59:27 STEP      896 H=      224:00 +CPU=  0.905
  07:59:27 STEP      897 H=      224:15 +CPU=  0.628
  07:59:28 STEP      898 H=      224:30 +CPU=  0.463
  07:59:28 STEP      899 H=      224:45 +CPU=  0.476
  07:59:29 STEP      900 H=      225:00 +CPU=  1.328
  07:59:30 STEP      901 H=      225:15 +CPU=  0.465
  07:59:30 STEP      902 H=      225:30 +CPU=  0.477
  07:59:31 STEP      903 H=      225:45 +CPU=  0.758
  07:59:32 STEP      904 H=      226:00 +CPU=  0.747
  07:59:32 STEP      905 H=      226:15 +CPU=  0.469
  07:59:33 STEP      906 H=      226:30 +CPU=  0.764
  07:59:34 STEP      907 H=      226:45 +CPU=  0.464
  07:59:34 STEP      908 H=      227:00 +CPU=  0.759
  07:59:35 STEP      909 H=      227:15 +CPU=  0.779
  07:59:36 STEP      910 H=      227:30 +CPU=  0.472
  07:59:36 STEP      911 H=      227:45 +CPU=  0.476
  07:59:38 STEP      912 H=      228:00 +CPU=  1.518
  07:59:38 STEP      913 H=      228:15 +CPU=  0.468
  07:59:39 STEP      914 H=      228:30 +CPU=  0.480
  07:59:39 STEP      915 H=      228:45 +CPU=  0.527
  07:59:40 STEP      916 H=      229:00 +CPU=  0.810
  07:59:41 STEP      917 H=      229:15 +CPU=  0.475
  07:59:42 STEP      918 H=      229:30 +CPU=  0.990
  07:59:42 STEP      919 H=      229:45 +CPU=  0.476
  07:59:43 STEP      920 H=      230:00 +CPU=  0.767
  07:59:44 STEP      921 H=      230:15 +CPU=  0.743
  07:59:44 STEP      922 H=      230:30 +CPU=  0.482
  07:59:45 STEP      923 H=      230:45 +CPU=  0.482
  07:59:46 STEP      924 H=      231:00 +CPU=  1.315
  07:59:46 STEP      925 H=      231:15 +CPU=  0.482
  07:59:47 STEP      926 H=      231:30 +CPU=  0.630
  07:59:48 STEP      927 H=      231:45 +CPU=  0.612
  07:59:48 STEP      928 H=      232:00 +CPU=  0.756
  07:59:49 STEP      929 H=      232:15 +CPU=  0.480
  07:59:50 STEP      930 H=      232:30 +CPU=  0.815
  07:59:50 STEP      931 H=      232:45 +CPU=  0.457
  07:59:51 STEP      932 H=      233:00 +CPU=  0.761
  07:59:52 STEP      933 H=      233:15 +CPU=  0.792
  07:59:52 STEP      934 H=      233:30 +CPU=  0.466
  07:59:53 STEP      935 H=      233:45 +CPU=  0.474
  07:59:54 STEP      936 H=      234:00 +CPU=  1.639
  07:59:55 STEP      937 H=      234:15 +CPU=  0.459
  07:59:55 STEP      938 H=      234:30 +CPU=  0.468
  07:59:56 STEP      939 H=      234:45 +CPU=  0.485
  07:59:57 STEP      940 H=      235:00 +CPU=  0.748
  07:59:57 STEP      941 H=      235:15 +CPU=  0.470
  07:59:58 STEP      942 H=      235:30 +CPU=  0.952
  07:59:58 STEP      943 H=      235:45 +CPU=  0.461
  07:59:59 STEP      944 H=      236:00 +CPU=  0.909
  08:00:00 STEP      945 H=      236:15 +CPU=  0.597
  08:00:00 STEP      946 H=      236:30 +CPU=  0.461
  08:00:01 STEP      947 H=      236:45 +CPU=  0.469
  08:00:03 STEP      948 H=      237:00 +CPU=  1.618
  08:00:03 STEP      949 H=      237:15 +CPU=  0.723
  08:00:04 STEP      950 H=      237:30 +CPU=  0.904
  08:00:09 STEP      951 H=      237:45 +CPU=  4.536
  08:00:10 STEP      952 H=      238:00 +CPU=  0.856
  08:00:10 STEP      953 H=      238:15 +CPU=  0.478
  08:00:11 STEP      954 H=      238:30 +CPU=  0.973
  08:00:11 STEP      955 H=      238:45 +CPU=  0.450
  08:00:12 STEP      956 H=      239:00 +CPU=  0.752
  08:00:13 STEP      957 H=      239:15 +CPU=  0.748
  08:00:13 STEP      958 H=      239:30 +CPU=  0.459
  08:00:14 STEP      959 H=      239:45 +CPU=  0.469
  08:00:16 STEP      960 H=      240:00 +CPU=  1.568
  08:00:16 STEP      961 H=      240:15 +CPU=  0.465
  08:00:17 STEP      962 H=      240:30 +CPU=  0.633
  08:00:17 STEP      963 H=      240:45 +CPU=  0.464
  08:00:18 STEP      964 H=      241:00 +CPU=  0.748
  08:00:18 STEP      965 H=      241:15 +CPU=  0.472
  08:00:19 STEP      966 H=      241:30 +CPU=  0.905
  08:00:20 STEP      967 H=      241:45 +CPU=  0.464
  08:00:21 STEP      968 H=      242:00 +CPU=  0.751
  08:00:21 STEP      969 H=      242:15 +CPU=  0.826
  08:00:22 STEP      970 H=      242:30 +CPU=  0.465
  08:00:22 STEP      971 H=      242:45 +CPU=  0.470
  08:00:24 STEP      972 H=      243:00 +CPU=  1.338
  08:00:24 STEP      973 H=      243:15 +CPU=  0.465
  08:00:25 STEP      974 H=      243:30 +CPU=  0.632
  08:00:25 STEP      975 H=      243:45 +CPU=  0.609
  08:00:26 STEP      976 H=      244:00 +CPU=  0.748
  08:00:27 STEP      977 H=      244:15 +CPU=  0.472
  08:00:27 STEP      978 H=      244:30 +CPU=  0.801
  08:00:28 STEP      979 H=      244:45 +CPU=  0.464
  08:00:29 STEP      980 H=      245:00 +CPU=  0.752
  08:00:29 STEP      981 H=      245:15 +CPU=  0.784
  08:00:30 STEP      982 H=      245:30 +CPU=  0.461
  08:00:30 STEP      983 H=      245:45 +CPU=  0.463
  08:00:32 STEP      984 H=      246:00 +CPU=  1.545
  08:00:32 STEP      985 H=      246:15 +CPU=  0.458
  08:00:33 STEP      986 H=      246:30 +CPU=  0.468
  08:00:33 STEP      987 H=      246:45 +CPU=  0.478
  08:00:34 STEP      988 H=      247:00 +CPU=  0.739
  08:00:35 STEP      989 H=      247:15 +CPU=  0.634
  08:00:35 STEP      990 H=      247:30 +CPU=  0.760
  08:00:36 STEP      991 H=      247:45 +CPU=  0.468
  08:00:37 STEP      992 H=      248:00 +CPU=  0.748
  08:00:37 STEP      993 H=      248:15 +CPU=  0.784
  08:00:38 STEP      994 H=      248:30 +CPU=  0.467
  08:00:38 STEP      995 H=      248:45 +CPU=  0.470
  08:00:40 STEP      996 H=      249:00 +CPU=  1.721
  08:00:41 STEP      997 H=      249:15 +CPU=  0.465
  08:00:41 STEP      998 H=      249:30 +CPU=  0.474
  08:00:42 STEP      999 H=      249:45 +CPU=  0.794
  08:00:43 STEP     1000 H=      250:00 +CPU=  0.750
  08:00:43 STEP     1001 H=      250:15 +CPU=  0.475
  08:00:44 STEP     1002 H=      250:30 +CPU=  0.731
  08:00:44 STEP     1003 H=      250:45 +CPU=  0.465
  08:00:45 STEP     1004 H=      251:00 +CPU=  0.748
  08:00:46 STEP     1005 H=      251:15 +CPU=  0.763
  08:00:46 STEP     1006 H=      251:30 +CPU=  0.462
  08:00:47 STEP     1007 H=      251:45 +CPU=  0.465
  08:00:48 STEP     1008 H=      252:00 +CPU=  1.551
  08:00:49 STEP     1009 H=      252:15 +CPU=  0.465
  08:00:49 STEP     1010 H=      252:30 +CPU=  0.472
  08:00:50 STEP     1011 H=      252:45 +CPU=  0.470
  08:00:51 STEP     1012 H=      253:00 +CPU=  0.751
  08:00:51 STEP     1013 H=      253:15 +CPU=  0.471
  08:00:52 STEP     1014 H=      253:30 +CPU=  1.051
  08:00:53 STEP     1015 H=      253:45 +CPU=  0.475
  08:00:53 STEP     1016 H=      254:00 +CPU=  0.768
  08:00:54 STEP     1017 H=      254:15 +CPU=  0.786
  08:00:55 STEP     1018 H=      254:30 +CPU=  0.485
  08:00:55 STEP     1019 H=      254:45 +CPU=  0.485
  08:00:56 STEP     1020 H=      255:00 +CPU=  1.294
  08:00:57 STEP     1021 H=      255:15 +CPU=  0.481
  08:00:57 STEP     1022 H=      255:30 +CPU=  0.481
  08:00:58 STEP     1023 H=      255:45 +CPU=  0.770
  08:00:59 STEP     1024 H=      256:00 +CPU=  0.755
  08:00:59 STEP     1025 H=      256:15 +CPU=  0.479
  08:01:00 STEP     1026 H=      256:30 +CPU=  0.738
  08:01:01 STEP     1027 H=      256:45 +CPU=  0.465
  08:01:01 STEP     1028 H=      257:00 +CPU=  0.753
  08:01:02 STEP     1029 H=      257:15 +CPU=  0.734
  08:01:03 STEP     1030 H=      257:30 +CPU=  0.471
  08:01:03 STEP     1031 H=      257:45 +CPU=  0.475
  08:01:05 STEP     1032 H=      258:00 +CPU=  1.499
  08:01:05 STEP     1033 H=      258:15 +CPU=  0.463
  08:01:06 STEP     1034 H=      258:30 +CPU=  0.486
  08:01:06 STEP     1035 H=      258:45 +CPU=  0.467
  08:01:07 STEP     1036 H=      259:00 +CPU=  0.767
  08:01:07 STEP     1037 H=      259:15 +CPU=  0.504
  08:01:08 STEP     1038 H=      259:30 +CPU=  0.930
  08:01:09 STEP     1039 H=      259:45 +CPU=  0.482
  08:01:10 STEP     1040 H=      260:00 +CPU=  0.941
  08:01:11 STEP     1041 H=      260:15 +CPU=  0.789
  08:01:11 STEP     1042 H=      260:30 +CPU=  0.469
  08:01:11 STEP     1043 H=      260:45 +CPU=  0.455
  08:01:13 STEP     1044 H=      261:00 +CPU=  1.446
  08:01:13 STEP     1045 H=      261:15 +CPU=  0.465
  08:01:14 STEP     1046 H=      261:30 +CPU=  0.475
  08:01:15 STEP     1047 H=      261:45 +CPU=  0.806
  08:01:15 STEP     1048 H=      262:00 +CPU=  0.748
  08:01:16 STEP     1049 H=      262:15 +CPU=  0.470
  08:01:17 STEP     1050 H=      262:30 +CPU=  0.764
  08:01:17 STEP     1051 H=      262:45 +CPU=  0.468
  08:01:18 STEP     1052 H=      263:00 +CPU=  0.752
  08:01:19 STEP     1053 H=      263:15 +CPU=  0.751
  08:01:19 STEP     1054 H=      263:30 +CPU=  0.465
  08:01:20 STEP     1055 H=      263:45 +CPU=  0.475
  08:01:22 STEP     1056 H=      264:00 +CPU=  1.509
  08:01:22 STEP     1057 H=      264:15 +CPU=  0.459
  08:01:23 STEP     1058 H=      264:30 +CPU=  0.625
  08:01:23 STEP     1059 H=      264:45 +CPU=  0.459
  08:01:24 STEP     1060 H=      265:00 +CPU=  0.745
  08:01:24 STEP     1061 H=      265:15 +CPU=  0.455
  08:01:25 STEP     1062 H=      265:30 +CPU=  0.935
  08:01:26 STEP     1063 H=      265:45 +CPU=  0.459
  08:01:27 STEP     1064 H=      266:00 +CPU=  0.752
  08:01:27 STEP     1065 H=      266:15 +CPU=  0.814
  08:01:28 STEP     1066 H=      266:30 +CPU=  0.463
  08:01:28 STEP     1067 H=      266:45 +CPU=  0.469
  08:01:30 STEP     1068 H=      267:00 +CPU=  1.360
  08:01:30 STEP     1069 H=      267:15 +CPU=  0.463
  08:01:31 STEP     1070 H=      267:30 +CPU=  0.472
  08:01:31 STEP     1071 H=      267:45 +CPU=  0.745
  08:01:32 STEP     1072 H=      268:00 +CPU=  0.748
  08:01:33 STEP     1073 H=      268:15 +CPU=  0.638
  08:01:33 STEP     1074 H=      268:30 +CPU=  0.610
  08:01:34 STEP     1075 H=      268:45 +CPU=  0.462
  08:01:35 STEP     1076 H=      269:00 +CPU=  0.752
  08:01:35 STEP     1077 H=      269:15 +CPU=  0.765
  08:01:36 STEP     1078 H=      269:30 +CPU=  0.464
  08:01:36 STEP     1079 H=      269:45 +CPU=  0.474
  08:01:38 STEP     1080 H=      270:00 +CPU=  1.530
  08:01:38 STEP     1081 H=      270:15 +CPU=  0.466
  08:01:39 STEP     1082 H=      270:30 +CPU=  0.630
  08:01:40 STEP     1083 H=      270:45 +CPU=  0.620
  08:01:40 STEP     1084 H=      271:00 +CPU=  0.755
  08:01:41 STEP     1085 H=      271:15 +CPU=  0.474
  08:01:42 STEP     1086 H=      271:30 +CPU=  0.882
  08:01:42 STEP     1087 H=      271:45 +CPU=  0.465
  08:01:43 STEP     1088 H=      272:00 +CPU=  0.756
  08:01:44 STEP     1089 H=      272:15 +CPU=  0.732
  08:01:44 STEP     1090 H=      272:30 +CPU=  0.469
  08:01:45 STEP     1091 H=      272:45 +CPU=  0.633
  08:01:46 STEP     1092 H=      273:00 +CPU=  1.152
  08:01:47 STEP     1093 H=      273:15 +CPU=  0.470
  08:01:47 STEP     1094 H=      273:30 +CPU=  0.472
  08:01:48 STEP     1095 H=      273:45 +CPU=  0.776
  08:01:49 STEP     1096 H=      274:00 +CPU=  0.749
  08:01:49 STEP     1097 H=      274:15 +CPU=  0.613
  08:01:50 STEP     1098 H=      274:30 +CPU=  0.635
  08:01:50 STEP     1099 H=      274:45 +CPU=  0.466
  08:01:51 STEP     1100 H=      275:00 +CPU=  0.761
  08:01:52 STEP     1101 H=      275:15 +CPU=  0.836
  08:01:52 STEP     1102 H=      275:30 +CPU=  0.471
  08:01:53 STEP     1103 H=      275:45 +CPU=  0.478
  08:01:55 STEP     1104 H=      276:00 +CPU=  1.587
  08:01:55 STEP     1105 H=      276:15 +CPU=  0.471
  08:01:55 STEP     1106 H=      276:30 +CPU=  0.477
  08:01:56 STEP     1107 H=      276:45 +CPU=  0.475
  08:01:57 STEP     1108 H=      277:00 +CPU=  0.759
  08:01:57 STEP     1109 H=      277:15 +CPU=  0.475
  08:01:58 STEP     1110 H=      277:30 +CPU=  0.936
  08:01:59 STEP     1111 H=      277:45 +CPU=  0.478
  08:01:59 STEP     1112 H=      278:00 +CPU=  0.764
  08:02:00 STEP     1113 H=      278:15 +CPU=  0.713
  08:02:01 STEP     1114 H=      278:30 +CPU=  0.476
  08:02:01 STEP     1115 H=      278:45 +CPU=  0.480
  08:02:02 STEP     1116 H=      279:00 +CPU=  1.291
  08:02:03 STEP     1117 H=      279:15 +CPU=  0.480
  08:02:03 STEP     1118 H=      279:30 +CPU=  0.483
  08:02:04 STEP     1119 H=      279:45 +CPU=  0.734
  08:02:05 STEP     1120 H=      280:00 +CPU=  0.757
  08:02:05 STEP     1121 H=      280:15 +CPU=  0.475
  08:02:06 STEP     1122 H=      280:30 +CPU=  0.708
  08:02:06 STEP     1123 H=      280:45 +CPU=  0.466
  08:02:07 STEP     1124 H=      281:00 +CPU=  0.805
  08:02:08 STEP     1125 H=      281:15 +CPU=  0.782
  08:02:09 STEP     1126 H=      281:30 +CPU=  0.498
  08:02:09 STEP     1127 H=      281:45 +CPU=  0.470
  08:02:11 STEP     1128 H=      282:00 +CPU=  1.786
  08:02:12 STEP     1129 H=      282:15 +CPU=  0.465
  08:02:12 STEP     1130 H=      282:30 +CPU=  0.499
  08:02:13 STEP     1131 H=      282:45 +CPU=  0.491
  08:02:14 STEP     1132 H=      283:00 +CPU=  0.754
  08:02:14 STEP     1133 H=      283:15 +CPU=  0.472
  08:02:15 STEP     1134 H=      283:30 +CPU=  0.908
  08:02:15 STEP     1135 H=      283:45 +CPU=  0.464
  08:02:16 STEP     1136 H=      284:00 +CPU=  0.750
  08:02:17 STEP     1137 H=      284:15 +CPU=  0.752
  08:02:17 STEP     1138 H=      284:30 +CPU=  0.461
  08:02:18 STEP     1139 H=      284:45 +CPU=  0.470
  08:02:19 STEP     1140 H=      285:00 +CPU=  1.569
  08:02:20 STEP     1141 H=      285:15 +CPU=  0.460
  08:02:20 STEP     1142 H=      285:30 +CPU=  0.465
  08:02:21 STEP     1143 H=      285:45 +CPU=  0.782
  08:02:22 STEP     1144 H=      286:00 +CPU=  0.747
  08:02:22 STEP     1145 H=      286:15 +CPU=  0.472
  08:02:23 STEP     1146 H=      286:30 +CPU=  0.835
  08:02:24 STEP     1147 H=      286:45 +CPU=  0.466
  08:02:24 STEP     1148 H=      287:00 +CPU=  0.753
  08:02:25 STEP     1149 H=      287:15 +CPU=  0.745
  08:02:26 STEP     1150 H=      287:30 +CPU=  0.471
  08:02:26 STEP     1151 H=      287:45 +CPU=  0.629
  08:02:28 STEP     1152 H=      288:00 +CPU=  1.423
  08:02:28 STEP     1153 H=      288:15 +CPU=  0.464
  08:02:29 STEP     1154 H=      288:30 +CPU=  0.469
  08:02:29 STEP     1155 H=      288:45 +CPU=  0.462
  08:02:30 STEP     1156 H=      289:00 +CPU=  0.747
  08:02:30 STEP     1157 H=      289:15 +CPU=  0.470
  08:02:31 STEP     1158 H=      289:30 +CPU=  0.908
  08:02:32 STEP     1159 H=      289:45 +CPU=  0.463
  08:02:33 STEP     1160 H=      290:00 +CPU=  0.751
  08:02:33 STEP     1161 H=      290:15 +CPU=  0.782
  08:02:34 STEP     1162 H=      290:30 +CPU=  0.460
  08:02:34 STEP     1163 H=      290:45 +CPU=  0.467
  08:02:36 STEP     1164 H=      291:00 +CPU=  1.339
  08:02:36 STEP     1165 H=      291:15 +CPU=  0.465
  08:02:37 STEP     1166 H=      291:30 +CPU=  0.469
  08:02:37 STEP     1167 H=      291:45 +CPU=  0.756
  08:02:38 STEP     1168 H=      292:00 +CPU=  0.746
  08:02:38 STEP     1169 H=      292:15 +CPU=  0.469
  08:02:39 STEP     1170 H=      292:30 +CPU=  0.813
  08:02:40 STEP     1171 H=      292:45 +CPU=  0.585
  08:02:41 STEP     1172 H=      293:00 +CPU=  0.756
  08:02:41 STEP     1173 H=      293:15 +CPU=  0.795
  08:02:42 STEP     1174 H=      293:30 +CPU=  0.468
  08:02:42 STEP     1175 H=      293:45 +CPU=  0.469
  08:02:44 STEP     1176 H=      294:00 +CPU=  1.516
  08:02:45 STEP     1177 H=      294:15 +CPU=  0.459
  08:02:45 STEP     1178 H=      294:30 +CPU=  0.468
  08:02:46 STEP     1179 H=      294:45 +CPU=  0.464
  08:02:46 STEP     1180 H=      295:00 +CPU=  0.751
  08:02:47 STEP     1181 H=      295:15 +CPU=  0.470
  08:02:48 STEP     1182 H=      295:30 +CPU=  0.948
  08:02:48 STEP     1183 H=      295:45 +CPU=  0.464
  08:02:49 STEP     1184 H=      296:00 +CPU=  0.751
  08:02:50 STEP     1185 H=      296:15 +CPU=  0.774
  08:02:50 STEP     1186 H=      296:30 +CPU=  0.463
  08:02:51 STEP     1187 H=      296:45 +CPU=  0.470
  08:02:52 STEP     1188 H=      297:00 +CPU=  1.411
  08:02:53 STEP     1189 H=      297:15 +CPU=  0.463
  08:02:53 STEP     1190 H=      297:30 +CPU=  0.474
  08:02:54 STEP     1191 H=      297:45 +CPU=  0.828
  08:02:55 STEP     1192 H=      298:00 +CPU=  0.740
  08:02:55 STEP     1193 H=      298:15 +CPU=  0.625
  08:02:56 STEP     1194 H=      298:30 +CPU=  0.583
  08:02:56 STEP     1195 H=      298:45 +CPU=  0.464
  08:02:57 STEP     1196 H=      299:00 +CPU=  0.754
  08:02:58 STEP     1197 H=      299:15 +CPU=  0.875
  08:02:58 STEP     1198 H=      299:30 +CPU=  0.467
  08:02:59 STEP     1199 H=      299:45 +CPU=  0.472
  08:03:01 STEP     1200 H=      300:00 +CPU=  1.496
  08:03:01 STEP     1201 H=      300:15 +CPU=  0.470
  08:03:02 STEP     1202 H=      300:30 +CPU=  0.476
  08:03:02 STEP     1203 H=      300:45 +CPU=  0.470
  08:03:03 STEP     1204 H=      301:00 +CPU=  0.753
  08:03:03 STEP     1205 H=      301:15 +CPU=  0.478
  08:03:04 STEP     1206 H=      301:30 +CPU=  0.896
  08:03:05 STEP     1207 H=      301:45 +CPU=  0.477
  08:03:05 STEP     1208 H=      302:00 +CPU=  0.760
  08:03:06 STEP     1209 H=      302:15 +CPU=  0.753
  08:03:07 STEP     1210 H=      302:30 +CPU=  0.476
  08:03:07 STEP     1211 H=      302:45 +CPU=  0.524
  08:03:08 STEP     1212 H=      303:00 +CPU=  1.366
  08:03:09 STEP     1213 H=      303:15 +CPU=  0.477
  08:03:10 STEP     1214 H=      303:30 +CPU=  0.658
  08:03:10 STEP     1215 H=      303:45 +CPU=  0.771
  08:03:11 STEP     1216 H=      304:00 +CPU=  0.754
  08:03:12 STEP     1217 H=      304:15 +CPU=  0.479
  08:03:12 STEP     1218 H=      304:30 +CPU=  0.813
  08:03:13 STEP     1219 H=      304:45 +CPU=  0.477
  08:03:14 STEP     1220 H=      305:00 +CPU=  0.752
  08:03:14 STEP     1221 H=      305:15 +CPU=  0.746
  08:03:15 STEP     1222 H=      305:30 +CPU=  0.464
  08:03:15 STEP     1223 H=      305:45 +CPU=  0.469
  08:03:17 STEP     1224 H=      306:00 +CPU=  1.553
  08:03:17 STEP     1225 H=      306:15 +CPU=  0.460
  08:03:18 STEP     1226 H=      306:30 +CPU=  0.466
  08:03:18 STEP     1227 H=      306:45 +CPU=  0.487
  08:03:19 STEP     1228 H=      307:00 +CPU=  0.752
  08:03:20 STEP     1229 H=      307:15 +CPU=  0.477
  08:03:21 STEP     1230 H=      307:30 +CPU=  0.872
  08:03:21 STEP     1231 H=      307:45 +CPU=  0.462
  08:03:22 STEP     1232 H=      308:00 +CPU=  0.906
  08:03:23 STEP     1233 H=      308:15 +CPU=  0.675
  08:03:23 STEP     1234 H=      308:30 +CPU=  0.467
  08:03:23 STEP     1235 H=      308:45 +CPU=  0.468
  08:03:25 STEP     1236 H=      309:00 +CPU=  1.329
  08:03:25 STEP     1237 H=      309:15 +CPU=  0.462
  08:03:26 STEP     1238 H=      309:30 +CPU=  0.467
  08:03:27 STEP     1239 H=      309:45 +CPU=  0.786
  08:03:27 STEP     1240 H=      310:00 +CPU=  0.748
  08:03:28 STEP     1241 H=      310:15 +CPU=  0.465
  08:03:29 STEP     1242 H=      310:30 +CPU=  0.761
  08:03:29 STEP     1243 H=      310:45 +CPU=  0.465
  08:03:30 STEP     1244 H=      311:00 +CPU=  0.755
  08:03:31 STEP     1245 H=      311:15 +CPU=  0.758
  08:03:31 STEP     1246 H=      311:30 +CPU=  0.469
  08:03:31 STEP     1247 H=      311:45 +CPU=  0.471
  08:03:33 STEP     1248 H=      312:00 +CPU=  1.497
  08:03:34 STEP     1249 H=      312:15 +CPU=  0.467
  08:03:34 STEP     1250 H=      312:30 +CPU=  0.487
  08:03:35 STEP     1251 H=      312:45 +CPU=  0.466
  08:03:35 STEP     1252 H=      313:00 +CPU=  0.751
  08:03:36 STEP     1253 H=      313:15 +CPU=  0.470
  08:03:37 STEP     1254 H=      313:30 +CPU=  0.891
  08:03:37 STEP     1255 H=      313:45 +CPU=  0.462
  08:03:38 STEP     1256 H=      314:00 +CPU=  0.754
  08:03:39 STEP     1257 H=      314:15 +CPU=  0.768
  08:03:39 STEP     1258 H=      314:30 +CPU=  0.465
  08:03:40 STEP     1259 H=      314:45 +CPU=  0.681
  08:03:41 STEP     1260 H=      315:00 +CPU=  1.329
  08:03:42 STEP     1261 H=      315:15 +CPU=  0.476
  08:03:42 STEP     1262 H=      315:30 +CPU=  0.477
  08:03:43 STEP     1263 H=      315:45 +CPU=  0.698
  08:03:43 STEP     1264 H=      316:00 +CPU=  0.753
  08:03:44 STEP     1265 H=      316:15 +CPU=  0.472
  08:03:45 STEP     1266 H=      316:30 +CPU=  0.730
  08:03:45 STEP     1267 H=      316:45 +CPU=  0.464
  08:03:46 STEP     1268 H=      317:00 +CPU=  0.751
  08:03:47 STEP     1269 H=      317:15 +CPU=  0.787
  08:03:47 STEP     1270 H=      317:30 +CPU=  0.467
  08:03:48 STEP     1271 H=      317:45 +CPU=  0.474
  08:03:50 STEP     1272 H=      318:00 +CPU=  1.508
  08:03:50 STEP     1273 H=      318:15 +CPU=  0.464
  08:03:51 STEP     1274 H=      318:30 +CPU=  0.472
  08:03:51 STEP     1275 H=      318:45 +CPU=  0.469
  08:03:52 STEP     1276 H=      319:00 +CPU=  0.750
  08:03:52 STEP     1277 H=      319:15 +CPU=  0.474
  08:03:53 STEP     1278 H=      319:30 +CPU=  1.009
  08:03:54 STEP     1279 H=      319:45 +CPU=  0.468
  08:03:55 STEP     1280 H=      320:00 +CPU=  0.752
  08:03:55 STEP     1281 H=      320:15 +CPU=  0.730
  08:03:56 STEP     1282 H=      320:30 +CPU=  0.467
  08:03:56 STEP     1283 H=      320:45 +CPU=  0.474
  08:03:58 STEP     1284 H=      321:00 +CPU=  1.325
  08:03:58 STEP     1285 H=      321:15 +CPU=  0.475
  08:03:59 STEP     1286 H=      321:30 +CPU=  0.480
  08:03:59 STEP     1287 H=      321:45 +CPU=  0.768
  08:04:00 STEP     1288 H=      322:00 +CPU=  0.753
  08:04:01 STEP     1289 H=      322:15 +CPU=  0.481
  08:04:01 STEP     1290 H=      322:30 +CPU=  0.718
  08:04:02 STEP     1291 H=      322:45 +CPU=  0.470
  08:04:03 STEP     1292 H=      323:00 +CPU=  0.758
  08:04:03 STEP     1293 H=      323:15 +CPU=  0.728
  08:04:04 STEP     1294 H=      323:30 +CPU=  0.473
  08:04:04 STEP     1295 H=      323:45 +CPU=  0.475
  08:04:06 STEP     1296 H=      324:00 +CPU=  1.520
  08:04:06 STEP     1297 H=      324:15 +CPU=  0.473
  08:04:07 STEP     1298 H=      324:30 +CPU=  0.477
  08:04:07 STEP     1299 H=      324:45 +CPU=  0.492
  08:04:08 STEP     1300 H=      325:00 +CPU=  0.757
  08:04:09 STEP     1301 H=      325:15 +CPU=  0.476
  08:04:10 STEP     1302 H=      325:30 +CPU=  1.125
  08:04:10 STEP     1303 H=      325:45 +CPU=  0.484
  08:04:11 STEP     1304 H=      326:00 +CPU=  0.762
  08:04:12 STEP     1305 H=      326:15 +CPU=  0.855
  08:04:12 STEP     1306 H=      326:30 +CPU=  0.490
  08:04:13 STEP     1307 H=      326:45 +CPU=  0.501
  08:04:14 STEP     1308 H=      327:00 +CPU=  1.252
  08:04:15 STEP     1309 H=      327:15 +CPU=  0.493
  08:04:15 STEP     1310 H=      327:30 +CPU=  0.478
  08:04:16 STEP     1311 H=      327:45 +CPU=  0.734
  08:04:17 STEP     1312 H=      328:00 +CPU=  0.756
  08:04:17 STEP     1313 H=      328:15 +CPU=  0.476
  08:04:18 STEP     1314 H=      328:30 +CPU=  0.727
  08:04:18 STEP     1315 H=      328:45 +CPU=  0.470
  08:04:19 STEP     1316 H=      329:00 +CPU=  0.759
  08:04:20 STEP     1317 H=      329:15 +CPU=  0.742
  08:04:20 STEP     1318 H=      329:30 +CPU=  0.467
  08:04:21 STEP     1319 H=      329:45 +CPU=  0.473
  08:04:23 STEP     1320 H=      330:00 +CPU=  1.577
  08:04:23 STEP     1321 H=      330:15 +CPU=  0.466
  08:04:24 STEP     1322 H=      330:30 +CPU=  0.470
  08:04:24 STEP     1323 H=      330:45 +CPU=  0.467
  08:04:25 STEP     1324 H=      331:00 +CPU=  0.745
  08:04:25 STEP     1325 H=      331:15 +CPU=  0.474
  08:04:26 STEP     1326 H=      331:30 +CPU=  0.953
  08:04:27 STEP     1327 H=      331:45 +CPU=  0.466
  08:04:27 STEP     1328 H=      332:00 +CPU=  0.757
  08:04:28 STEP     1329 H=      332:15 +CPU=  0.750
  08:04:29 STEP     1330 H=      332:30 +CPU=  0.468
  08:04:29 STEP     1331 H=      332:45 +CPU=  0.474
  08:04:30 STEP     1332 H=      333:00 +CPU=  1.359
  08:04:31 STEP     1333 H=      333:15 +CPU=  0.468
  08:04:31 STEP     1334 H=      333:30 +CPU=  0.474
  08:04:32 STEP     1335 H=      333:45 +CPU=  0.726
  08:04:33 STEP     1336 H=      334:00 +CPU=  0.751
  08:04:33 STEP     1337 H=      334:15 +CPU=  0.469
  08:04:34 STEP     1338 H=      334:30 +CPU=  0.779
  08:04:35 STEP     1339 H=      334:45 +CPU=  0.463
  08:04:35 STEP     1340 H=      335:00 +CPU=  0.755
  08:04:36 STEP     1341 H=      335:15 +CPU=  0.761
  08:04:37 STEP     1342 H=      335:30 +CPU=  0.465
  08:04:37 STEP     1343 H=      335:45 +CPU=  0.472
  08:04:39 STEP     1344 H=      336:00 +CPU=  1.582
  08:04:39 STEP     1345 H=      336:15 +CPU=  0.562
  08:04:40 STEP     1346 H=      336:30 +CPU=  0.535
  08:04:40 STEP     1347 H=      336:45 +CPU=  0.462
  08:04:41 STEP     1348 H=      337:00 +CPU=  0.747
  08:04:42 STEP     1349 H=      337:15 +CPU=  0.472
  08:04:43 STEP     1350 H=      337:30 +CPU=  0.897
  08:04:43 STEP     1351 H=      337:45 +CPU=  0.461
  08:04:44 STEP     1352 H=      338:00 +CPU=  0.908
  08:04:45 STEP     1353 H=      338:15 +CPU=  0.594
  08:04:45 STEP     1354 H=      338:30 +CPU=  0.461
  08:04:45 STEP     1355 H=      338:45 +CPU=  0.465
  08:04:47 STEP     1356 H=      339:00 +CPU=  1.373
  08:04:47 STEP     1357 H=      339:15 +CPU=  0.462
  08:04:48 STEP     1358 H=      339:30 +CPU=  0.471
  08:04:48 STEP     1359 H=      339:45 +CPU=  0.748
  08:04:49 STEP     1360 H=      340:00 +CPU=  0.748
  08:04:50 STEP     1361 H=      340:15 +CPU=  0.637
  08:04:50 STEP     1362 H=      340:30 +CPU=  0.610
  08:04:51 STEP     1363 H=      340:45 +CPU=  0.469
  08:04:52 STEP     1364 H=      341:00 +CPU=  0.753
  08:04:53 STEP     1365 H=      341:15 +CPU=  0.932
  08:04:53 STEP     1366 H=      341:30 +CPU=  0.467
  08:04:54 STEP     1367 H=      341:45 +CPU=  0.484
  08:04:55 STEP     1368 H=      342:00 +CPU=  1.512
  08:04:56 STEP     1369 H=      342:15 +CPU=  0.469
  08:04:56 STEP     1370 H=      342:30 +CPU=  0.477
  08:04:57 STEP     1371 H=      342:45 +CPU=  0.475
  08:04:57 STEP     1372 H=      343:00 +CPU=  0.760
  08:04:58 STEP     1373 H=      343:15 +CPU=  0.480
  08:04:59 STEP     1374 H=      343:30 +CPU=  0.918
  08:04:59 STEP     1375 H=      343:45 +CPU=  0.473
  08:05:00 STEP     1376 H=      344:00 +CPU=  0.766
  08:05:01 STEP     1377 H=      344:15 +CPU=  0.692
  08:05:01 STEP     1378 H=      344:30 +CPU=  0.470
  08:05:02 STEP     1379 H=      344:45 +CPU=  0.476
  08:05:03 STEP     1380 H=      345:00 +CPU=  1.281
  08:05:04 STEP     1381 H=      345:15 +CPU=  0.467
  08:05:04 STEP     1382 H=      345:30 +CPU=  0.476
  08:05:05 STEP     1383 H=      345:45 +CPU=  0.743
  08:05:05 STEP     1384 H=      346:00 +CPU=  0.765
  08:05:06 STEP     1385 H=      346:15 +CPU=  0.475
  08:05:07 STEP     1386 H=      346:30 +CPU=  0.692
  08:05:07 STEP     1387 H=      346:45 +CPU=  0.469
  08:05:08 STEP     1388 H=      347:00 +CPU=  0.758
  08:05:09 STEP     1389 H=      347:15 +CPU=  0.875
  08:05:09 STEP     1390 H=      347:30 +CPU=  0.503
  08:05:10 STEP     1391 H=      347:45 +CPU=  0.660
  08:05:12 STEP     1392 H=      348:00 +CPU=  1.607
  08:05:12 STEP     1393 H=      348:15 +CPU=  0.468
  08:05:13 STEP     1394 H=      348:30 +CPU=  0.478
  08:05:13 STEP     1395 H=      348:45 +CPU=  0.487
  08:05:14 STEP     1396 H=      349:00 +CPU=  0.760
  08:05:14 STEP     1397 H=      349:15 +CPU=  0.495
  08:05:15 STEP     1398 H=      349:30 +CPU=  0.907
  08:05:16 STEP     1399 H=      349:45 +CPU=  0.472
  08:05:16 STEP     1400 H=      350:00 +CPU=  0.757
  08:05:17 STEP     1401 H=      350:15 +CPU=  0.722
  08:05:18 STEP     1402 H=      350:30 +CPU=  0.472
  08:05:18 STEP     1403 H=      350:45 +CPU=  0.475
  08:05:19 STEP     1404 H=      351:00 +CPU=  1.310
  08:05:20 STEP     1405 H=      351:15 +CPU=  0.474
  08:05:20 STEP     1406 H=      351:30 +CPU=  0.486
  08:05:21 STEP     1407 H=      351:45 +CPU=  0.763
  08:05:22 STEP     1408 H=      352:00 +CPU=  0.754
  08:05:22 STEP     1409 H=      352:15 +CPU=  0.474
  08:05:23 STEP     1410 H=      352:30 +CPU=  0.786
  08:05:24 STEP     1411 H=      352:45 +CPU=  0.464
  08:05:24 STEP     1412 H=      353:00 +CPU=  0.750
  08:05:25 STEP     1413 H=      353:15 +CPU=  0.752
  08:05:26 STEP     1414 H=      353:30 +CPU=  0.465
  08:05:26 STEP     1415 H=      353:45 +CPU=  0.484
  08:05:28 STEP     1416 H=      354:00 +CPU=  1.496
  08:05:28 STEP     1417 H=      354:15 +CPU=  0.465
  08:05:29 STEP     1418 H=      354:30 +CPU=  0.472
  08:05:29 STEP     1419 H=      354:45 +CPU=  0.461
  08:05:30 STEP     1420 H=      355:00 +CPU=  0.747
  08:05:31 STEP     1421 H=      355:15 +CPU=  0.465
  08:05:32 STEP     1422 H=      355:30 +CPU=  0.925
  08:05:32 STEP     1423 H=      355:45 +CPU=  0.466
  08:05:33 STEP     1424 H=      356:00 +CPU=  0.752
  08:05:34 STEP     1425 H=      356:15 +CPU=  0.769
  08:05:34 STEP     1426 H=      356:30 +CPU=  0.464
  08:05:34 STEP     1427 H=      356:45 +CPU=  0.469
  08:05:36 STEP     1428 H=      357:00 +CPU=  1.325
  08:05:36 STEP     1429 H=      357:15 +CPU=  0.467
  08:05:37 STEP     1430 H=      357:30 +CPU=  0.629
  08:05:38 STEP     1431 H=      357:45 +CPU=  0.623
  08:05:38 STEP     1432 H=      358:00 +CPU=  0.751
  08:05:39 STEP     1433 H=      358:15 +CPU=  0.631
  08:05:40 STEP     1434 H=      358:30 +CPU=  0.878
  08:05:40 STEP     1435 H=      358:45 +CPU=  0.470
  08:05:41 STEP     1436 H=      359:00 +CPU=  0.755
  08:05:42 STEP     1437 H=      359:15 +CPU=  0.780
  08:05:42 STEP     1438 H=      359:30 +CPU=  0.467
  08:05:43 STEP     1439 H=      359:45 +CPU=  0.475
  08:05:45 STEP     1440 H=      360:00 +CPU=  1.554
  08:05:45 STEP     1441 H=      360:15 +CPU=  0.469
  08:05:46 STEP     1442 H=      360:30 +CPU=  0.479
  08:05:46 STEP     1443 H=      360:45 +CPU=  0.472
  08:05:47 STEP     1444 H=      361:00 +CPU=  0.751
  08:05:47 STEP     1445 H=      361:15 +CPU=  0.474
  08:05:48 STEP     1446 H=      361:30 +CPU=  0.933
  08:05:49 STEP     1447 H=      361:45 +CPU=  0.472
  08:05:50 STEP     1448 H=      362:00 +CPU=  0.758
  08:05:50 STEP     1449 H=      362:15 +CPU=  0.794
  08:05:51 STEP     1450 H=      362:30 +CPU=  0.472
  08:05:51 STEP     1451 H=      362:45 +CPU=  0.481
  08:05:53 STEP     1452 H=      363:00 +CPU=  1.412
  08:05:53 STEP     1453 H=      363:15 +CPU=  0.472
  08:05:54 STEP     1454 H=      363:30 +CPU=  0.489
  08:05:54 STEP     1455 H=      363:45 +CPU=  0.753
  08:05:55 STEP     1456 H=      364:00 +CPU=  0.754
  08:05:56 STEP     1457 H=      364:15 +CPU=  0.478
  08:05:56 STEP     1458 H=      364:30 +CPU=  0.796
  08:05:57 STEP     1459 H=      364:45 +CPU=  0.467
  08:05:58 STEP     1460 H=      365:00 +CPU=  0.755
  08:05:58 STEP     1461 H=      365:15 +CPU=  0.754
  08:05:59 STEP     1462 H=      365:30 +CPU=  0.466
  08:05:59 STEP     1463 H=      365:45 +CPU=  0.473
  08:06:01 STEP     1464 H=      366:00 +CPU=  1.505
  08:06:01 STEP     1465 H=      366:15 +CPU=  0.467
  08:06:02 STEP     1466 H=      366:30 +CPU=  0.474
  08:06:02 STEP     1467 H=      366:45 +CPU=  0.470
  08:06:03 STEP     1468 H=      367:00 +CPU=  0.746
  08:06:04 STEP     1469 H=      367:15 +CPU=  0.649
  08:06:04 STEP     1470 H=      367:30 +CPU=  0.717
  08:06:05 STEP     1471 H=      367:45 +CPU=  0.467
  08:06:06 STEP     1472 H=      368:00 +CPU=  0.918
  08:06:06 STEP     1473 H=      368:15 +CPU=  0.583
  08:06:07 STEP     1474 H=      368:30 +CPU=  0.474
  08:06:07 STEP     1475 H=      368:45 +CPU=  0.501
  08:06:09 STEP     1476 H=      369:00 +CPU=  1.463
  08:06:09 STEP     1477 H=      369:15 +CPU=  0.530
  08:06:10 STEP     1478 H=      369:30 +CPU=  0.530
  08:06:11 STEP     1479 H=      369:45 +CPU=  0.911
  08:06:12 STEP     1480 H=      370:00 +CPU=  0.885
  08:06:12 STEP     1481 H=      370:15 +CPU=  0.502
  08:06:13 STEP     1482 H=      370:30 +CPU=  0.628
  08:06:13 STEP     1483 H=      370:45 +CPU=  0.479
  08:06:14 STEP     1484 H=      371:00 +CPU=  0.764
  08:06:15 STEP     1485 H=      371:15 +CPU=  0.761
  08:06:15 STEP     1486 H=      371:30 +CPU=  0.472
  08:06:16 STEP     1487 H=      371:45 +CPU=  0.478
  08:06:18 STEP     1488 H=      372:00 +CPU=  1.483
  08:06:18 STEP     1489 H=      372:15 +CPU=  0.461
  08:06:19 STEP     1490 H=      372:30 +CPU=  0.474
  08:06:19 STEP     1491 H=      372:45 +CPU=  0.466
  08:06:20 STEP     1492 H=      373:00 +CPU=  0.756
  08:06:20 STEP     1493 H=      373:15 +CPU=  0.474
  08:06:21 STEP     1494 H=      373:30 +CPU=  0.967
  08:06:22 STEP     1495 H=      373:45 +CPU=  0.467
  08:06:23 STEP     1496 H=      374:00 +CPU=  0.760
  08:06:23 STEP     1497 H=      374:15 +CPU=  0.789
  08:06:24 STEP     1498 H=      374:30 +CPU=  0.472
  08:06:24 STEP     1499 H=      374:45 +CPU=  0.475
  08:06:26 STEP     1500 H=      375:00 +CPU=  1.321
  08:06:26 STEP     1501 H=      375:15 +CPU=  0.480
  08:06:27 STEP     1502 H=      375:30 +CPU=  0.642
  08:06:27 STEP     1503 H=      375:45 +CPU=  0.613
  08:06:28 STEP     1504 H=      376:00 +CPU=  0.765
  08:06:29 STEP     1505 H=      376:15 +CPU=  0.482
  08:06:30 STEP     1506 H=      376:30 +CPU=  0.811
  08:06:30 STEP     1507 H=      376:45 +CPU=  0.477
  08:06:31 STEP     1508 H=      377:00 +CPU=  0.922
  08:06:31 STEP     1509 H=      377:15 +CPU=  0.574
  08:06:32 STEP     1510 H=      377:30 +CPU=  0.472
  08:06:32 STEP     1511 H=      377:45 +CPU=  0.475
  08:06:34 STEP     1512 H=      378:00 +CPU=  1.615
  08:06:35 STEP     1513 H=      378:15 +CPU=  0.469
  08:06:35 STEP     1514 H=      378:30 +CPU=  0.474
  08:06:36 STEP     1515 H=      378:45 +CPU=  0.468
  08:06:36 STEP     1516 H=      379:00 +CPU=  0.753
  08:06:37 STEP     1517 H=      379:15 +CPU=  0.475
  08:06:38 STEP     1518 H=      379:30 +CPU=  0.939
  08:06:38 STEP     1519 H=      379:45 +CPU=  0.469
  08:06:39 STEP     1520 H=      380:00 +CPU=  0.756
  08:06:40 STEP     1521 H=      380:15 +CPU=  0.952
  08:06:40 STEP     1522 H=      380:30 +CPU=  0.466
  08:06:41 STEP     1523 H=      380:45 +CPU=  0.467
  08:06:42 STEP     1524 H=      381:00 +CPU=  1.325
  08:06:43 STEP     1525 H=      381:15 +CPU=  0.462
  08:06:43 STEP     1526 H=      381:30 +CPU=  0.469
  08:06:44 STEP     1527 H=      381:45 +CPU=  0.734
  08:06:45 STEP     1528 H=      382:00 +CPU=  0.889
  08:06:45 STEP     1529 H=      382:15 +CPU=  0.467
  08:06:46 STEP     1530 H=      382:30 +CPU=  0.624
  08:06:46 STEP     1531 H=      382:45 +CPU=  0.464
  08:06:47 STEP     1532 H=      383:00 +CPU=  0.752
  08:06:48 STEP     1533 H=      383:15 +CPU=  0.800
  08:06:48 STEP     1534 H=      383:30 +CPU=  0.462
  08:06:49 STEP     1535 H=      383:45 +CPU=  0.468
  08:06:50 STEP     1536 H=      384:00 +CPU=  1.546
  08:06:51 STEP     1537 H=      384:15 +CPU=  0.465
  08:06:51 STEP     1538 H=      384:30 +CPU=  0.471
  08:06:52 STEP     1539 H=      384:45 +CPU=  0.507
  08:06:53 STEP     1540 H=      385:00 +CPU=  0.751
  08:06:53 STEP     1541 H=      385:15 +CPU=  0.475
  08:06:54 STEP     1542 H=      385:30 +CPU=  0.924
  08:06:55 STEP     1543 H=      385:45 +CPU=  0.470
  08:06:55 STEP     1544 H=      386:00 +CPU=  0.754
  08:06:56 STEP     1545 H=      386:15 +CPU=  0.746
  08:06:57 STEP     1546 H=      386:30 +CPU=  0.469
  08:06:57 STEP     1547 H=      386:45 +CPU=  0.474
  08:06:58 STEP     1548 H=      387:00 +CPU=  1.353
  08:06:59 STEP     1549 H=      387:15 +CPU=  0.469
  08:06:59 STEP     1550 H=      387:30 +CPU=  0.471
  08:07:00 STEP     1551 H=      387:45 +CPU=  0.738
  08:07:01 STEP     1552 H=      388:00 +CPU=  0.749
  08:07:01 STEP     1553 H=      388:15 +CPU=  0.473
  08:07:02 STEP     1554 H=      388:30 +CPU=  0.743
  08:07:02 STEP     1555 H=      388:45 +CPU=  0.467
  08:07:03 STEP     1556 H=      389:00 +CPU=  0.757
  08:07:04 STEP     1557 H=      389:15 +CPU=  0.728
  08:07:04 STEP     1558 H=      389:30 +CPU=  0.467
  08:07:05 STEP     1559 H=      389:45 +CPU=  0.475
  08:07:07 STEP     1560 H=      390:00 +CPU=  1.499
  08:07:07 STEP     1561 H=      390:15 +CPU=  0.464
  08:07:08 STEP     1562 H=      390:30 +CPU=  0.471
  08:07:08 STEP     1563 H=      390:45 +CPU=  0.467
  08:07:09 STEP     1564 H=      391:00 +CPU=  0.752
  08:07:10 STEP     1565 H=      391:15 +CPU=  0.625
  08:07:11 STEP     1566 H=      391:30 +CPU=  0.952
  08:07:11 STEP     1567 H=      391:45 +CPU=  0.466
  08:07:12 STEP     1568 H=      392:00 +CPU=  0.747
  08:07:13 STEP     1569 H=      392:15 +CPU=  0.837
  08:07:13 STEP     1570 H=      392:30 +CPU=  0.486
  08:07:14 STEP     1571 H=      392:45 +CPU=  0.474
  08:07:15 STEP     1572 H=      393:00 +CPU=  1.323
  08:07:15 STEP     1573 H=      393:15 +CPU=  0.469
  08:07:16 STEP     1574 H=      393:30 +CPU=  0.472
  08:07:17 STEP     1575 H=      393:45 +CPU=  0.733
  08:07:17 STEP     1576 H=      394:00 +CPU=  0.749
  08:07:18 STEP     1577 H=      394:15 +CPU=  0.585
  08:07:19 STEP     1578 H=      394:30 +CPU=  0.904
  08:07:19 STEP     1579 H=      394:45 +CPU=  0.465
  08:07:20 STEP     1580 H=      395:00 +CPU=  0.747
  08:07:21 STEP     1581 H=      395:15 +CPU=  0.738
  08:07:21 STEP     1582 H=      395:30 +CPU=  0.466
  08:07:22 STEP     1583 H=      395:45 +CPU=  0.471
  08:07:23 STEP     1584 H=      396:00 +CPU=  1.615
  08:07:24 STEP     1585 H=      396:15 +CPU=  0.467
  08:07:24 STEP     1586 H=      396:30 +CPU=  0.468
  08:07:25 STEP     1587 H=      396:45 +CPU=  0.476
  08:07:26 STEP     1588 H=      397:00 +CPU=  0.750
  08:07:26 STEP     1589 H=      397:15 +CPU=  0.480
  08:07:27 STEP     1590 H=      397:30 +CPU=  0.945
  08:07:27 STEP     1591 H=      397:45 +CPU=  0.473
  08:07:28 STEP     1592 H=      398:00 +CPU=  0.769
  08:07:29 STEP     1593 H=      398:15 +CPU=  0.797
  08:07:30 STEP     1594 H=      398:30 +CPU=  0.476
  08:07:30 STEP     1595 H=      398:45 +CPU=  0.485
  08:07:31 STEP     1596 H=      399:00 +CPU=  1.310
  08:07:32 STEP     1597 H=      399:15 +CPU=  0.478
  08:07:32 STEP     1598 H=      399:30 +CPU=  0.482
  08:07:33 STEP     1599 H=      399:45 +CPU=  0.740
  08:07:34 STEP     1600 H=      400:00 +CPU=  0.766
  08:07:34 STEP     1601 H=      400:15 +CPU=  0.482
  08:07:35 STEP     1602 H=      400:30 +CPU=  0.720
  08:07:35 STEP     1603 H=      400:45 +CPU=  0.473
  08:07:36 STEP     1604 H=      401:00 +CPU=  0.760
  08:07:37 STEP     1605 H=      401:15 +CPU=  0.754
  08:07:37 STEP     1606 H=      401:30 +CPU=  0.472
  08:07:38 STEP     1607 H=      401:45 +CPU=  0.480
  08:07:40 STEP     1608 H=      402:00 +CPU=  1.704
  08:07:40 STEP     1609 H=      402:15 +CPU=  0.466
  08:07:41 STEP     1610 H=      402:30 +CPU=  0.476
  08:07:41 STEP     1611 H=      402:45 +CPU=  0.465
  08:07:42 STEP     1612 H=      403:00 +CPU=  0.756
  08:07:43 STEP     1613 H=      403:15 +CPU=  0.475
  08:07:43 STEP     1614 H=      403:30 +CPU=  0.910
  08:07:44 STEP     1615 H=      403:45 +CPU=  0.467
  08:07:45 STEP     1616 H=      404:00 +CPU=  0.753
  08:07:45 STEP     1617 H=      404:15 +CPU=  0.760
  08:07:46 STEP     1618 H=      404:30 +CPU=  0.471
  08:07:46 STEP     1619 H=      404:45 +CPU=  0.467
  08:07:48 STEP     1620 H=      405:00 +CPU=  1.341
  08:07:48 STEP     1621 H=      405:15 +CPU=  0.469
  08:07:49 STEP     1622 H=      405:30 +CPU=  0.469
  08:07:49 STEP     1623 H=      405:45 +CPU=  0.765
  08:07:50 STEP     1624 H=      406:00 +CPU=  0.749
  08:07:51 STEP     1625 H=      406:15 +CPU=  0.475
  08:07:51 STEP     1626 H=      406:30 +CPU=  0.853
  08:07:52 STEP     1627 H=      406:45 +CPU=  0.465
  08:07:53 STEP     1628 H=      407:00 +CPU=  0.755
  08:07:54 STEP     1629 H=      407:15 +CPU=  0.874
  08:07:54 STEP     1630 H=      407:30 +CPU=  0.465
  08:07:55 STEP     1631 H=      407:45 +CPU=  0.466
  08:07:56 STEP     1632 H=      408:00 +CPU=  1.505
  08:07:57 STEP     1633 H=      408:15 +CPU=  0.461
  08:07:57 STEP     1634 H=      408:30 +CPU=  0.472
  08:07:58 STEP     1635 H=      408:45 +CPU=  0.473
  08:07:58 STEP     1636 H=      409:00 +CPU=  0.749
  08:07:59 STEP     1637 H=      409:15 +CPU=  0.467
  08:08:00 STEP     1638 H=      409:30 +CPU=  0.931
  08:08:00 STEP     1639 H=      409:45 +CPU=  0.463
  08:08:01 STEP     1640 H=      410:00 +CPU=  0.760
  08:08:02 STEP     1641 H=      410:15 +CPU=  0.720
  08:08:02 STEP     1642 H=      410:30 +CPU=  0.465
  08:08:03 STEP     1643 H=      410:45 +CPU=  0.623
  08:08:04 STEP     1644 H=      411:00 +CPU=  1.157
  08:08:04 STEP     1645 H=      411:15 +CPU=  0.463
  08:08:05 STEP     1646 H=      411:30 +CPU=  0.470
  08:08:06 STEP     1647 H=      411:45 +CPU=  0.750
  08:08:06 STEP     1648 H=      412:00 +CPU=  0.747
  08:08:07 STEP     1649 H=      412:15 +CPU=  0.479
  08:08:08 STEP     1650 H=      412:30 +CPU=  0.734
  08:08:08 STEP     1651 H=      412:45 +CPU=  0.465
  08:08:09 STEP     1652 H=      413:00 +CPU=  0.795
  08:08:10 STEP     1653 H=      413:15 +CPU=  0.947
  08:08:10 STEP     1654 H=      413:30 +CPU=  0.498
  08:08:11 STEP     1655 H=      413:45 +CPU=  0.483
  08:08:12 STEP     1656 H=      414:00 +CPU=  1.613
  08:08:13 STEP     1657 H=      414:15 +CPU=  0.470
  08:08:13 STEP     1658 H=      414:30 +CPU=  0.472
  08:08:14 STEP     1659 H=      414:45 +CPU=  0.467
  08:08:15 STEP     1660 H=      415:00 +CPU=  0.788
  08:08:15 STEP     1661 H=      415:15 +CPU=  0.475
  08:08:16 STEP     1662 H=      415:30 +CPU=  0.904
  08:08:17 STEP     1663 H=      415:45 +CPU=  0.466
  08:08:17 STEP     1664 H=      416:00 +CPU=  0.757
  08:08:18 STEP     1665 H=      416:15 +CPU=  0.743
  08:08:18 STEP     1666 H=      416:30 +CPU=  0.468
  08:08:19 STEP     1667 H=      416:45 +CPU=  0.470
  08:08:20 STEP     1668 H=      417:00 +CPU=  1.300
  08:08:21 STEP     1669 H=      417:15 +CPU=  0.466
  08:08:21 STEP     1670 H=      417:30 +CPU=  0.471
  08:08:22 STEP     1671 H=      417:45 +CPU=  0.809
  08:08:23 STEP     1672 H=      418:00 +CPU=  0.746
  08:08:23 STEP     1673 H=      418:15 +CPU=  0.465
  08:08:24 STEP     1674 H=      418:30 +CPU=  0.805
  08:08:24 STEP     1675 H=      418:45 +CPU=  0.458
  08:08:25 STEP     1676 H=      419:00 +CPU=  0.759
  08:08:26 STEP     1677 H=      419:15 +CPU=  0.781
  08:08:27 STEP     1678 H=      419:30 +CPU=  0.463
  08:08:27 STEP     1679 H=      419:45 +CPU=  0.472
  08:08:29 STEP     1680 H=      420:00 +CPU=  1.514
  08:08:29 STEP     1681 H=      420:15 +CPU=  0.461
  08:08:30 STEP     1682 H=      420:30 +CPU=  0.465
  08:08:30 STEP     1683 H=      420:45 +CPU=  0.509
  08:08:31 STEP     1684 H=      421:00 +CPU=  0.752
  08:08:31 STEP     1685 H=      421:15 +CPU=  0.478
  08:08:32 STEP     1686 H=      421:30 +CPU=  0.902
  08:08:33 STEP     1687 H=      421:45 +CPU=  0.472
  08:08:33 STEP     1688 H=      422:00 +CPU=  0.765
  08:08:34 STEP     1689 H=      422:15 +CPU=  0.778
  08:08:35 STEP     1690 H=      422:30 +CPU=  0.474
  08:08:35 STEP     1691 H=      422:45 +CPU=  0.475
  08:08:36 STEP     1692 H=      423:00 +CPU=  1.317
  08:08:37 STEP     1693 H=      423:15 +CPU=  0.469
  08:08:37 STEP     1694 H=      423:30 +CPU=  0.473
  08:08:38 STEP     1695 H=      423:45 +CPU=  0.793
  08:08:39 STEP     1696 H=      424:00 +CPU=  0.752
  08:08:40 STEP     1697 H=      424:15 +CPU=  0.625
  08:08:40 STEP     1698 H=      424:30 +CPU=  0.791
  08:08:41 STEP     1699 H=      424:45 +CPU=  0.463
  08:08:42 STEP     1700 H=      425:00 +CPU=  0.755
  08:08:42 STEP     1701 H=      425:15 +CPU=  0.732
  08:08:43 STEP     1702 H=      425:30 +CPU=  0.468
  08:08:43 STEP     1703 H=      425:45 +CPU=  0.467
  08:08:45 STEP     1704 H=      426:00 +CPU=  1.540
  08:08:45 STEP     1705 H=      426:15 +CPU=  0.466
  08:08:46 STEP     1706 H=      426:30 +CPU=  0.469
  08:08:46 STEP     1707 H=      426:45 +CPU=  0.536
  08:08:47 STEP     1708 H=      427:00 +CPU=  0.749
  08:08:48 STEP     1709 H=      427:15 +CPU=  0.470
  08:08:48 STEP     1710 H=      427:30 +CPU=  0.841
  08:08:49 STEP     1711 H=      427:45 +CPU=  0.468
  08:08:50 STEP     1712 H=      428:00 +CPU=  0.757
  08:08:50 STEP     1713 H=      428:15 +CPU=  0.801
  08:08:51 STEP     1714 H=      428:30 +CPU=  0.473
  08:08:51 STEP     1715 H=      428:45 +CPU=  0.474
  08:08:53 STEP     1716 H=      429:00 +CPU=  1.420
  08:08:53 STEP     1717 H=      429:15 +CPU=  0.473
  08:08:54 STEP     1718 H=      429:30 +CPU=  0.475
  08:08:55 STEP     1719 H=      429:45 +CPU=  0.796
  08:08:55 STEP     1720 H=      430:00 +CPU=  0.749
  08:08:56 STEP     1721 H=      430:15 +CPU=  0.476
  08:08:57 STEP     1722 H=      430:30 +CPU=  0.793
  08:08:57 STEP     1723 H=      430:45 +CPU=  0.471
  08:08:58 STEP     1724 H=      431:00 +CPU=  0.756
  08:08:59 STEP     1725 H=      431:15 +CPU=  0.941
  08:08:59 STEP     1726 H=      431:30 +CPU=  0.468
  08:09:00 STEP     1727 H=      431:45 +CPU=  0.474
  08:09:01 STEP     1728 H=      432:00 +CPU=  1.481
  08:09:02 STEP     1729 H=      432:15 +CPU=  0.471
  08:09:02 STEP     1730 H=      432:30 +CPU=  0.474
  08:09:03 STEP     1731 H=      432:45 +CPU=  0.466
  08:09:04 STEP     1732 H=      433:00 +CPU=  0.756
  08:09:04 STEP     1733 H=      433:15 +CPU=  0.466
  08:09:05 STEP     1734 H=      433:30 +CPU=  0.954
  08:09:06 STEP     1735 H=      433:45 +CPU=  0.475
  08:09:06 STEP     1736 H=      434:00 +CPU=  0.757
  08:09:07 STEP     1737 H=      434:15 +CPU=  0.753
  08:09:08 STEP     1738 H=      434:30 +CPU=  0.479
  08:09:08 STEP     1739 H=      434:45 +CPU=  0.473
  08:09:09 STEP     1740 H=      435:00 +CPU=  1.461
  08:09:10 STEP     1741 H=      435:15 +CPU=  0.488
  08:09:10 STEP     1742 H=      435:30 +CPU=  0.472
  08:09:11 STEP     1743 H=      435:45 +CPU=  0.898
  08:09:12 STEP     1744 H=      436:00 +CPU=  0.776
  08:09:13 STEP     1745 H=      436:15 +CPU=  0.631
  08:09:13 STEP     1746 H=      436:30 +CPU=  0.563
  08:09:14 STEP     1747 H=      436:45 +CPU=  0.469
  08:09:15 STEP     1748 H=      437:00 +CPU=  0.752
  08:09:15 STEP     1749 H=      437:15 +CPU=  0.838
  08:09:16 STEP     1750 H=      437:30 +CPU=  0.464
  08:09:16 STEP     1751 H=      437:45 +CPU=  0.468
  08:09:18 STEP     1752 H=      438:00 +CPU=  1.516
  08:09:18 STEP     1753 H=      438:15 +CPU=  0.456
  08:09:19 STEP     1754 H=      438:30 +CPU=  0.475
  08:09:19 STEP     1755 H=      438:45 +CPU=  0.462
  08:09:20 STEP     1756 H=      439:00 +CPU=  0.748
  08:09:21 STEP     1757 H=      439:15 +CPU=  0.469
  08:09:22 STEP     1758 H=      439:30 +CPU=  0.974
  08:09:22 STEP     1759 H=      439:45 +CPU=  0.464
  08:09:23 STEP     1760 H=      440:00 +CPU=  0.754
  08:09:24 STEP     1761 H=      440:15 +CPU=  0.772
  08:09:24 STEP     1762 H=      440:30 +CPU=  0.465
  08:09:24 STEP     1763 H=      440:45 +CPU=  0.466
  08:09:26 STEP     1764 H=      441:00 +CPU=  1.336
  08:09:26 STEP     1765 H=      441:15 +CPU=  0.475
  08:09:27 STEP     1766 H=      441:30 +CPU=  0.473
  08:09:28 STEP     1767 H=      441:45 +CPU=  0.769
  08:09:28 STEP     1768 H=      442:00 +CPU=  0.747
  08:09:29 STEP     1769 H=      442:15 +CPU=  0.465
  08:09:30 STEP     1770 H=      442:30 +CPU=  0.788
  08:09:30 STEP     1771 H=      442:45 +CPU=  0.465
  08:09:31 STEP     1772 H=      443:00 +CPU=  0.759
  08:09:32 STEP     1773 H=      443:15 +CPU=  0.762
  08:09:32 STEP     1774 H=      443:30 +CPU=  0.467
  08:09:32 STEP     1775 H=      443:45 +CPU=  0.471
  08:09:34 STEP     1776 H=      444:00 +CPU=  1.533
  08:09:35 STEP     1777 H=      444:15 +CPU=  0.470
  08:09:35 STEP     1778 H=      444:30 +CPU=  0.471
  08:09:36 STEP     1779 H=      444:45 +CPU=  0.469
  08:09:36 STEP     1780 H=      445:00 +CPU=  0.753
  08:09:37 STEP     1781 H=      445:15 +CPU=  0.632
  08:09:38 STEP     1782 H=      445:30 +CPU=  0.775
  08:09:38 STEP     1783 H=      445:45 +CPU=  0.473
  08:09:39 STEP     1784 H=      446:00 +CPU=  0.912
  08:09:40 STEP     1785 H=      446:15 +CPU=  0.788
  08:09:40 STEP     1786 H=      446:30 +CPU=  0.472
  08:09:41 STEP     1787 H=      446:45 +CPU=  0.482
  08:09:42 STEP     1788 H=      447:00 +CPU=  1.284
  08:09:43 STEP     1789 H=      447:15 +CPU=  0.474
  08:09:43 STEP     1790 H=      447:30 +CPU=  0.482
  08:09:44 STEP     1791 H=      447:45 +CPU=  0.732
  08:09:45 STEP     1792 H=      448:00 +CPU=  0.759
  08:09:45 STEP     1793 H=      448:15 +CPU=  0.480
  08:09:46 STEP     1794 H=      448:30 +CPU=  0.750
  08:09:46 STEP     1795 H=      448:45 +CPU=  0.470
  08:09:47 STEP     1796 H=      449:00 +CPU=  0.912
  08:09:48 STEP     1797 H=      449:15 +CPU=  0.627
  08:09:48 STEP     1798 H=      449:30 +CPU=  0.463
  08:09:49 STEP     1799 H=      449:45 +CPU=  0.473
  08:09:51 STEP     1800 H=      450:00 +CPU=  1.552
  08:09:51 STEP     1801 H=      450:15 +CPU=  0.463
  08:09:52 STEP     1802 H=      450:30 +CPU=  0.468
  08:09:52 STEP     1803 H=      450:45 +CPU=  0.467
  08:09:53 STEP     1804 H=      451:00 +CPU=  0.748
  08:09:53 STEP     1805 H=      451:15 +CPU=  0.469
  08:09:54 STEP     1806 H=      451:30 +CPU=  0.960
  08:09:55 STEP     1807 H=      451:45 +CPU=  0.458
  08:09:56 STEP     1808 H=      452:00 +CPU=  0.752
  08:09:56 STEP     1809 H=      452:15 +CPU=  0.827
  08:09:57 STEP     1810 H=      452:30 +CPU=  0.463
  08:09:57 STEP     1811 H=      452:45 +CPU=  0.625
  08:09:59 STEP     1812 H=      453:00 +CPU=  1.178
  08:09:59 STEP     1813 H=      453:15 +CPU=  0.469
  08:10:00 STEP     1814 H=      453:30 +CPU=  0.466
  08:10:00 STEP     1815 H=      453:45 +CPU=  0.743
  08:10:01 STEP     1816 H=      454:00 +CPU=  0.750
  08:10:02 STEP     1817 H=      454:15 +CPU=  0.468
  08:10:02 STEP     1818 H=      454:30 +CPU=  0.758
  08:10:03 STEP     1819 H=      454:45 +CPU=  0.463
  08:10:04 STEP     1820 H=      455:00 +CPU=  0.752
  08:10:04 STEP     1821 H=      455:15 +CPU=  0.754
  08:10:05 STEP     1822 H=      455:30 +CPU=  0.464
  08:10:05 STEP     1823 H=      455:45 +CPU=  0.469
  08:10:07 STEP     1824 H=      456:00 +CPU=  1.537
  08:10:07 STEP     1825 H=      456:15 +CPU=  0.487
  08:10:08 STEP     1826 H=      456:30 +CPU=  0.467
  08:10:08 STEP     1827 H=      456:45 +CPU=  0.463
  08:10:09 STEP     1828 H=      457:00 +CPU=  0.891
  08:10:10 STEP     1829 H=      457:15 +CPU=  0.631
  08:10:11 STEP     1830 H=      457:30 +CPU=  0.893
  08:10:11 STEP     1831 H=      457:45 +CPU=  0.447
  08:10:12 STEP     1832 H=      458:00 +CPU=  0.900
  08:10:13 STEP     1833 H=      458:15 +CPU=  0.649
  08:10:13 STEP     1834 H=      458:30 +CPU=  0.509
  08:10:14 STEP     1835 H=      458:45 +CPU=  0.624
  08:10:15 STEP     1836 H=      459:00 +CPU=  1.188
  08:10:16 STEP     1837 H=      459:15 +CPU=  0.462
  08:10:16 STEP     1838 H=      459:30 +CPU=  0.468
  08:10:17 STEP     1839 H=      459:45 +CPU=  0.734
  08:10:17 STEP     1840 H=      460:00 +CPU=  0.750
  08:10:18 STEP     1841 H=      460:15 +CPU=  0.471
  08:10:19 STEP     1842 H=      460:30 +CPU=  0.744
  08:10:19 STEP     1843 H=      460:45 +CPU=  0.466
  08:10:20 STEP     1844 H=      461:00 +CPU=  0.752
  08:10:21 STEP     1845 H=      461:15 +CPU=  0.757
  08:10:21 STEP     1846 H=      461:30 +CPU=  0.465
  08:10:22 STEP     1847 H=      461:45 +CPU=  0.474
  08:10:23 STEP     1848 H=      462:00 +CPU=  1.572
  08:10:24 STEP     1849 H=      462:15 +CPU=  0.468
  08:10:24 STEP     1850 H=      462:30 +CPU=  0.478
  08:10:25 STEP     1851 H=      462:45 +CPU=  0.463
  08:10:25 STEP     1852 H=      463:00 +CPU=  0.749
  08:10:26 STEP     1853 H=      463:15 +CPU=  0.619
  08:10:27 STEP     1854 H=      463:30 +CPU=  0.799
  08:10:27 STEP     1855 H=      463:45 +CPU=  0.466
  08:10:28 STEP     1856 H=      464:00 +CPU=  0.756
  08:10:29 STEP     1857 H=      464:15 +CPU=  0.765
  08:10:29 STEP     1858 H=      464:30 +CPU=  0.469
  08:10:30 STEP     1859 H=      464:45 +CPU=  0.473
  08:10:31 STEP     1860 H=      465:00 +CPU=  1.316
  08:10:32 STEP     1861 H=      465:15 +CPU=  0.468
  08:10:32 STEP     1862 H=      465:30 +CPU=  0.630
  08:10:33 STEP     1863 H=      465:45 +CPU=  0.609
  08:10:34 STEP     1864 H=      466:00 +CPU=  0.750
  08:10:34 STEP     1865 H=      466:15 +CPU=  0.483
  08:10:35 STEP     1866 H=      466:30 +CPU=  0.767
  08:10:35 STEP     1867 H=      466:45 +CPU=  0.467
  08:10:36 STEP     1868 H=      467:00 +CPU=  0.756
  08:10:37 STEP     1869 H=      467:15 +CPU=  0.732
  08:10:37 STEP     1870 H=      467:30 +CPU=  0.469
  08:10:38 STEP     1871 H=      467:45 +CPU=  0.474
  08:10:40 STEP     1872 H=      468:00 +CPU=  1.710
  08:10:40 STEP     1873 H=      468:15 +CPU=  0.465
  08:10:41 STEP     1874 H=      468:30 +CPU=  0.481
  08:10:41 STEP     1875 H=      468:45 +CPU=  0.467
  08:10:42 STEP     1876 H=      469:00 +CPU=  0.754
  08:10:42 STEP     1877 H=      469:15 +CPU=  0.481
  08:10:43 STEP     1878 H=      469:30 +CPU=  0.892
  08:10:44 STEP     1879 H=      469:45 +CPU=  0.472
  08:10:44 STEP     1880 H=      470:00 +CPU=  0.765
  08:10:45 STEP     1881 H=      470:15 +CPU=  0.758
  08:10:46 STEP     1882 H=      470:30 +CPU=  0.479
  08:10:46 STEP     1883 H=      470:45 +CPU=  0.493
  08:10:48 STEP     1884 H=      471:00 +CPU=  1.319
  08:10:48 STEP     1885 H=      471:15 +CPU=  0.481
  08:10:48 STEP     1886 H=      471:30 +CPU=  0.484
  08:10:49 STEP     1887 H=      471:45 +CPU=  0.712
  08:10:50 STEP     1888 H=      472:00 +CPU=  0.759
  08:10:50 STEP     1889 H=      472:15 +CPU=  0.477
  08:10:51 STEP     1890 H=      472:30 +CPU=  0.772
  08:10:52 STEP     1891 H=      472:45 +CPU=  0.468
  08:10:52 STEP     1892 H=      473:00 +CPU=  0.756
  08:10:53 STEP     1893 H=      473:15 +CPU=  0.901
  08:10:54 STEP     1894 H=      473:30 +CPU=  0.474
  08:10:54 STEP     1895 H=      473:45 +CPU=  0.471
  08:10:56 STEP     1896 H=      474:00 +CPU=  1.484
  08:10:56 STEP     1897 H=      474:15 +CPU=  0.463
  08:10:57 STEP     1898 H=      474:30 +CPU=  0.625
  08:10:57 STEP     1899 H=      474:45 +CPU=  0.469
  08:10:58 STEP     1900 H=      475:00 +CPU=  0.744
  08:10:59 STEP     1901 H=      475:15 +CPU=  0.470
  08:11:00 STEP     1902 H=      475:30 +CPU=  0.924
  08:11:00 STEP     1903 H=      475:45 +CPU=  0.463
  08:11:01 STEP     1904 H=      476:00 +CPU=  0.750
  08:11:02 STEP     1905 H=      476:15 +CPU=  0.737
  08:11:02 STEP     1906 H=      476:30 +CPU=  0.459
  08:11:03 STEP     1907 H=      476:45 +CPU=  0.466
  08:11:04 STEP     1908 H=      477:00 +CPU=  1.305
  08:11:04 STEP     1909 H=      477:15 +CPU=  0.460
  08:11:05 STEP     1910 H=      477:30 +CPU=  0.466
  08:11:06 STEP     1911 H=      477:45 +CPU=  0.784
  08:11:06 STEP     1912 H=      478:00 +CPU=  0.742
  08:11:07 STEP     1913 H=      478:15 +CPU=  0.642
  08:11:07 STEP     1914 H=      478:30 +CPU=  0.561
  08:11:08 STEP     1915 H=      478:45 +CPU=  0.468
  08:11:09 STEP     1916 H=      479:00 +CPU=  0.916
  08:11:10 STEP     1917 H=      479:15 +CPU=  0.902
  08:11:10 STEP     1918 H=      479:30 +CPU=  0.483
  08:11:11 STEP     1919 H=      479:45 +CPU=  0.475
  08:11:13 STEP     1920 H=      480:00 +CPU=  1.641
  08:11:13 STEP     1921 H=      480:15 +CPU=  0.480
  08:11:14 STEP     1922 H=      480:30 +CPU=  0.471
  08:11:14 STEP     1923 H=      480:45 +CPU=  0.491
  08:11:15 STEP     1924 H=      481:00 +CPU=  0.764
  08:11:15 STEP     1925 H=      481:15 +CPU=  0.473
  08:11:16 STEP     1926 H=      481:30 +CPU=  0.910
  08:11:17 STEP     1927 H=      481:45 +CPU=  0.464
  08:11:17 STEP     1928 H=      482:00 +CPU=  0.751
  08:11:18 STEP     1929 H=      482:15 +CPU=  0.747
  08:11:19 STEP     1930 H=      482:30 +CPU=  0.466
  08:11:19 STEP     1931 H=      482:45 +CPU=  0.472
  08:11:20 STEP     1932 H=      483:00 +CPU=  1.313
  08:11:21 STEP     1933 H=      483:15 +CPU=  0.467
  08:11:22 STEP     1934 H=      483:30 +CPU=  0.623
  08:11:22 STEP     1935 H=      483:45 +CPU=  0.649
  08:11:23 STEP     1936 H=      484:00 +CPU=  0.746
  08:11:23 STEP     1937 H=      484:15 +CPU=  0.471
  08:11:24 STEP     1938 H=      484:30 +CPU=  0.782
  08:11:25 STEP     1939 H=      484:45 +CPU=  0.467
  08:11:25 STEP     1940 H=      485:00 +CPU=  0.751
  08:11:26 STEP     1941 H=      485:15 +CPU=  0.796
  08:11:27 STEP     1942 H=      485:30 +CPU=  0.603
  08:11:27 STEP     1943 H=      485:45 +CPU=  0.473
  08:11:29 STEP     1944 H=      486:00 +CPU=  1.365
  08:11:29 STEP     1945 H=      486:15 +CPU=  0.463
  08:11:30 STEP     1946 H=      486:30 +CPU=  0.469
  08:11:30 STEP     1947 H=      486:45 +CPU=  0.465
  08:11:31 STEP     1948 H=      487:00 +CPU=  0.744
  08:11:32 STEP     1949 H=      487:15 +CPU=  0.478
  08:11:33 STEP     1950 H=      487:30 +CPU=  0.936
  08:11:33 STEP     1951 H=      487:45 +CPU=  0.468
  08:11:34 STEP     1952 H=      488:00 +CPU=  0.766
  08:11:34 STEP     1953 H=      488:15 +CPU=  0.697
  08:11:35 STEP     1954 H=      488:30 +CPU=  0.469
  08:11:35 STEP     1955 H=      488:45 +CPU=  0.472
  08:11:37 STEP     1956 H=      489:00 +CPU=  1.323
  08:11:37 STEP     1957 H=      489:15 +CPU=  0.467
  08:11:38 STEP     1958 H=      489:30 +CPU=  0.473
  08:11:38 STEP     1959 H=      489:45 +CPU=  0.799
  08:11:39 STEP     1960 H=      490:00 +CPU=  0.789
  08:11:40 STEP     1961 H=      490:15 +CPU=  0.595
  08:11:41 STEP     1962 H=      490:30 +CPU=  0.748
  08:11:41 STEP     1963 H=      490:45 +CPU=  0.468
  08:11:42 STEP     1964 H=      491:00 +CPU=  0.758
  08:11:43 STEP     1965 H=      491:15 +CPU=  0.732
  08:11:43 STEP     1966 H=      491:30 +CPU=  0.472
  08:11:44 STEP     1967 H=      491:45 +CPU=  0.475
  08:11:45 STEP     1968 H=      492:00 +CPU=  1.489
  08:11:46 STEP     1969 H=      492:15 +CPU=  0.470
  08:11:46 STEP     1970 H=      492:30 +CPU=  0.485
  08:11:47 STEP     1971 H=      492:45 +CPU=  0.500
  08:11:47 STEP     1972 H=      493:00 +CPU=  0.755
  08:11:48 STEP     1973 H=      493:15 +CPU=  0.640
  08:11:49 STEP     1974 H=      493:30 +CPU=  0.721
  08:11:49 STEP     1975 H=      493:45 +CPU=  0.473
  08:11:50 STEP     1976 H=      494:00 +CPU=  0.764
  08:11:51 STEP     1977 H=      494:15 +CPU=  0.772
  08:11:51 STEP     1978 H=      494:30 +CPU=  0.476
  08:11:52 STEP     1979 H=      494:45 +CPU=  0.483
  08:11:53 STEP     1980 H=      495:00 +CPU=  1.451
  08:11:54 STEP     1981 H=      495:15 +CPU=  0.479
  08:11:54 STEP     1982 H=      495:30 +CPU=  0.639
  08:11:55 STEP     1983 H=      495:45 +CPU=  0.571
  08:11:56 STEP     1984 H=      496:00 +CPU=  0.757
  08:11:56 STEP     1985 H=      496:15 +CPU=  0.480
  08:11:57 STEP     1986 H=      496:30 +CPU=  0.858
  08:11:57 STEP     1987 H=      496:45 +CPU=  0.469
  08:11:58 STEP     1988 H=      497:00 +CPU=  0.762
  08:11:59 STEP     1989 H=      497:15 +CPU=  0.757
  08:11:59 STEP     1990 H=      497:30 +CPU=  0.471
  08:12:00 STEP     1991 H=      497:45 +CPU=  0.474
  08:12:01 STEP     1992 H=      498:00 +CPU=  1.469
  08:12:02 STEP     1993 H=      498:15 +CPU=  0.470
  08:12:02 STEP     1994 H=      498:30 +CPU=  0.476
  08:12:03 STEP     1995 H=      498:45 +CPU=  0.480
  08:12:04 STEP     1996 H=      499:00 +CPU=  0.753
  08:12:04 STEP     1997 H=      499:15 +CPU=  0.478
  08:12:05 STEP     1998 H=      499:30 +CPU=  0.881
  08:12:05 STEP     1999 H=      499:45 +CPU=  0.496
  08:12:06 STEP     2000 H=      500:00 +CPU=  0.756
  08:12:07 STEP     2001 H=      500:15 +CPU=  0.716
  08:12:07 STEP     2002 H=      500:30 +CPU=  0.474
  08:12:08 STEP     2003 H=      500:45 +CPU=  0.475
  08:12:09 STEP     2004 H=      501:00 +CPU=  1.383
  08:12:10 STEP     2005 H=      501:15 +CPU=  0.633
  08:12:10 STEP     2006 H=      501:30 +CPU=  0.634
  08:12:11 STEP     2007 H=      501:45 +CPU=  0.669
  08:12:12 STEP     2008 H=      502:00 +CPU=  0.749
  08:12:12 STEP     2009 H=      502:15 +CPU=  0.484
  08:12:13 STEP     2010 H=      502:30 +CPU=  0.812
  08:12:14 STEP     2011 H=      502:45 +CPU=  0.460
  08:12:14 STEP     2012 H=      503:00 +CPU=  0.773
  08:12:15 STEP     2013 H=      503:15 +CPU=  0.736
  08:12:16 STEP     2014 H=      503:30 +CPU=  0.460
  08:12:16 STEP     2015 H=      503:45 +CPU=  0.624
  08:12:18 STEP     2016 H=      504:00 +CPU=  1.367
  08:12:18 STEP     2017 H=      504:15 +CPU=  0.460
  08:12:19 STEP     2018 H=      504:30 +CPU=  0.470
  08:12:19 STEP     2019 H=      504:45 +CPU=  0.534
  08:12:20 STEP     2020 H=      505:00 +CPU=  0.753
  08:12:21 STEP     2021 H=      505:15 +CPU=  0.468
  08:12:21 STEP     2022 H=      505:30 +CPU=  0.897
  08:12:22 STEP     2023 H=      505:45 +CPU=  0.463
  08:12:23 STEP     2024 H=      506:00 +CPU=  0.752
  08:12:23 STEP     2025 H=      506:15 +CPU=  0.792
  08:12:24 STEP     2026 H=      506:30 +CPU=  0.463
  08:12:24 STEP     2027 H=      506:45 +CPU=  0.468
  08:12:26 STEP     2028 H=      507:00 +CPU=  1.331
  08:12:26 STEP     2029 H=      507:15 +CPU=  0.471
  08:12:27 STEP     2030 H=      507:30 +CPU=  0.472
  08:12:27 STEP     2031 H=      507:45 +CPU=  0.799
  08:12:28 STEP     2032 H=      508:00 +CPU=  0.751
  08:12:29 STEP     2033 H=      508:15 +CPU=  0.469
  08:12:29 STEP     2034 H=      508:30 +CPU=  0.781
  08:12:30 STEP     2035 H=      508:45 +CPU=  0.465
  08:12:31 STEP     2036 H=      509:00 +CPU=  0.753
  08:12:31 STEP     2037 H=      509:15 +CPU=  0.756
  08:12:32 STEP     2038 H=      509:30 +CPU=  0.465
  08:12:32 STEP     2039 H=      509:45 +CPU=  0.472
  08:12:34 STEP     2040 H=      510:00 +CPU=  1.537
  08:12:34 STEP     2041 H=      510:15 +CPU=  0.466
  08:12:35 STEP     2042 H=      510:30 +CPU=  0.472
  08:12:35 STEP     2043 H=      510:45 +CPU=  0.462
  08:12:36 STEP     2044 H=      511:00 +CPU=  0.748
  08:12:37 STEP     2045 H=      511:15 +CPU=  0.475
  08:12:38 STEP     2046 H=      511:30 +CPU=  0.943
  08:12:38 STEP     2047 H=      511:45 +CPU=  0.467
  08:12:39 STEP     2048 H=      512:00 +CPU=  0.752
  08:12:40 STEP     2049 H=      512:15 +CPU=  0.967
  08:12:40 STEP     2050 H=      512:30 +CPU=  0.463
  08:12:41 STEP     2051 H=      512:45 +CPU=  0.469
  08:12:42 STEP     2052 H=      513:00 +CPU=  1.280
  08:12:43 STEP     2053 H=      513:15 +CPU=  0.607
  08:12:43 STEP     2054 H=      513:30 +CPU=  0.628
  08:12:44 STEP     2055 H=      513:45 +CPU=  0.460
  08:12:44 STEP     2056 H=      514:00 +CPU=  0.745
  08:12:45 STEP     2057 H=      514:15 +CPU=  0.610
  08:12:46 STEP     2058 H=      514:30 +CPU=  0.783
  08:12:46 STEP     2059 H=      514:45 +CPU=  0.465
  08:12:47 STEP     2060 H=      515:00 +CPU=  0.754
  08:12:48 STEP     2061 H=      515:15 +CPU=  0.820
  08:12:48 STEP     2062 H=      515:30 +CPU=  0.465
  08:12:49 STEP     2063 H=      515:45 +CPU=  0.477
  08:12:53 STEP     2064 H=      516:00 +CPU=  1.540
  08:12:54 STEP     2065 H=      516:15 +CPU=  0.468
  08:12:54 STEP     2066 H=      516:30 +CPU=  0.475
  08:12:55 STEP     2067 H=      516:45 +CPU=  0.472
  08:12:56 STEP     2068 H=      517:00 +CPU=  0.753
  08:12:56 STEP     2069 H=      517:15 +CPU=  0.484
  08:12:57 STEP     2070 H=      517:30 +CPU=  0.911
  08:12:57 STEP     2071 H=      517:45 +CPU=  0.475
  08:12:58 STEP     2072 H=      518:00 +CPU=  0.766
  08:12:59 STEP     2073 H=      518:15 +CPU=  0.767
  08:12:59 STEP     2074 H=      518:30 +CPU=  0.475
  08:13:00 STEP     2075 H=      518:45 +CPU=  0.477
  08:13:01 STEP     2076 H=      519:00 +CPU=  1.249
  08:13:02 STEP     2077 H=      519:15 +CPU=  0.476
  08:13:02 STEP     2078 H=      519:30 +CPU=  0.479
  08:13:03 STEP     2079 H=      519:45 +CPU=  0.727
  08:13:04 STEP     2080 H=      520:00 +CPU=  0.761
  08:13:04 STEP     2081 H=      520:15 +CPU=  0.483
  08:13:05 STEP     2082 H=      520:30 +CPU=  0.735
  08:13:05 STEP     2083 H=      520:45 +CPU=  0.465
  08:13:06 STEP     2084 H=      521:00 +CPU=  0.896
  08:13:07 STEP     2085 H=      521:15 +CPU=  0.580
  08:13:07 STEP     2086 H=      521:30 +CPU=  0.463
  08:13:08 STEP     2087 H=      521:45 +CPU=  0.473
  08:13:10 STEP     2088 H=      522:00 +CPU=  1.905
  08:13:10 STEP     2089 H=      522:15 +CPU=  0.474
  08:13:11 STEP     2090 H=      522:30 +CPU=  0.482
  08:13:11 STEP     2091 H=      522:45 +CPU=  0.443
  08:13:12 STEP     2092 H=      523:00 +CPU=  0.757
  08:13:13 STEP     2093 H=      523:15 +CPU=  0.612
  08:13:13 STEP     2094 H=      523:30 +CPU=  0.817
  08:13:14 STEP     2095 H=      523:45 +CPU=  0.469
  08:13:15 STEP     2096 H=      524:00 +CPU=  0.774
  08:13:15 STEP     2097 H=      524:15 +CPU=  0.769
  08:13:16 STEP     2098 H=      524:30 +CPU=  0.465
  08:13:16 STEP     2099 H=      524:45 +CPU=  0.471
  08:13:18 STEP     2100 H=      525:00 +CPU=  1.317
  08:13:18 STEP     2101 H=      525:15 +CPU=  0.464
  08:13:19 STEP     2102 H=      525:30 +CPU=  0.467
  08:13:19 STEP     2103 H=      525:45 +CPU=  0.722
  08:13:20 STEP     2104 H=      526:00 +CPU=  0.750
  08:13:21 STEP     2105 H=      526:15 +CPU=  0.469
  08:13:21 STEP     2106 H=      526:30 +CPU=  0.810
  08:13:22 STEP     2107 H=      526:45 +CPU=  0.463
  08:13:23 STEP     2108 H=      527:00 +CPU=  0.753
  08:13:23 STEP     2109 H=      527:15 +CPU=  0.772
  08:13:24 STEP     2110 H=      527:30 +CPU=  0.460
  08:13:24 STEP     2111 H=      527:45 +CPU=  0.465
  08:13:26 STEP     2112 H=      528:00 +CPU=  1.555
  08:13:27 STEP     2113 H=      528:15 +CPU=  0.462
  08:13:27 STEP     2114 H=      528:30 +CPU=  0.468
  08:13:28 STEP     2115 H=      528:45 +CPU=  0.461
  08:13:28 STEP     2116 H=      529:00 +CPU=  0.751
  08:13:29 STEP     2117 H=      529:15 +CPU=  0.466
  08:13:30 STEP     2118 H=      529:30 +CPU=  0.967
  08:13:30 STEP     2119 H=      529:45 +CPU=  0.466
  08:13:31 STEP     2120 H=      530:00 +CPU=  0.753
  08:13:32 STEP     2121 H=      530:15 +CPU=  0.717
  08:13:32 STEP     2122 H=      530:30 +CPU=  0.466
  08:13:33 STEP     2123 H=      530:45 +CPU=  0.475
  08:13:34 STEP     2124 H=      531:00 +CPU=  1.335
  08:13:35 STEP     2125 H=      531:15 +CPU=  0.467
  08:13:35 STEP     2126 H=      531:30 +CPU=  0.474
  08:13:36 STEP     2127 H=      531:45 +CPU=  0.756
  08:13:37 STEP     2128 H=      532:00 +CPU=  0.751
  08:13:37 STEP     2129 H=      532:15 +CPU=  0.475
  08:13:38 STEP     2130 H=      532:30 +CPU=  0.771
  08:13:38 STEP     2131 H=      532:45 +CPU=  0.466
  08:13:39 STEP     2132 H=      533:00 +CPU=  0.755
  08:13:40 STEP     2133 H=      533:15 +CPU=  0.956
  08:13:40 STEP     2134 H=      533:30 +CPU=  0.465
  08:13:41 STEP     2135 H=      533:45 +CPU=  0.474
  08:13:43 STEP     2136 H=      534:00 +CPU=  1.478
  08:13:43 STEP     2137 H=      534:15 +CPU=  0.464
  08:13:44 STEP     2138 H=      534:30 +CPU=  0.470
  08:13:44 STEP     2139 H=      534:45 +CPU=  0.469
  08:13:45 STEP     2140 H=      535:00 +CPU=  0.753
  08:13:45 STEP     2141 H=      535:15 +CPU=  0.609
  08:13:46 STEP     2142 H=      535:30 +CPU=  0.820
  08:13:47 STEP     2143 H=      535:45 +CPU=  0.466
  08:13:47 STEP     2144 H=      536:00 +CPU=  0.758
  08:13:48 STEP     2145 H=      536:15 +CPU=  0.768
  08:13:49 STEP     2146 H=      536:30 +CPU=  0.469
  08:13:49 STEP     2147 H=      536:45 +CPU=  0.476
  08:13:51 STEP     2148 H=      537:00 +CPU=  1.355
  08:13:51 STEP     2149 H=      537:15 +CPU=  0.470
  08:13:51 STEP     2150 H=      537:30 +CPU=  0.470
  08:13:52 STEP     2151 H=      537:45 +CPU=  0.865
  08:13:53 STEP     2152 H=      538:00 +CPU=  0.753
  08:13:54 STEP     2153 H=      538:15 +CPU=  0.471
  08:13:54 STEP     2154 H=      538:30 +CPU=  0.803
  08:13:55 STEP     2155 H=      538:45 +CPU=  0.472
  08:13:56 STEP     2156 H=      539:00 +CPU=  0.748
  08:13:56 STEP     2157 H=      539:15 +CPU=  0.790
  08:13:57 STEP     2158 H=      539:30 +CPU=  0.470
  08:13:57 STEP     2159 H=      539:45 +CPU=  0.472
  08:13:59 STEP     2160 H=      540:00 +CPU=  1.688
  08:14:00 STEP     2161 H=      540:15 +CPU=  0.471
  08:14:00 STEP     2162 H=      540:30 +CPU=  0.480
  08:14:01 STEP     2163 H=      540:45 +CPU=  0.502
  08:14:01 STEP     2164 H=      541:00 +CPU=  0.761
  08:14:02 STEP     2165 H=      541:15 +CPU=  0.481
  08:14:03 STEP     2166 H=      541:30 +CPU=  0.852
  08:14:03 STEP     2167 H=      541:45 +CPU=  0.477
  08:14:04 STEP     2168 H=      542:00 +CPU=  0.766
  08:14:05 STEP     2169 H=      542:15 +CPU=  0.711
  08:14:05 STEP     2170 H=      542:30 +CPU=  0.478
  08:14:06 STEP     2171 H=      542:45 +CPU=  0.485
  08:14:07 STEP     2172 H=      543:00 +CPU=  1.320
  08:14:07 STEP     2173 H=      543:15 +CPU=  0.516
  08:14:08 STEP     2174 H=      543:30 +CPU=  0.479
  08:14:09 STEP     2175 H=      543:45 +CPU=  0.821
  08:14:10 STEP     2176 H=      544:00 +CPU=  0.916
  08:14:10 STEP     2177 H=      544:15 +CPU=  0.484
  08:14:11 STEP     2178 H=      544:30 +CPU=  0.872
  08:14:11 STEP     2179 H=      544:45 +CPU=  0.493
  08:14:12 STEP     2180 H=      545:00 +CPU=  0.793
  08:14:13 STEP     2181 H=      545:15 +CPU=  0.699
  08:14:13 STEP     2182 H=      545:30 +CPU=  0.470
  08:14:14 STEP     2183 H=      545:45 +CPU=  0.647
  08:14:16 STEP     2184 H=      546:00 +CPU=  1.367
  08:14:16 STEP     2185 H=      546:15 +CPU=  0.472
  08:14:17 STEP     2186 H=      546:30 +CPU=  0.475
  08:14:17 STEP     2187 H=      546:45 +CPU=  0.470
  08:14:18 STEP     2188 H=      547:00 +CPU=  0.754
  08:14:18 STEP     2189 H=      547:15 +CPU=  0.470
  08:14:19 STEP     2190 H=      547:30 +CPU=  0.907
  08:14:20 STEP     2191 H=      547:45 +CPU=  0.468
  08:14:21 STEP     2192 H=      548:00 +CPU=  0.758
  08:14:21 STEP     2193 H=      548:15 +CPU=  0.827
  08:14:22 STEP     2194 H=      548:30 +CPU=  0.464
  08:14:22 STEP     2195 H=      548:45 +CPU=  0.469
  08:14:24 STEP     2196 H=      549:00 +CPU=  1.326
  08:14:24 STEP     2197 H=      549:15 +CPU=  0.466
  08:14:25 STEP     2198 H=      549:30 +CPU=  0.468
  08:14:25 STEP     2199 H=      549:45 +CPU=  0.763
  08:14:26 STEP     2200 H=      550:00 +CPU=  0.744
  08:14:27 STEP     2201 H=      550:15 +CPU=  0.473
  08:14:27 STEP     2202 H=      550:30 +CPU=  0.788
  08:14:28 STEP     2203 H=      550:45 +CPU=  0.463
  08:14:29 STEP     2204 H=      551:00 +CPU=  0.750
  08:14:29 STEP     2205 H=      551:15 +CPU=  0.783
  08:14:30 STEP     2206 H=      551:30 +CPU=  0.465
  08:14:30 STEP     2207 H=      551:45 +CPU=  0.467
  08:14:32 STEP     2208 H=      552:00 +CPU=  1.533
  08:14:33 STEP     2209 H=      552:15 +CPU=  0.463
  08:14:33 STEP     2210 H=      552:30 +CPU=  0.469
  08:14:34 STEP     2211 H=      552:45 +CPU=  0.465
  08:14:34 STEP     2212 H=      553:00 +CPU=  0.745
  08:14:35 STEP     2213 H=      553:15 +CPU=  0.786
  08:14:36 STEP     2214 H=      553:30 +CPU=  0.612
  08:14:36 STEP     2215 H=      553:45 +CPU=  0.464
  08:14:37 STEP     2216 H=      554:00 +CPU=  0.907
  08:14:38 STEP     2217 H=      554:15 +CPU=  0.629
  08:14:38 STEP     2218 H=      554:30 +CPU=  0.470
  08:14:39 STEP     2219 H=      554:45 +CPU=  0.476
  08:14:40 STEP     2220 H=      555:00 +CPU=  1.472
  08:14:41 STEP     2221 H=      555:15 +CPU=  0.468
  08:14:41 STEP     2222 H=      555:30 +CPU=  0.471
  08:14:42 STEP     2223 H=      555:45 +CPU=  0.775
  08:14:43 STEP     2224 H=      556:00 +CPU=  0.749
  08:14:43 STEP     2225 H=      556:15 +CPU=  0.472
  08:14:44 STEP     2226 H=      556:30 +CPU=  0.744
  08:14:44 STEP     2227 H=      556:45 +CPU=  0.466
  08:14:45 STEP     2228 H=      557:00 +CPU=  0.753
  08:14:46 STEP     2229 H=      557:15 +CPU=  0.763
  08:14:46 STEP     2230 H=      557:30 +CPU=  0.467
  08:14:47 STEP     2231 H=      557:45 +CPU=  0.473
  08:14:48 STEP     2232 H=      558:00 +CPU=  1.549
  08:14:49 STEP     2233 H=      558:15 +CPU=  0.465
  08:14:49 STEP     2234 H=      558:30 +CPU=  0.471
  08:14:50 STEP     2235 H=      558:45 +CPU=  0.468
  08:14:51 STEP     2236 H=      559:00 +CPU=  0.738
  08:14:51 STEP     2237 H=      559:15 +CPU=  0.473
  08:14:52 STEP     2238 H=      559:30 +CPU=  1.011
  08:14:53 STEP     2239 H=      559:45 +CPU=  0.469
  08:14:53 STEP     2240 H=      560:00 +CPU=  0.911
  08:14:54 STEP     2241 H=      560:15 +CPU=  0.617
  08:14:55 STEP     2242 H=      560:30 +CPU=  0.465
  08:14:55 STEP     2243 H=      560:45 +CPU=  0.472
  08:14:56 STEP     2244 H=      561:00 +CPU=  1.350
  08:14:57 STEP     2245 H=      561:15 +CPU=  0.463
  08:14:57 STEP     2246 H=      561:30 +CPU=  0.465
  08:14:58 STEP     2247 H=      561:45 +CPU=  0.782
  08:14:59 STEP     2248 H=      562:00 +CPU=  0.894
  08:14:59 STEP     2249 H=      562:15 +CPU=  0.473
  08:15:00 STEP     2250 H=      562:30 +CPU=  0.611
  08:15:01 STEP     2251 H=      562:45 +CPU=  0.466
  08:15:01 STEP     2252 H=      563:00 +CPU=  0.901
  08:15:02 STEP     2253 H=      563:15 +CPU=  0.661
  08:15:03 STEP     2254 H=      563:30 +CPU=  0.468
  08:15:03 STEP     2255 H=      563:45 +CPU=  0.476
  08:15:05 STEP     2256 H=      564:00 +CPU=  1.477
  08:15:06 STEP     2257 H=      564:15 +CPU=  0.501
  08:15:06 STEP     2258 H=      564:30 +CPU=  0.477
  08:15:06 STEP     2259 H=      564:45 +CPU=  0.471
  08:15:07 STEP     2260 H=      565:00 +CPU=  0.796
  08:15:08 STEP     2261 H=      565:15 +CPU=  0.481
  08:15:09 STEP     2262 H=      565:30 +CPU=  0.984
  08:15:09 STEP     2263 H=      565:45 +CPU=  0.483
  08:15:10 STEP     2264 H=      566:00 +CPU=  0.936
  08:15:11 STEP     2265 H=      566:15 +CPU=  0.842
  08:15:11 STEP     2266 H=      566:30 +CPU=  0.455
  08:15:12 STEP     2267 H=      566:45 +CPU=  0.482
  08:15:13 STEP     2268 H=      567:00 +CPU=  1.301
  08:15:14 STEP     2269 H=      567:15 +CPU=  0.504
  08:15:14 STEP     2270 H=      567:30 +CPU=  0.478
  08:15:15 STEP     2271 H=      567:45 +CPU=  0.744
  08:15:16 STEP     2272 H=      568:00 +CPU=  0.754
  08:15:16 STEP     2273 H=      568:15 +CPU=  0.477
  08:15:17 STEP     2274 H=      568:30 +CPU=  0.819
  08:15:18 STEP     2275 H=      568:45 +CPU=  0.465
  08:15:18 STEP     2276 H=      569:00 +CPU=  0.756
  08:15:19 STEP     2277 H=      569:15 +CPU=  0.759
  08:15:20 STEP     2278 H=      569:30 +CPU=  0.464
  08:15:20 STEP     2279 H=      569:45 +CPU=  0.475
  08:15:22 STEP     2280 H=      570:00 +CPU=  1.547
  08:15:22 STEP     2281 H=      570:15 +CPU=  0.466
  08:15:23 STEP     2282 H=      570:30 +CPU=  0.470
  08:15:23 STEP     2283 H=      570:45 +CPU=  0.504
  08:15:24 STEP     2284 H=      571:00 +CPU=  0.753
  08:15:24 STEP     2285 H=      571:15 +CPU=  0.472
  08:15:25 STEP     2286 H=      571:30 +CPU=  0.898
  08:15:26 STEP     2287 H=      571:45 +CPU=  0.468
  08:15:26 STEP     2288 H=      572:00 +CPU=  0.755
  08:15:27 STEP     2289 H=      572:15 +CPU=  0.799
  08:15:28 STEP     2290 H=      572:30 +CPU=  0.462
  08:15:28 STEP     2291 H=      572:45 +CPU=  0.473
  08:15:30 STEP     2292 H=      573:00 +CPU=  1.368
  08:15:30 STEP     2293 H=      573:15 +CPU=  0.464
  08:15:30 STEP     2294 H=      573:30 +CPU=  0.468
  08:15:31 STEP     2295 H=      573:45 +CPU=  0.759
  08:15:32 STEP     2296 H=      574:00 +CPU=  0.748
  08:15:32 STEP     2297 H=      574:15 +CPU=  0.474
  08:15:33 STEP     2298 H=      574:30 +CPU=  0.759
  08:15:34 STEP     2299 H=      574:45 +CPU=  0.465
  08:15:34 STEP     2300 H=      575:00 +CPU=  0.754
  08:15:35 STEP     2301 H=      575:15 +CPU=  0.763
  08:15:36 STEP     2302 H=      575:30 +CPU=  0.467
  08:15:36 STEP     2303 H=      575:45 +CPU=  0.470
  08:15:38 STEP     2304 H=      576:00 +CPU=  1.503
  08:15:38 STEP     2305 H=      576:15 +CPU=  0.600
  08:15:39 STEP     2306 H=      576:30 +CPU=  0.476
  08:15:40 STEP     2307 H=      576:45 +CPU=  0.691
  08:15:40 STEP     2308 H=      577:00 +CPU=  0.748
  08:15:41 STEP     2309 H=      577:15 +CPU=  0.474
  08:15:42 STEP     2310 H=      577:30 +CPU=  0.896
  08:15:42 STEP     2311 H=      577:45 +CPU=  0.469
  08:15:43 STEP     2312 H=      578:00 +CPU=  0.750
  08:15:44 STEP     2313 H=      578:15 +CPU=  0.739
  08:15:44 STEP     2314 H=      578:30 +CPU=  0.464
  08:15:45 STEP     2315 H=      578:45 +CPU=  0.467
  08:15:46 STEP     2316 H=      579:00 +CPU=  1.331
  08:15:46 STEP     2317 H=      579:15 +CPU=  0.462
  08:15:47 STEP     2318 H=      579:30 +CPU=  0.467
  08:15:48 STEP     2319 H=      579:45 +CPU=  0.799
  08:15:48 STEP     2320 H=      580:00 +CPU=  0.742
  08:15:49 STEP     2321 H=      580:15 +CPU=  0.465
  08:15:50 STEP     2322 H=      580:30 +CPU=  0.807
  08:15:50 STEP     2323 H=      580:45 +CPU=  0.462
  08:15:51 STEP     2324 H=      581:00 +CPU=  0.749
  08:15:52 STEP     2325 H=      581:15 +CPU=  0.868
  08:15:52 STEP     2326 H=      581:30 +CPU=  0.462
  08:15:53 STEP     2327 H=      581:45 +CPU=  0.469
  08:15:55 STEP     2328 H=      582:00 +CPU=  1.624
  08:15:56 STEP     2329 H=      582:15 +CPU=  0.453
  08:15:56 STEP     2330 H=      582:30 +CPU=  0.467
  08:15:57 STEP     2331 H=      582:45 +CPU=  0.462
  08:15:58 STEP     2332 H=      583:00 +CPU=  0.745
  08:15:58 STEP     2333 H=      583:15 +CPU=  0.469
  08:15:59 STEP     2334 H=      583:30 +CPU=  0.942
  08:15:59 STEP     2335 H=      583:45 +CPU=  0.464
  08:16:00 STEP     2336 H=      584:00 +CPU=  0.754
  08:16:01 STEP     2337 H=      584:15 +CPU=  0.731
  08:16:01 STEP     2338 H=      584:30 +CPU=  0.472
  08:16:02 STEP     2339 H=      584:45 +CPU=  0.468
  08:16:03 STEP     2340 H=      585:00 +CPU=  1.297
  08:16:04 STEP     2341 H=      585:15 +CPU=  0.481
  08:16:04 STEP     2342 H=      585:30 +CPU=  0.478
  08:16:05 STEP     2343 H=      585:45 +CPU=  0.729
  08:16:06 STEP     2344 H=      586:00 +CPU=  0.748
  08:16:06 STEP     2345 H=      586:15 +CPU=  0.468
  08:16:07 STEP     2346 H=      586:30 +CPU=  0.729
  08:16:07 STEP     2347 H=      586:45 +CPU=  0.471
  08:16:08 STEP     2348 H=      587:00 +CPU=  0.752
  08:16:09 STEP     2349 H=      587:15 +CPU=  0.854
  08:16:09 STEP     2350 H=      587:30 +CPU=  0.490
  08:16:10 STEP     2351 H=      587:45 +CPU=  0.578
  08:16:12 STEP     2352 H=      588:00 +CPU=  1.648
  08:16:13 STEP     2353 H=      588:15 +CPU=  0.469
  08:16:13 STEP     2354 H=      588:30 +CPU=  0.514
  08:16:14 STEP     2355 H=      588:45 +CPU=  0.471
  08:16:14 STEP     2356 H=      589:00 +CPU=  0.782
  08:16:15 STEP     2357 H=      589:15 +CPU=  0.487
  08:16:16 STEP     2358 H=      589:30 +CPU=  0.885
  08:16:16 STEP     2359 H=      589:45 +CPU=  0.476
  08:16:17 STEP     2360 H=      590:00 +CPU=  0.770
  08:16:18 STEP     2361 H=      590:15 +CPU=  0.748
  08:16:18 STEP     2362 H=      590:30 +CPU=  0.481
  08:16:19 STEP     2363 H=      590:45 +CPU=  0.487
  08:16:20 STEP     2364 H=      591:00 +CPU=  1.258
  08:16:21 STEP     2365 H=      591:15 +CPU=  0.475
  08:16:21 STEP     2366 H=      591:30 +CPU=  0.479
  08:16:22 STEP     2367 H=      591:45 +CPU=  0.783
  08:16:23 STEP     2368 H=      592:00 +CPU=  0.755
  08:16:23 STEP     2369 H=      592:15 +CPU=  0.476
  08:16:24 STEP     2370 H=      592:30 +CPU=  0.747
  08:16:24 STEP     2371 H=      592:45 +CPU=  0.473
  08:16:25 STEP     2372 H=      593:00 +CPU=  0.755
  08:16:26 STEP     2373 H=      593:15 +CPU=  0.794
  08:16:26 STEP     2374 H=      593:30 +CPU=  0.478
  08:16:27 STEP     2375 H=      593:45 +CPU=  0.478
  08:16:29 STEP     2376 H=      594:00 +CPU=  1.486
  08:16:29 STEP     2377 H=      594:15 +CPU=  0.471
  08:16:29 STEP     2378 H=      594:30 +CPU=  0.480
  08:16:30 STEP     2379 H=      594:45 +CPU=  0.468
  08:16:31 STEP     2380 H=      595:00 +CPU=  0.752
  08:16:31 STEP     2381 H=      595:15 +CPU=  0.468
  08:16:32 STEP     2382 H=      595:30 +CPU=  0.916
  08:16:33 STEP     2383 H=      595:45 +CPU=  0.465
  08:16:33 STEP     2384 H=      596:00 +CPU=  0.754
  08:16:34 STEP     2385 H=      596:15 +CPU=  0.776
  08:16:35 STEP     2386 H=      596:30 +CPU=  0.466
  08:16:35 STEP     2387 H=      596:45 +CPU=  0.471
  08:16:36 STEP     2388 H=      597:00 +CPU=  1.311
  08:16:37 STEP     2389 H=      597:15 +CPU=  0.459
  08:16:37 STEP     2390 H=      597:30 +CPU=  0.624
  08:16:38 STEP     2391 H=      597:45 +CPU=  0.633
  08:16:39 STEP     2392 H=      598:00 +CPU=  0.746
  08:16:39 STEP     2393 H=      598:15 +CPU=  0.623
  08:16:40 STEP     2394 H=      598:30 +CPU=  0.816
  08:16:41 STEP     2395 H=      598:45 +CPU=  0.460
  08:16:41 STEP     2396 H=      599:00 +CPU=  0.753
  08:16:42 STEP     2397 H=      599:15 +CPU=  0.738
  08:16:43 STEP     2398 H=      599:30 +CPU=  0.461
  08:16:43 STEP     2399 H=      599:45 +CPU=  0.628
  08:16:45 STEP     2400 H=      600:00 +CPU=  1.350
  08:16:45 STEP     2401 H=      600:15 +CPU=  0.462
  08:16:46 STEP     2402 H=      600:30 +CPU=  0.468
  08:16:46 STEP     2403 H=      600:45 +CPU=  0.506
  08:16:47 STEP     2404 H=      601:00 +CPU=  0.740
  08:16:47 STEP     2405 H=      601:15 +CPU=  0.466
  08:16:48 STEP     2406 H=      601:30 +CPU=  0.876
  08:16:49 STEP     2407 H=      601:45 +CPU=  0.460
  08:16:49 STEP     2408 H=      602:00 +CPU=  0.760
  08:16:50 STEP     2409 H=      602:15 +CPU=  0.816
  08:16:51 STEP     2410 H=      602:30 +CPU=  0.464
  08:16:51 STEP     2411 H=      602:45 +CPU=  0.467
  08:16:53 STEP     2412 H=      603:00 +CPU=  1.443
  08:16:53 STEP     2413 H=      603:15 +CPU=  0.462
  08:16:54 STEP     2414 H=      603:30 +CPU=  0.467
  08:16:54 STEP     2415 H=      603:45 +CPU=  0.817
  08:16:55 STEP     2416 H=      604:00 +CPU=  0.748
  08:16:56 STEP     2417 H=      604:15 +CPU=  0.466
  08:16:56 STEP     2418 H=      604:30 +CPU=  0.810
  08:16:57 STEP     2419 H=      604:45 +CPU=  0.462
  08:16:58 STEP     2420 H=      605:00 +CPU=  0.751
  08:16:58 STEP     2421 H=      605:15 +CPU=  0.764
  08:16:59 STEP     2422 H=      605:30 +CPU=  0.462
  08:16:59 STEP     2423 H=      605:45 +CPU=  0.468
  08:17:01 STEP     2424 H=      606:00 +CPU=  1.502
  08:17:02 STEP     2425 H=      606:15 +CPU=  0.460
  08:17:02 STEP     2426 H=      606:30 +CPU=  0.468
  08:17:03 STEP     2427 H=      606:45 +CPU=  0.462
  08:17:04 STEP     2428 H=      607:00 +CPU=  0.746
  08:17:04 STEP     2429 H=      607:15 +CPU=  0.468
  08:17:05 STEP     2430 H=      607:30 +CPU=  0.900
  08:17:05 STEP     2431 H=      607:45 +CPU=  0.481
  08:17:06 STEP     2432 H=      608:00 +CPU=  0.752
  08:17:07 STEP     2433 H=      608:15 +CPU=  0.708
  08:17:07 STEP     2434 H=      608:30 +CPU=  0.463
  08:17:08 STEP     2435 H=      608:45 +CPU=  0.470
  08:17:09 STEP     2436 H=      609:00 +CPU=  1.401
  08:17:10 STEP     2437 H=      609:15 +CPU=  0.669
  08:17:10 STEP     2438 H=      609:30 +CPU=  0.489
  08:17:11 STEP     2439 H=      609:45 +CPU=  0.786
  08:17:12 STEP     2440 H=      610:00 +CPU=  0.750
  08:17:12 STEP     2441 H=      610:15 +CPU=  0.483
  08:17:13 STEP     2442 H=      610:30 +CPU=  0.747
  08:17:14 STEP     2443 H=      610:45 +CPU=  0.468
  08:17:14 STEP     2444 H=      611:00 +CPU=  0.767
  08:17:15 STEP     2445 H=      611:15 +CPU=  0.754
  08:17:16 STEP     2446 H=      611:30 +CPU=  0.605
  08:17:16 STEP     2447 H=      611:45 +CPU=  0.475
  08:17:18 STEP     2448 H=      612:00 +CPU=  1.358
  08:17:18 STEP     2449 H=      612:15 +CPU=  0.466
  08:17:19 STEP     2450 H=      612:30 +CPU=  0.475
  08:17:19 STEP     2451 H=      612:45 +CPU=  0.468
  08:17:20 STEP     2452 H=      613:00 +CPU=  0.752
  08:17:20 STEP     2453 H=      613:15 +CPU=  0.471
  08:17:21 STEP     2454 H=      613:30 +CPU=  0.957
  08:17:22 STEP     2455 H=      613:45 +CPU=  0.467
  08:17:23 STEP     2456 H=      614:00 +CPU=  0.760
  08:17:23 STEP     2457 H=      614:15 +CPU=  0.767
  08:17:24 STEP     2458 H=      614:30 +CPU=  0.606
  08:17:24 STEP     2459 H=      614:45 +CPU=  0.473
  08:17:26 STEP     2460 H=      615:00 +CPU=  1.185
  08:17:26 STEP     2461 H=      615:15 +CPU=  0.469
  08:17:27 STEP     2462 H=      615:30 +CPU=  0.471
  08:17:27 STEP     2463 H=      615:45 +CPU=  0.781
  08:17:28 STEP     2464 H=      616:00 +CPU=  0.750
  08:17:29 STEP     2465 H=      616:15 +CPU=  0.480
  08:17:29 STEP     2466 H=      616:30 +CPU=  0.739
  08:17:30 STEP     2467 H=      616:45 +CPU=  0.609
  08:17:31 STEP     2468 H=      617:00 +CPU=  0.749
  08:17:31 STEP     2469 H=      617:15 +CPU=  0.613
  08:17:32 STEP     2470 H=      617:30 +CPU=  0.466
  08:17:32 STEP     2471 H=      617:45 +CPU=  0.471
  08:17:35 STEP     2472 H=      618:00 +CPU=  1.548
  08:17:35 STEP     2473 H=      618:15 +CPU=  0.465
  08:17:36 STEP     2474 H=      618:30 +CPU=  0.475
  08:17:36 STEP     2475 H=      618:45 +CPU=  0.467
  08:17:37 STEP     2476 H=      619:00 +CPU=  0.752
  08:17:37 STEP     2477 H=      619:15 +CPU=  0.470
  08:17:38 STEP     2478 H=      619:30 +CPU=  0.948
  08:17:39 STEP     2479 H=      619:45 +CPU=  0.467
  08:17:40 STEP     2480 H=      620:00 +CPU=  0.932
  08:17:41 STEP     2481 H=      620:15 +CPU=  0.743
  08:17:41 STEP     2482 H=      620:30 +CPU=  0.466
  08:17:42 STEP     2483 H=      620:45 +CPU=  0.469
  08:17:43 STEP     2484 H=      621:00 +CPU=  1.300
  08:17:43 STEP     2485 H=      621:15 +CPU=  0.463
  08:17:44 STEP     2486 H=      621:30 +CPU=  0.628
  08:17:45 STEP     2487 H=      621:45 +CPU=  0.581
  08:17:45 STEP     2488 H=      622:00 +CPU=  0.748
  08:17:46 STEP     2489 H=      622:15 +CPU=  0.468
  08:17:47 STEP     2490 H=      622:30 +CPU=  0.842
  08:17:47 STEP     2491 H=      622:45 +CPU=  0.467
  08:17:48 STEP     2492 H=      623:00 +CPU=  0.758
  08:17:49 STEP     2493 H=      623:15 +CPU=  0.757
  08:17:49 STEP     2494 H=      623:30 +CPU=  0.464
  08:17:49 STEP     2495 H=      623:45 +CPU=  0.479
  08:17:52 STEP     2496 H=      624:00 +CPU=  1.530
  08:17:52 STEP     2497 H=      624:15 +CPU=  0.463
  08:17:53 STEP     2498 H=      624:30 +CPU=  0.472
  08:17:53 STEP     2499 H=      624:45 +CPU=  0.463
  08:17:54 STEP     2500 H=      625:00 +CPU=  0.748
  08:17:55 STEP     2501 H=      625:15 +CPU=  0.473
  08:17:56 STEP     2502 H=      625:30 +CPU=  0.905
  08:17:56 STEP     2503 H=      625:45 +CPU=  0.468
  08:17:57 STEP     2504 H=      626:00 +CPU=  0.751
  08:17:58 STEP     2505 H=      626:15 +CPU=  0.778
  08:17:58 STEP     2506 H=      626:30 +CPU=  0.458
  08:17:59 STEP     2507 H=      626:45 +CPU=  0.604
  08:18:00 STEP     2508 H=      627:00 +CPU=  1.219
  08:18:00 STEP     2509 H=      627:15 +CPU=  0.457
  08:18:01 STEP     2510 H=      627:30 +CPU=  0.462
  08:18:02 STEP     2511 H=      627:45 +CPU=  0.752
  08:18:02 STEP     2512 H=      628:00 +CPU=  0.743
  08:18:03 STEP     2513 H=      628:15 +CPU=  0.468
  08:18:03 STEP     2514 H=      628:30 +CPU=  0.754
  08:18:04 STEP     2515 H=      628:45 +CPU=  0.469
  08:18:05 STEP     2516 H=      629:00 +CPU=  0.749
  08:18:05 STEP     2517 H=      629:15 +CPU=  0.767
  08:18:06 STEP     2518 H=      629:30 +CPU=  0.457
  08:18:06 STEP     2519 H=      629:45 +CPU=  0.459
  08:18:08 STEP     2520 H=      630:00 +CPU=  1.515
  08:18:08 STEP     2521 H=      630:15 +CPU=  0.478
  08:18:09 STEP     2522 H=      630:30 +CPU=  0.477
  08:18:10 STEP     2523 H=      630:45 +CPU=  0.709
  08:18:10 STEP     2524 H=      631:00 +CPU=  0.754
  08:18:11 STEP     2525 H=      631:15 +CPU=  0.642
  08:18:12 STEP     2526 H=      631:30 +CPU=  0.774
  08:18:12 STEP     2527 H=      631:45 +CPU=  0.479
  08:18:13 STEP     2528 H=      632:00 +CPU=  0.783
  08:18:14 STEP     2529 H=      632:15 +CPU=  0.730
  08:18:14 STEP     2530 H=      632:30 +CPU=  0.461
  08:18:15 STEP     2531 H=      632:45 +CPU=  0.476
  08:18:16 STEP     2532 H=      633:00 +CPU=  1.352
  08:18:17 STEP     2533 H=      633:15 +CPU=  0.462
  08:18:17 STEP     2534 H=      633:30 +CPU=  0.468
  08:18:18 STEP     2535 H=      633:45 +CPU=  0.768
  08:18:19 STEP     2536 H=      634:00 +CPU=  0.751
  08:18:19 STEP     2537 H=      634:15 +CPU=  0.473
  08:18:20 STEP     2538 H=      634:30 +CPU=  0.719
  08:18:20 STEP     2539 H=      634:45 +CPU=  0.465
  08:18:21 STEP     2540 H=      635:00 +CPU=  0.758
  08:18:22 STEP     2541 H=      635:15 +CPU=  0.796
  08:18:22 STEP     2542 H=      635:30 +CPU=  0.467
  08:18:23 STEP     2543 H=      635:45 +CPU=  0.469
  08:18:24 STEP     2544 H=      636:00 +CPU=  1.527
  08:18:25 STEP     2545 H=      636:15 +CPU=  0.461
  08:18:25 STEP     2546 H=      636:30 +CPU=  0.468
  08:18:26 STEP     2547 H=      636:45 +CPU=  0.476
  08:18:27 STEP     2548 H=      637:00 +CPU=  0.750
  08:18:27 STEP     2549 H=      637:15 +CPU=  0.473
  08:18:28 STEP     2550 H=      637:30 +CPU=  0.896
  08:18:28 STEP     2551 H=      637:45 +CPU=  0.469
  08:18:29 STEP     2552 H=      638:00 +CPU=  0.759
  08:18:30 STEP     2553 H=      638:15 +CPU=  0.773
  08:18:30 STEP     2554 H=      638:30 +CPU=  0.465
  08:18:31 STEP     2555 H=      638:45 +CPU=  0.469
  08:18:32 STEP     2556 H=      639:00 +CPU=  1.323
  08:18:33 STEP     2557 H=      639:15 +CPU=  0.468
  08:18:33 STEP     2558 H=      639:30 +CPU=  0.473
  08:18:34 STEP     2559 H=      639:45 +CPU=  0.751
  08:18:35 STEP     2560 H=      640:00 +CPU=  0.752
  08:18:35 STEP     2561 H=      640:15 +CPU=  0.473
  08:18:36 STEP     2562 H=      640:30 +CPU=  0.755
  08:18:36 STEP     2563 H=      640:45 +CPU=  0.467
  08:18:37 STEP     2564 H=      641:00 +CPU=  0.757
  08:18:38 STEP     2565 H=      641:15 +CPU=  0.766
  08:18:38 STEP     2566 H=      641:30 +CPU=  0.467
  08:18:39 STEP     2567 H=      641:45 +CPU=  0.472
  08:18:41 STEP     2568 H=      642:00 +CPU=  1.713
  08:18:41 STEP     2569 H=      642:15 +CPU=  0.461
  08:18:42 STEP     2570 H=      642:30 +CPU=  0.482
  08:18:42 STEP     2571 H=      642:45 +CPU=  0.461
  08:18:43 STEP     2572 H=      643:00 +CPU=  0.901
  08:18:44 STEP     2573 H=      643:15 +CPU=  0.474
  08:18:44 STEP     2574 H=      643:30 +CPU=  0.757
  08:18:45 STEP     2575 H=      643:45 +CPU=  0.466
  08:18:46 STEP     2576 H=      644:00 +CPU=  0.754
  08:18:46 STEP     2577 H=      644:15 +CPU=  0.801
  08:18:47 STEP     2578 H=      644:30 +CPU=  0.464
  08:18:47 STEP     2579 H=      644:45 +CPU=  0.468
  08:18:49 STEP     2580 H=      645:00 +CPU=  1.319
  08:18:49 STEP     2581 H=      645:15 +CPU=  0.467
  08:18:50 STEP     2582 H=      645:30 +CPU=  0.466
  08:18:50 STEP     2583 H=      645:45 +CPU=  0.774
  08:18:51 STEP     2584 H=      646:00 +CPU=  0.750
  08:18:52 STEP     2585 H=      646:15 +CPU=  0.466
  08:18:52 STEP     2586 H=      646:30 +CPU=  0.867
  08:18:53 STEP     2587 H=      646:45 +CPU=  0.468
  08:18:54 STEP     2588 H=      647:00 +CPU=  0.759
  08:18:55 STEP     2589 H=      647:15 +CPU=  0.793
  08:18:55 STEP     2590 H=      647:30 +CPU=  0.458
  08:18:55 STEP     2591 H=      647:45 +CPU=  0.465
  08:18:58 STEP     2592 H=      648:00 +CPU=  1.568
  08:18:58 STEP     2593 H=      648:15 +CPU=  0.459
  08:18:59 STEP     2594 H=      648:30 +CPU=  0.470
  08:18:59 STEP     2595 H=      648:45 +CPU=  0.462
  08:19:00 STEP     2596 H=      649:00 +CPU=  0.746
  08:19:00 STEP     2597 H=      649:15 +CPU=  0.464
  08:19:01 STEP     2598 H=      649:30 +CPU=  0.905
  08:19:02 STEP     2599 H=      649:45 +CPU=  0.462
  08:19:03 STEP     2600 H=      650:00 +CPU=  0.760
  08:19:03 STEP     2601 H=      650:15 +CPU=  0.731
  08:19:04 STEP     2602 H=      650:30 +CPU=  0.462
  08:19:04 STEP     2603 H=      650:45 +CPU=  0.467
  08:19:06 STEP     2604 H=      651:00 +CPU=  1.351
  08:19:06 STEP     2605 H=      651:15 +CPU=  0.466
  08:19:06 STEP     2606 H=      651:30 +CPU=  0.467
  08:19:07 STEP     2607 H=      651:45 +CPU=  0.750
  08:19:08 STEP     2608 H=      652:00 +CPU=  0.754
  08:19:08 STEP     2609 H=      652:15 +CPU=  0.512
  08:19:09 STEP     2610 H=      652:30 +CPU=  0.816
  08:19:10 STEP     2611 H=      652:45 +CPU=  0.615
  08:19:11 STEP     2612 H=      653:00 +CPU=  0.769
  08:19:12 STEP     2613 H=      653:15 +CPU=  0.877
  08:19:12 STEP     2614 H=      653:30 +CPU=  0.471
  08:19:13 STEP     2615 H=      653:45 +CPU=  0.470
  08:19:14 STEP     2616 H=      654:00 +CPU=  1.560
  08:19:15 STEP     2617 H=      654:15 +CPU=  0.482
  08:19:15 STEP     2618 H=      654:30 +CPU=  0.471
  08:19:16 STEP     2619 H=      654:45 +CPU=  0.469
  08:19:16 STEP     2620 H=      655:00 +CPU=  0.754
  08:19:17 STEP     2621 H=      655:15 +CPU=  0.470
  08:19:18 STEP     2622 H=      655:30 +CPU=  0.902
  08:19:18 STEP     2623 H=      655:45 +CPU=  0.463
  08:19:19 STEP     2624 H=      656:00 +CPU=  0.758
  08:19:20 STEP     2625 H=      656:15 +CPU=  0.717
  08:19:20 STEP     2626 H=      656:30 +CPU=  0.464
  08:19:21 STEP     2627 H=      656:45 +CPU=  0.467
  08:19:22 STEP     2628 H=      657:00 +CPU=  1.368
  08:19:22 STEP     2629 H=      657:15 +CPU=  0.461
  08:19:23 STEP     2630 H=      657:30 +CPU=  0.467
  08:19:24 STEP     2631 H=      657:45 +CPU=  0.790
  08:19:24 STEP     2632 H=      658:00 +CPU=  0.745
  08:19:25 STEP     2633 H=      658:15 +CPU=  0.466
  08:19:26 STEP     2634 H=      658:30 +CPU=  0.820
  08:19:26 STEP     2635 H=      658:45 +CPU=  0.460
  08:19:27 STEP     2636 H=      659:00 +CPU=  0.752
  08:19:28 STEP     2637 H=      659:15 +CPU=  0.784
  08:19:28 STEP     2638 H=      659:30 +CPU=  0.604
  08:19:29 STEP     2639 H=      659:45 +CPU=  0.471
  08:19:31 STEP     2640 H=      660:00 +CPU=  1.399
  08:19:31 STEP     2641 H=      660:15 +CPU=  0.468
  08:19:32 STEP     2642 H=      660:30 +CPU=  0.477
  08:19:32 STEP     2643 H=      660:45 +CPU=  0.470
  08:19:33 STEP     2644 H=      661:00 +CPU=  0.760
  08:19:33 STEP     2645 H=      661:15 +CPU=  0.474
  08:19:34 STEP     2646 H=      661:30 +CPU=  0.919
  08:19:35 STEP     2647 H=      661:45 +CPU=  0.472
  08:19:35 STEP     2648 H=      662:00 +CPU=  0.777
  08:19:36 STEP     2649 H=      662:15 +CPU=  0.732
  08:19:37 STEP     2650 H=      662:30 +CPU=  0.471
  08:19:37 STEP     2651 H=      662:45 +CPU=  0.473
  08:19:38 STEP     2652 H=      663:00 +CPU=  1.364
  08:19:39 STEP     2653 H=      663:15 +CPU=  0.463
  08:19:40 STEP     2654 H=      663:30 +CPU=  0.636
  08:19:40 STEP     2655 H=      663:45 +CPU=  0.766
  08:19:41 STEP     2656 H=      664:00 +CPU=  0.750
  08:19:42 STEP     2657 H=      664:15 +CPU=  0.470
  08:19:42 STEP     2658 H=      664:30 +CPU=  0.728
  08:19:43 STEP     2659 H=      664:45 +CPU=  0.462
  08:19:44 STEP     2660 H=      665:00 +CPU=  0.751
  08:19:44 STEP     2661 H=      665:15 +CPU=  0.762
  08:19:45 STEP     2662 H=      665:30 +CPU=  0.460
  08:19:45 STEP     2663 H=      665:45 +CPU=  0.470
  08:19:47 STEP     2664 H=      666:00 +CPU=  1.547
  08:19:47 STEP     2665 H=      666:15 +CPU=  0.461
  08:19:48 STEP     2666 H=      666:30 +CPU=  0.468
  08:19:48 STEP     2667 H=      666:45 +CPU=  0.466
  08:19:49 STEP     2668 H=      667:00 +CPU=  0.746
  08:19:50 STEP     2669 H=      667:15 +CPU=  0.470
  08:19:50 STEP     2670 H=      667:30 +CPU=  0.949
  08:19:51 STEP     2671 H=      667:45 +CPU=  0.461
  08:19:52 STEP     2672 H=      668:00 +CPU=  0.754
  08:19:53 STEP     2673 H=      668:15 +CPU=  0.888
  08:19:53 STEP     2674 H=      668:30 +CPU=  0.461
  08:19:54 STEP     2675 H=      668:45 +CPU=  0.626
  08:19:55 STEP     2676 H=      669:00 +CPU=  1.176
  08:19:55 STEP     2677 H=      669:15 +CPU=  0.459
  08:19:56 STEP     2678 H=      669:30 +CPU=  0.466
  08:19:57 STEP     2679 H=      669:45 +CPU=  0.804
  08:19:57 STEP     2680 H=      670:00 +CPU=  0.743
  08:19:58 STEP     2681 H=      670:15 +CPU=  0.472
  08:19:59 STEP     2682 H=      670:30 +CPU=  0.751
  08:19:59 STEP     2683 H=      670:45 +CPU=  0.457
  08:20:00 STEP     2684 H=      671:00 +CPU=  0.746
  08:20:01 STEP     2685 H=      671:15 +CPU=  0.755
  08:20:01 STEP     2686 H=      671:30 +CPU=  0.460
  08:20:01 STEP     2687 H=      671:45 +CPU=  0.460
  08:20:03 STEP     2688 H=      672:00 +CPU=  1.541
  08:20:04 STEP     2689 H=      672:15 +CPU=  0.457
  08:20:04 STEP     2690 H=      672:30 +CPU=  0.466
  08:20:04 STEP     2691 H=      672:45 +CPU=  0.457
  08:20:05 STEP     2692 H=      673:00 +CPU=  0.745
  08:20:06 STEP     2693 H=      673:15 +CPU=  0.623
  08:20:07 STEP     2694 H=      673:30 +CPU=  0.759
  08:20:07 STEP     2695 H=      673:45 +CPU=  0.483
  08:20:08 STEP     2696 H=      674:00 +CPU=  0.773
  08:20:09 STEP     2697 H=      674:15 +CPU=  0.842
  08:20:09 STEP     2698 H=      674:30 +CPU=  0.463
  08:20:10 STEP     2699 H=      674:45 +CPU=  0.811
  08:20:11 STEP     2700 H=      675:00 +CPU=  1.280
  08:20:12 STEP     2701 H=      675:15 +CPU=  0.462
  08:20:12 STEP     2702 H=      675:30 +CPU=  0.469
  08:20:13 STEP     2703 H=      675:45 +CPU=  0.806
  08:20:14 STEP     2704 H=      676:00 +CPU=  0.758
  08:20:14 STEP     2705 H=      676:15 +CPU=  0.473
  08:20:15 STEP     2706 H=      676:30 +CPU=  0.806
  08:20:15 STEP     2707 H=      676:45 +CPU=  0.468
  08:20:16 STEP     2708 H=      677:00 +CPU=  0.760
  08:20:17 STEP     2709 H=      677:15 +CPU=  0.708
  08:20:17 STEP     2710 H=      677:30 +CPU=  0.465
  08:20:18 STEP     2711 H=      677:45 +CPU=  0.471
  08:20:20 STEP     2712 H=      678:00 +CPU=  1.509
  08:20:20 STEP     2713 H=      678:15 +CPU=  0.468
  08:20:21 STEP     2714 H=      678:30 +CPU=  0.474
  08:20:21 STEP     2715 H=      678:45 +CPU=  0.468
  08:20:22 STEP     2716 H=      679:00 +CPU=  0.753
  08:20:22 STEP     2717 H=      679:15 +CPU=  0.469
  08:20:23 STEP     2718 H=      679:30 +CPU=  0.915
  08:20:24 STEP     2719 H=      679:45 +CPU=  0.473
  08:20:25 STEP     2720 H=      680:00 +CPU=  0.757
  08:20:25 STEP     2721 H=      680:15 +CPU=  0.728
  08:20:26 STEP     2722 H=      680:30 +CPU=  0.463
  08:20:26 STEP     2723 H=      680:45 +CPU=  0.479
  08:20:28 STEP     2724 H=      681:00 +CPU=  1.342
  08:20:28 STEP     2725 H=      681:15 +CPU=  0.463
  08:20:28 STEP     2726 H=      681:30 +CPU=  0.469
  08:20:29 STEP     2727 H=      681:45 +CPU=  0.764
  08:20:30 STEP     2728 H=      682:00 +CPU=  0.752
  08:20:30 STEP     2729 H=      682:15 +CPU=  0.466
  08:20:31 STEP     2730 H=      682:30 +CPU=  0.731
  08:20:32 STEP     2731 H=      682:45 +CPU=  0.466
  08:20:32 STEP     2732 H=      683:00 +CPU=  0.769
  08:20:33 STEP     2733 H=      683:15 +CPU=  0.756
  08:20:34 STEP     2734 H=      683:30 +CPU=  0.472
  08:20:34 STEP     2735 H=      683:45 +CPU=  0.478
  08:20:36 STEP     2736 H=      684:00 +CPU=  1.529
  08:20:37 STEP     2737 H=      684:15 +CPU=  0.475
  08:20:37 STEP     2738 H=      684:30 +CPU=  0.484
  08:20:37 STEP     2739 H=      684:45 +CPU=  0.469
  08:20:38 STEP     2740 H=      685:00 +CPU=  0.767
  08:20:39 STEP     2741 H=      685:15 +CPU=  0.608
  08:20:40 STEP     2742 H=      685:30 +CPU=  1.274
  08:20:41 STEP     2743 H=      685:45 +CPU=  0.476
  08:20:42 STEP     2744 H=      686:00 +CPU=  0.924
  08:20:42 STEP     2745 H=      686:15 +CPU=  0.549
  08:20:43 STEP     2746 H=      686:30 +CPU=  0.471
  08:20:43 STEP     2747 H=      686:45 +CPU=  0.482
  08:20:44 STEP     2748 H=      687:00 +CPU=  1.375
  08:20:45 STEP     2749 H=      687:15 +CPU=  0.468
  08:20:45 STEP     2750 H=      687:30 +CPU=  0.472
  08:20:46 STEP     2751 H=      687:45 +CPU=  0.798
  08:20:47 STEP     2752 H=      688:00 +CPU=  0.751
  08:20:47 STEP     2753 H=      688:15 +CPU=  0.475
  08:20:48 STEP     2754 H=      688:30 +CPU=  0.751
  08:20:49 STEP     2755 H=      688:45 +CPU=  0.469
  08:20:49 STEP     2756 H=      689:00 +CPU=  0.763
  08:20:50 STEP     2757 H=      689:15 +CPU=  0.784
  08:20:51 STEP     2758 H=      689:30 +CPU=  0.458
  08:20:51 STEP     2759 H=      689:45 +CPU=  0.466
  08:20:54 STEP     2760 H=      690:00 +CPU=  1.632
  08:20:55 STEP     2761 H=      690:15 +CPU=  0.460
  08:20:55 STEP     2762 H=      690:30 +CPU=  0.607
  08:20:56 STEP     2763 H=      690:45 +CPU=  0.459
  08:20:56 STEP     2764 H=      691:00 +CPU=  0.744
  08:20:57 STEP     2765 H=      691:15 +CPU=  0.464
  08:20:58 STEP     2766 H=      691:30 +CPU=  0.957
  08:20:58 STEP     2767 H=      691:45 +CPU=  0.461
  08:20:59 STEP     2768 H=      692:00 +CPU=  0.746
  08:21:00 STEP     2769 H=      692:15 +CPU=  0.791
  08:21:00 STEP     2770 H=      692:30 +CPU=  0.458
  08:21:01 STEP     2771 H=      692:45 +CPU=  0.462
  08:21:02 STEP     2772 H=      693:00 +CPU=  1.299
  08:21:02 STEP     2773 H=      693:15 +CPU=  0.454
  08:21:03 STEP     2774 H=      693:30 +CPU=  0.464
  08:21:04 STEP     2775 H=      693:45 +CPU=  0.758
  08:21:04 STEP     2776 H=      694:00 +CPU=  0.746
  08:21:05 STEP     2777 H=      694:15 +CPU=  0.467
  08:21:06 STEP     2778 H=      694:30 +CPU=  0.740
  08:21:06 STEP     2779 H=      694:45 +CPU=  0.465
  08:21:07 STEP     2780 H=      695:00 +CPU=  0.792
  08:21:08 STEP     2781 H=      695:15 +CPU=  0.712
  08:21:08 STEP     2782 H=      695:30 +CPU=  0.467
  08:21:09 STEP     2783 H=      695:45 +CPU=  0.468
  08:21:11 STEP     2784 H=      696:00 +CPU=  1.720
  08:21:11 STEP     2785 H=      696:15 +CPU=  0.467
  08:21:12 STEP     2786 H=      696:30 +CPU=  0.474
  08:21:12 STEP     2787 H=      696:45 +CPU=  0.468
  08:21:13 STEP     2788 H=      697:00 +CPU=  0.754
  08:21:13 STEP     2789 H=      697:15 +CPU=  0.475
  08:21:14 STEP     2790 H=      697:30 +CPU=  0.909
  08:21:15 STEP     2791 H=      697:45 +CPU=  0.477
  08:21:15 STEP     2792 H=      698:00 +CPU=  0.757
  08:21:16 STEP     2793 H=      698:15 +CPU=  0.761
  08:21:17 STEP     2794 H=      698:30 +CPU=  0.465
  08:21:17 STEP     2795 H=      698:45 +CPU=  0.470
  08:21:19 STEP     2796 H=      699:00 +CPU=  1.330
  08:21:19 STEP     2797 H=      699:15 +CPU=  0.464
  08:21:19 STEP     2798 H=      699:30 +CPU=  0.468
  08:21:20 STEP     2799 H=      699:45 +CPU=  0.732
  08:21:21 STEP     2800 H=      700:00 +CPU=  0.889
  08:21:22 STEP     2801 H=      700:15 +CPU=  0.464
  08:21:22 STEP     2802 H=      700:30 +CPU=  0.681
  08:21:23 STEP     2803 H=      700:45 +CPU=  0.458
  08:21:23 STEP     2804 H=      701:00 +CPU=  0.748
  08:21:24 STEP     2805 H=      701:15 +CPU=  0.809
  08:21:25 STEP     2806 H=      701:30 +CPU=  0.456
  08:21:25 STEP     2807 H=      701:45 +CPU=  0.463
  08:21:27 STEP     2808 H=      702:00 +CPU=  1.584
  08:21:27 STEP     2809 H=      702:15 +CPU=  0.449
  08:21:28 STEP     2810 H=      702:30 +CPU=  0.466
  08:21:28 STEP     2811 H=      702:45 +CPU=  0.460
  08:21:29 STEP     2812 H=      703:00 +CPU=  0.746
  08:21:29 STEP     2813 H=      703:15 +CPU=  0.466
  08:21:30 STEP     2814 H=      703:30 +CPU=  0.940
  08:21:31 STEP     2815 H=      703:45 +CPU=  0.463
  08:21:32 STEP     2816 H=      704:00 +CPU=  0.756
  08:21:32 STEP     2817 H=      704:15 +CPU=  0.736
  08:21:33 STEP     2818 H=      704:30 +CPU=  0.466
  08:21:33 STEP     2819 H=      704:45 +CPU=  0.474
  08:21:35 STEP     2820 H=      705:00 +CPU=  1.328
  08:21:35 STEP     2821 H=      705:15 +CPU=  0.466
  08:21:36 STEP     2822 H=      705:30 +CPU=  0.468
  08:21:36 STEP     2823 H=      705:45 +CPU=  0.757
  08:21:37 STEP     2824 H=      706:00 +CPU=  0.750
  08:21:38 STEP     2825 H=      706:15 +CPU=  0.467
  08:21:38 STEP     2826 H=      706:30 +CPU=  0.785
  08:21:39 STEP     2827 H=      706:45 +CPU=  0.466
  08:21:40 STEP     2828 H=      707:00 +CPU=  0.838
  08:21:41 STEP     2829 H=      707:15 +CPU=  0.759
  08:21:41 STEP     2830 H=      707:30 +CPU=  0.463
  08:21:41 STEP     2831 H=      707:45 +CPU=  0.473
  08:21:43 STEP     2832 H=      708:00 +CPU=  1.493
  08:21:44 STEP     2833 H=      708:15 +CPU=  0.469
  08:21:44 STEP     2834 H=      708:30 +CPU=  0.481
  08:21:45 STEP     2835 H=      708:45 +CPU=  0.475
  08:21:45 STEP     2836 H=      709:00 +CPU=  0.759
  08:21:46 STEP     2837 H=      709:15 +CPU=  0.641
  08:21:47 STEP     2838 H=      709:30 +CPU=  0.780
  08:21:47 STEP     2839 H=      709:45 +CPU=  0.483
  08:21:48 STEP     2840 H=      710:00 +CPU=  0.772
  08:21:49 STEP     2841 H=      710:15 +CPU=  0.706
  08:21:49 STEP     2842 H=      710:30 +CPU=  0.485
  08:21:50 STEP     2843 H=      710:45 +CPU=  0.488
  08:21:51 STEP     2844 H=      711:00 +CPU=  1.358
  08:21:51 STEP     2845 H=      711:15 +CPU=  0.486
  08:21:52 STEP     2846 H=      711:30 +CPU=  0.491
  08:21:53 STEP     2847 H=      711:45 +CPU=  0.874
  08:21:54 STEP     2848 H=      712:00 +CPU=  0.770
  08:21:54 STEP     2849 H=      712:15 +CPU=  0.488
  08:21:55 STEP     2850 H=      712:30 +CPU=  0.716
  08:21:55 STEP     2851 H=      712:45 +CPU=  0.476
  08:21:56 STEP     2852 H=      713:00 +CPU=  0.768
  08:21:57 STEP     2853 H=      713:15 +CPU=  0.748
  08:21:57 STEP     2854 H=      713:30 +CPU=  0.473
  08:21:58 STEP     2855 H=      713:45 +CPU=  0.478
  08:21:59 STEP     2856 H=      714:00 +CPU=  1.514
  08:22:00 STEP     2857 H=      714:15 +CPU=  0.473
  08:22:00 STEP     2858 H=      714:30 +CPU=  0.482
  08:22:01 STEP     2859 H=      714:45 +CPU=  0.469
  08:22:02 STEP     2860 H=      715:00 +CPU=  0.755
  08:22:02 STEP     2861 H=      715:15 +CPU=  0.478
  08:22:03 STEP     2862 H=      715:30 +CPU=  0.882
  08:22:03 STEP     2863 H=      715:45 +CPU=  0.465
  08:22:04 STEP     2864 H=      716:00 +CPU=  0.759
  08:22:05 STEP     2865 H=      716:15 +CPU=  0.743
  08:22:05 STEP     2866 H=      716:30 +CPU=  0.472
  08:22:06 STEP     2867 H=      716:45 +CPU=  0.465
  08:22:07 STEP     2868 H=      717:00 +CPU=  1.292
  08:22:08 STEP     2869 H=      717:15 +CPU=  0.460
  08:22:08 STEP     2870 H=      717:30 +CPU=  0.469
  08:22:09 STEP     2871 H=      717:45 +CPU=  0.822
  08:22:10 STEP     2872 H=      718:00 +CPU=  0.920
  08:22:10 STEP     2873 H=      718:15 +CPU=  0.505
  08:22:11 STEP     2874 H=      718:30 +CPU=  0.802
  08:22:12 STEP     2875 H=      718:45 +CPU=  0.464
  08:22:21 STEP     2876 H=      719:00 +CPU=  2.022
  08:22:26 STEP     2877 H=      719:15 +CPU=  1.675
  08:22:31 STEP     2878 H=      719:30 +CPU=  1.687
  08:22:38 STEP     2879 H=      719:45 +CPU=  1.921
  08:22:51 STEP     2880 H=      720:00 +CPU=  6.450
date +%s
++ date +%s
+ t2=1639812256
date -d "0 -$t1 sec + $t2 sec" +%T
++ date -d '0 -1639809909 sec + 1639812256 sec' +%T
+ tr=00:39:07
+ '[' -f ifs.stat ']'
awk 'END{print $3}' ifs.stat
++ awk 'END{print $3}' ifs.stat
+ '[' CNT0 == CNT0 ']'
+ info 'Leg successfully completed according to IFS log file '\''ifs.stat'\''.'
+ echo '*II* Leg successfully completed according to IFS log file '\''ifs.stat'\''.'
has_config nemo
++ has_config nemo
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' nemo == any ']'
++ [[ nemo == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
+ '[' -f ocean.output ']'
sed -n '/New day/h; ${g;s:.*\([0-9/]\{10\}\).*:\1:;p;}' ocean.output
++ sed -n '/New day/h; ${g;s:.*\([0-9/]\{10\}\).*:\1:;p;}' ocean.output
date -u -d "${leg_end_date} - 1 day" +%Y/%m/%d
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000 - 1 day' +%Y/%m/%d
+ '[' 1993/11/30 == 1993/11/30 ']'
+ info 'Leg successfully completed according to NEMO log file '\''ocean.output'\''.'
+ echo '*II* Leg successfully completed according to NEMO log file '\''ocean.output'\''.'
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ true
+ save_ic_postproc
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ for __m in '$config'
+ [[ atm =~ ifs ]]
+ ((  __f  ))
+ return 0
+ ls -ltr postins
+ find -L postins/ -xtype l -samefile postins/pptdddddd0000_save_ic -exec rm '{}' ';'
+ /bin/ls -1 postins/ppt0000000000 postins/pptdddddd0000 postins/pptdddddd0000_save_ic postins/pptdddddd0600 postins/pptdddddd1200 postins/pptdddddd1800
+ ls -ltr postins
+ (( i=0 ))
+ (( i< 1 ))
+ outdir=save_ic/19931201
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ for __m in '$config'
+ [[ atm =~ ifs ]]
+ ((  __f  ))
+ return 0
+ '[' ppt0000300000 '!=' '' ']'
+ save_ic_ifs_out2init 0
+ icdate=19931201
+ filter_output=true
+ grib_filter=/apps/GRIB/1.14.0/INTEL//bin/grib_filter
+ tmpdir=tmp_save_ic
+ '[' -d tmp_save_ic ']'
+ mkdir -p tmp_save_ic
date -d "${icdate}" +%d
++ date -d 19931201 +%d
+ [[ 01 == \0\1 ]]
date -d "${icdate} - 6 hours" +%Y%m
++ date -d '19931201 - 6 hours' +%Y%m
+ yyyymm=199311
+ ifile_sh=ICMSHt0ni+199311
+ ifile_gg=ICMGGt0ni+199311
+ [[ ! -f ICMSHt0ni+199311 ]]
+ [[ ! -f ICMGGt0ni+199311 ]]
+ true
+ filter_time_init='dataDate == 19931201 && dataTime == 0'
+ filter_time_out='dataTime == 0 && ( 0 '
+ (( j=0 ))
+ (( j< 1 ))
+ filter_time_out+=' || ( dataDate == 19931201 )'
+ (( j++  ))
+ (( j< 1 ))
+ filter_time_out+=' )'
+ true
+ filter_last='( dataTime == 0 ) && ( dataDate == 19931201 )'
+ filter_params=1
+ IFS=,
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 139'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 170'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 183'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 236'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 039'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 040'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 041'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 042'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 198'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 235'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 031'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 238'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 032'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 035'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 036'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 037'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 038'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 148'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 173'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 174'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 015'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 017'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 016'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 018'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 066'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 067'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 074'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 043'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 160'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 161'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 162'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 163'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 234'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 028'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 027'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 030'
+ for p in '$save_ic_filter_param_ids'
+ filter_params+=' && paramId != 029'
+ unset IFS
+ ofile_sh_init=tmp_save_ic/sh_init.grb
+ ofile_sh_out=tmp_save_ic/sh_out.grb
+ ofile_sh_last=tmp_save_ic/sh_last.grb
+ filter_sh=tmp_save_ic/filter_sh
+ write_sh_init='if ( dataDate == 19931201 && dataTime == 0 ) { write "tmp_save_ic/sh_init.grb"; }'
+ write_sh_out='if ( ( dataTime == 0 ) && ( dataDate == 19931201 ) ) { write "tmp_save_ic/sh_last.grb"; } else { write "tmp_save_ic/sh_out.grb"; }'
+ cat
+ ofile_gg_init=tmp_save_ic/gg_init.grb
+ ofile_gg_out=tmp_save_ic/gg_out.grb
+ ofile_gg_last=tmp_save_ic/gg_last.grb
+ filter_gg=tmp_save_ic/filter_gg
+ write_gg_init='if ( dataDate == 19931201 && dataTime == 0 ) { write "tmp_save_ic/gg_init.grb"; }'
+ write_gg_out='if ( ( dataTime == 0 ) && ( dataDate == 19931201 ) ) { write "tmp_save_ic/gg_last.grb"; } else { write "tmp_save_ic/gg_out.grb"; }'
+ cat
+ /apps/GRIB/1.14.0/INTEL//bin/grib_filter tmp_save_ic/filter_sh ICMSHt0ni+199311
+ /apps/GRIB/1.14.0/INTEL//bin/grib_filter tmp_save_ic/filter_gg ICMGGt0ni+199311
+ [[ ! -f tmp_save_ic/sh_init.grb ]]
+ [[ ! -f tmp_save_ic/gg_init.grb ]]
basename $ifile_sh
++ basename ICMSHt0ni+199311
+ ifile_sh=tmp_save_ic/ICMSHt0ni+199311
basename $ifile_gg
++ basename ICMGGt0ni+199311
+ ifile_gg=tmp_save_ic/ICMGGt0ni+199311
+ mv tmp_save_ic/sh_init.grb tmp_save_ic/ICMSHt0ni+199311
+ mv tmp_save_ic/gg_init.grb tmp_save_ic/ICMGGt0ni+199311
+ [[ ! -f tmp_save_ic/ICMSHt0ni+199311 ]]
+ [[ ! -f tmp_save_ic/ICMGGt0ni+199311 ]]
+ tgtdir=save_ic/19931201/ifs
+ ofile_sh=save_ic/19931201/ifs/ICMSHt0niINIT
+ ofile_gg_init=save_ic/19931201/ifs/ICMGGt0niINIT
+ ofile_gg_iniua=save_ic/19931201/ifs/ICMGGt0niINIUA
+ mkdir -p save_ic/19931201/ifs
+ rm -f save_ic/19931201/ifs/ICMSHt0niINIT save_ic/19931201/ifs/ICMGGt0niINIT save_ic/19931201/ifs/ICMGGt0niINIUA
+ cat
+ /apps/GRIB/1.14.0/INTEL//bin/grib_filter tmp_save_ic/gf1 tmp_save_ic/ICMSHt0ni+199311
+ cp -f tmp_save_ic/shinit.lnsp.1 save_ic/19931201/ifs/ICMSHt0niINIT
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.1
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.1
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.1
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.2
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.2
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.2
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.3
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.3
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.3
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.4
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.4
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.4
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.5
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.5
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.5
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.6
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.6
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.6
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.7
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.7
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.7
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.8
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.8
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.8
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.9
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.9
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.9
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.10
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.10
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.10
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.11
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.11
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.11
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.12
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.12
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.12
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.13
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.13
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.13
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.14
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.14
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.14
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.15
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.15
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.15
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.16
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.16
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.16
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.17
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.17
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.17
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.18
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.18
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.18
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.19
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.19
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.19
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.20
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.20
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.20
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.21
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.21
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.21
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.22
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.22
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.22
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.23
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.23
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.23
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.24
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.24
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.24
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.25
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.25
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.25
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.26
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.26
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.26
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.27
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.27
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.27
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.28
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.28
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.28
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.29
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.29
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.29
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.30
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.30
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.30
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.31
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.31
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.31
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.32
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.32
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.32
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.33
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.33
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.33
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.34
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.34
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.34
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.35
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.35
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.35
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.36
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.36
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.36
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.37
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.37
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.37
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.38
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.38
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.38
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.39
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.39
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.39
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.40
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.40
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.40
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.41
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.41
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.41
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.42
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.42
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.42
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.43
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.43
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.43
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.44
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.44
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.44
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.45
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.45
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.45
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.46
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.46
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.46
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.47
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.47
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.47
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.48
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.48
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.48
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.49
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.49
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.49
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.50
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.50
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.50
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.51
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.51
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.51
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.52
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.52
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.52
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.53
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.53
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.53
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.54
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.54
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.54
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.55
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.55
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.55
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.56
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.56
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.56
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.57
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.57
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.57
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.58
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.58
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.58
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.59
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.59
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.59
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.60
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.60
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.60
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.61
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.61
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.61
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.62
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.62
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.62
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.63
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.63
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.63
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.64
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.64
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.64
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.65
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.65
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.65
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.66
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.66
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.66
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.67
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.67
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.67
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.68
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.68
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.68
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.69
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.69
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.69
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.70
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.70
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.70
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.71
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.71
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.71
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.72
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.72
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.72
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.73
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.73
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.73
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.74
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.74
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.74
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.75
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.75
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.75
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.76
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.76
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.76
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.77
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.77
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.77
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.78
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.78
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.78
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.79
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.79
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.79
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.80
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.80
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.80
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.81
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.81
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.81
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.82
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.82
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.82
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.83
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.83
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.83
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.84
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.84
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.84
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.85
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.85
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.85
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.86
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.86
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.86
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.87
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.87
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.87
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.88
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.88
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.88
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.89
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.89
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.89
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.90
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.90
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.90
+ for lev in '{1..91}'
+ for var in vo d t
+ cat tmp_save_ic/shinit.vo.91
+ for var in vo d t
+ cat tmp_save_ic/shinit.d.91
+ for var in vo d t
+ cat tmp_save_ic/shinit.t.91
+ cat tmp_save_ic/shinit.z.1
+ cat
+ /apps/GRIB/1.14.0/INTEL//bin/grib_filter tmp_save_ic/gf2 tmp_save_ic/ICMGGt0ni+199311
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.stl1
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.stl2
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.stl3
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.stl4
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.swvl1
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.swvl2
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.swvl3
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.swvl4
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.sd
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.src
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.skt
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.ci
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.tsn
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.asn
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.rsn
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.sst
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.istl1
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.istl2
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.istl3
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.istl4
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.chnk
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.lsm
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.sr
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.al
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.aluvp
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.alnip
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.aluvd
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.alnid
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.lai_lv
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.lai_hv
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.sdfor
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.slt
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.sdor
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.isor
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.anor
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.slor
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.lsrh
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.cvh
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.cvl
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.tvh
+ for var in stl1 stl2 stl3 stl4 swvl1 swvl2 swvl3 swvl4 sd src skt ci tsn asn rsn sst istl1 istl2 istl3 istl4 chnk lsm sr al aluvp alnip aluvd alnid lai_lv lai_hv sdfor slt sdor isor anor slor lsrh cvh cvl tvh tvl
+ cat tmp_save_ic/gginit.tvl
+ cat
+ /apps/GRIB/1.14.0/INTEL//bin/grib_filter tmp_save_ic/gf3 tmp_save_ic/ICMGGt0ni+199311
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.1
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.2
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.3
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.4
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.5
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.6
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.7
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.8
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.9
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.10
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.11
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.12
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.13
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.14
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.15
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.16
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.17
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.18
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.19
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.20
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.21
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.22
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.23
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.24
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.25
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.26
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.27
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.28
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.29
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.30
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.31
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.32
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.33
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.34
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.35
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.36
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.37
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.38
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.39
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.40
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.41
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.42
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.43
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.44
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.45
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.46
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.47
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.48
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.49
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.50
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.51
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.52
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.53
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.54
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.55
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.56
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.57
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.58
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.59
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.60
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.61
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.62
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.63
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.64
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.65
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.66
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.67
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.68
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.69
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.70
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.71
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.72
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.73
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.74
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.75
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.76
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.77
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.78
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.79
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.80
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.81
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.82
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.83
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.84
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.85
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.86
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.87
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.88
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.89
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.90
+ for lev in '{1..91}'
+ for var in q
+ cat tmp_save_ic/gginiua.q.91
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.1
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.1
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.1
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.1
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.1
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.2
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.2
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.2
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.2
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.2
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.3
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.3
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.3
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.3
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.3
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.4
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.4
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.4
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.4
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.4
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.5
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.5
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.5
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.5
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.5
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.6
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.6
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.6
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.6
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.6
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.7
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.7
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.7
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.7
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.7
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.8
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.8
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.8
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.8
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.8
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.9
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.9
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.9
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.9
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.9
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.10
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.10
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.10
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.10
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.10
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.11
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.11
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.11
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.11
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.11
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.12
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.12
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.12
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.12
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.12
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.13
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.13
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.13
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.13
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.13
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.14
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.14
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.14
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.14
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.14
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.15
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.15
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.15
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.15
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.15
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.16
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.16
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.16
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.16
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.16
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.17
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.17
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.17
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.17
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.17
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.18
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.18
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.18
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.18
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.18
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.19
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.19
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.19
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.19
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.19
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.20
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.20
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.20
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.20
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.20
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.21
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.21
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.21
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.21
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.21
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.22
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.22
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.22
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.22
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.22
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.23
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.23
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.23
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.23
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.23
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.24
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.24
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.24
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.24
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.24
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.25
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.25
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.25
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.25
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.25
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.26
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.26
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.26
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.26
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.26
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.27
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.27
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.27
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.27
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.27
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.28
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.28
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.28
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.28
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.28
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.29
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.29
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.29
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.29
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.29
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.30
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.30
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.30
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.30
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.30
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.31
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.31
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.31
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.31
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.31
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.32
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.32
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.32
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.32
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.32
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.33
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.33
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.33
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.33
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.33
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.34
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.34
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.34
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.34
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.34
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.35
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.35
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.35
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.35
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.35
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.36
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.36
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.36
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.36
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.36
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.37
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.37
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.37
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.37
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.37
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.38
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.38
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.38
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.38
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.38
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.39
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.39
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.39
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.39
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.39
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.40
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.40
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.40
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.40
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.40
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.41
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.41
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.41
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.41
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.41
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.42
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.42
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.42
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.42
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.42
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.43
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.43
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.43
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.43
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.43
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.44
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.44
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.44
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.44
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.44
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.45
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.45
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.45
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.45
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.45
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.46
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.46
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.46
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.46
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.46
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.47
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.47
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.47
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.47
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.47
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.48
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.48
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.48
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.48
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.48
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.49
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.49
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.49
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.49
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.49
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.50
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.50
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.50
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.50
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.50
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.51
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.51
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.51
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.51
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.51
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.52
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.52
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.52
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.52
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.52
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.53
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.53
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.53
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.53
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.53
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.54
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.54
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.54
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.54
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.54
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.55
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.55
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.55
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.55
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.55
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.56
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.56
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.56
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.56
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.56
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.57
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.57
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.57
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.57
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.57
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.58
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.58
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.58
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.58
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.58
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.59
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.59
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.59
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.59
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.59
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.60
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.60
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.60
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.60
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.60
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.61
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.61
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.61
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.61
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.61
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.62
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.62
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.62
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.62
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.62
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.63
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.63
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.63
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.63
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.63
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.64
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.64
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.64
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.64
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.64
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.65
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.65
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.65
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.65
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.65
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.66
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.66
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.66
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.66
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.66
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.67
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.67
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.67
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.67
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.67
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.68
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.68
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.68
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.68
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.68
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.69
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.69
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.69
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.69
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.69
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.70
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.70
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.70
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.70
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.70
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.71
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.71
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.71
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.71
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.71
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.72
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.72
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.72
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.72
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.72
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.73
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.73
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.73
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.73
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.73
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.74
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.74
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.74
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.74
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.74
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.75
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.75
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.75
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.75
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.75
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.76
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.76
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.76
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.76
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.76
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.77
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.77
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.77
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.77
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.77
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.78
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.78
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.78
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.78
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.78
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.79
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.79
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.79
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.79
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.79
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.80
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.80
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.80
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.80
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.80
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.81
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.81
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.81
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.81
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.81
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.82
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.82
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.82
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.82
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.82
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.83
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.83
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.83
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.83
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.83
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.84
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.84
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.84
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.84
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.84
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.85
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.85
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.85
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.85
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.85
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.86
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.86
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.86
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.86
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.86
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.87
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.87
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.87
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.87
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.87
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.88
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.88
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.88
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.88
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.88
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.89
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.89
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.89
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.89
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.89
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.90
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.90
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.90
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.90
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.90
+ for lev in '{1..91}'
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.crwc.91
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cswc.91
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.clwc.91
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.ciwc.91
+ for var in crwc cswc clwc ciwc cc
+ cat tmp_save_ic/gginiua.cc.91
+ true
+ mv -f tmp_save_ic/filter_sh tmp_save_ic/filter_gg save_ic/19931201/ifs
basename $ifile_sh
++ basename tmp_save_ic/ICMSHt0ni+199311
+ ifile_sh=ICMSHt0ni+199311
basename $ifile_gg
++ basename tmp_save_ic/ICMGGt0ni+199311
+ ifile_gg=ICMGGt0ni+199311
+ mv -f ICMSHt0ni+199311 save_ic/19931201/ifs/ICMSHt0ni+199311-out+init
+ mv -f ICMGGt0ni+199311 save_ic/19931201/ifs/ICMGGt0ni+199311-out+init
+ '[' -f tmp_save_ic/sh_out.grb ']'
+ mv -f tmp_save_ic/sh_out.grb ICMSHt0ni+199311
+ '[' -f tmp_save_ic/gg_out.grb ']'
+ mv -f tmp_save_ic/gg_out.grb ICMGGt0ni+199311
+ true
+ '[' -f tmp_save_ic/sh_last.grb ']'
+ mv -f tmp_save_ic/sh_last.grb save_ic/19931201/ifs/ICMSHt0ni+199311-ifs_lastout
+ '[' -f tmp_save_ic/gg_last.grb ']'
+ mv -f tmp_save_ic/gg_last.grb save_ic/19931201/ifs/ICMGGt0ni+199311-ifs_lastout
+ rm -rf tmp_save_ic
+ echo 'save_ic_ifs_out2init ended successfully, results are in save_ic/19931201/ifs'
+ has_config oasis
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' oasis == any ']'
+ [[ oasis == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ oasis ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ oasis ]]
+ for __m in '$config'
+ [[ lim3 =~ oasis ]]
+ for __m in '$config'
+ [[ rnfmapper =~ oasis ]]
+ for __m in '$config'
+ [[ xios:detached =~ oasis ]]
+ for __m in '$config'
+ [[ oasis =~ oasis ]]
+ [[ oasis =~ oasis ]]
+ __f=1
+ for __m in '$config'
+ [[ save_ic:end_leg =~ oasis ]]
+ for __m in '$config'
+ [[ atm =~ oasis ]]
+ ((  __f  ))
+ return 0
+ '[' 2592000 -eq 2592000 ']'
+ mkdir -p save_ic/19931201/oasis
+ for f in '${oas_rst_files}'
+ test -f rstas.nc
+ cp rstas.nc save_ic/19931201/oasis
+ for f in '${oas_rst_files}'
+ test -f rstos.nc
+ cp rstos.nc save_ic/19931201/oasis
+ for f in '${oas_rst_files}'
+ test -f r_hum.nc
+ for f in '${oas_rst_files}'
+ test -f r_g2d.nc
+ for f in '${oas_rst_files}'
+ test -f r_udr.nc
+ for f in '${oas_rst_files}'
+ test -f r_div.nc
+ for f in '${oas_rst_files}'
+ test -f r_vor.nc
+ for f in '${oas_rst_files}'
+ test -f r_ddr.nc
+ for f in '${oas_rst_files}'
+ test -f r_tmp.nc
+ for f in '${oas_rst_files}'
+ test -f r_dmf.nc
+ for f in '${oas_rst_files}'
+ test -f r_s2d.nc
+ for f in '${oas_rst_files}'
+ test -f r_umf.nc
+ for f in '${oas_rst_files}'
+ test -f vegin.nc
+ for f in '${oas_rst_files}'
+ test -f lpjgv.nc
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ for __m in '$config'
+ [[ atm =~ nemo ]]
+ ((  __f  ))
+ return 0
+ nemo_ts=2880
printf %08d $(( nemo_ts - nem_restart_offset ))
++ printf %08d 2880
+ ns=00002880
+ extensions=oce
+ has_config lim3
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' lim3 == any ']'
+ [[ lim3 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lim3 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lim3 ]]
+ for __m in '$config'
+ [[ lim3 =~ lim3 ]]
+ [[ lim3 =~ lim3 ]]
+ __f=1
+ for __m in '$config'
+ [[ rnfmapper =~ lim3 ]]
+ for __m in '$config'
+ [[ xios:detached =~ lim3 ]]
+ for __m in '$config'
+ [[ oasis =~ lim3 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lim3 ]]
+ for __m in '$config'
+ [[ atm =~ lim3 ]]
+ ((  __f  ))
+ return 0
+ extensions+=' ice'
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ for __m in '$config'
+ [[ atm =~ pisces ]]
+ ((  __f  ))
+ return 1
+ for ext in '$extensions'
+ ls t0ni_00002880_restart_oce_0000.nc t0ni_00002880_restart_oce_0001.nc t0ni_00002880_restart_oce_0002.nc t0ni_00002880_restart_oce_0003.nc t0ni_00002880_restart_oce_0004.nc t0ni_00002880_restart_oce_0005.nc t0ni_00002880_restart_oce_0006.nc t0ni_00002880_restart_oce_0007.nc t0ni_00002880_restart_oce_0008.nc t0ni_00002880_restart_oce_0009.nc t0ni_00002880_restart_oce_0010.nc t0ni_00002880_restart_oce_0011.nc t0ni_00002880_restart_oce_0012.nc t0ni_00002880_restart_oce_0013.nc t0ni_00002880_restart_oce_0014.nc t0ni_00002880_restart_oce_0015.nc t0ni_00002880_restart_oce_0016.nc t0ni_00002880_restart_oce_0017.nc t0ni_00002880_restart_oce_0018.nc t0ni_00002880_restart_oce_0019.nc t0ni_00002880_restart_oce_0020.nc t0ni_00002880_restart_oce_0021.nc t0ni_00002880_restart_oce_0022.nc t0ni_00002880_restart_oce_0023.nc t0ni_00002880_restart_oce_0024.nc t0ni_00002880_restart_oce_0025.nc t0ni_00002880_restart_oce_0026.nc t0ni_00002880_restart_oce_0027.nc t0ni_00002880_restart_oce_0028.nc t0ni_00002880_restart_oce_0029.nc t0ni_00002880_restart_oce_0030.nc t0ni_00002880_restart_oce_0031.nc t0ni_00002880_restart_oce_0032.nc t0ni_00002880_restart_oce_0033.nc t0ni_00002880_restart_oce_0034.nc t0ni_00002880_restart_oce_0035.nc t0ni_00002880_restart_oce_0036.nc t0ni_00002880_restart_oce_0037.nc t0ni_00002880_restart_oce_0038.nc t0ni_00002880_restart_oce_0039.nc t0ni_00002880_restart_oce_0040.nc t0ni_00002880_restart_oce_0041.nc t0ni_00002880_restart_oce_0042.nc t0ni_00002880_restart_oce_0043.nc t0ni_00002880_restart_oce_0044.nc t0ni_00002880_restart_oce_0045.nc t0ni_00002880_restart_oce_0046.nc t0ni_00002880_restart_oce_0047.nc t0ni_00002880_restart_oce_0048.nc t0ni_00002880_restart_oce_0049.nc t0ni_00002880_restart_oce_0050.nc t0ni_00002880_restart_oce_0051.nc t0ni_00002880_restart_oce_0052.nc t0ni_00002880_restart_oce_0053.nc t0ni_00002880_restart_oce_0054.nc t0ni_00002880_restart_oce_0055.nc t0ni_00002880_restart_oce_0056.nc t0ni_00002880_restart_oce_0057.nc t0ni_00002880_restart_oce_0058.nc t0ni_00002880_restart_oce_0059.nc t0ni_00002880_restart_oce_0060.nc t0ni_00002880_restart_oce_0061.nc t0ni_00002880_restart_oce_0062.nc t0ni_00002880_restart_oce_0063.nc t0ni_00002880_restart_oce_0064.nc t0ni_00002880_restart_oce_0065.nc t0ni_00002880_restart_oce_0066.nc t0ni_00002880_restart_oce_0067.nc t0ni_00002880_restart_oce_0068.nc t0ni_00002880_restart_oce_0069.nc t0ni_00002880_restart_oce_0070.nc t0ni_00002880_restart_oce_0071.nc t0ni_00002880_restart_oce_0072.nc t0ni_00002880_restart_oce_0073.nc t0ni_00002880_restart_oce_0074.nc t0ni_00002880_restart_oce_0075.nc t0ni_00002880_restart_oce_0076.nc t0ni_00002880_restart_oce_0077.nc t0ni_00002880_restart_oce_0078.nc t0ni_00002880_restart_oce_0079.nc t0ni_00002880_restart_oce_0080.nc t0ni_00002880_restart_oce_0081.nc t0ni_00002880_restart_oce_0082.nc t0ni_00002880_restart_oce_0083.nc t0ni_00002880_restart_oce_0084.nc t0ni_00002880_restart_oce_0085.nc t0ni_00002880_restart_oce_0086.nc t0ni_00002880_restart_oce_0087.nc t0ni_00002880_restart_oce_0088.nc t0ni_00002880_restart_oce_0089.nc t0ni_00002880_restart_oce_0090.nc t0ni_00002880_restart_oce_0091.nc t0ni_00002880_restart_oce_0092.nc t0ni_00002880_restart_oce_0093.nc t0ni_00002880_restart_oce_0094.nc t0ni_00002880_restart_oce_0095.nc t0ni_00002880_restart_oce_0096.nc t0ni_00002880_restart_oce_0097.nc t0ni_00002880_restart_oce_0098.nc t0ni_00002880_restart_oce_0099.nc t0ni_00002880_restart_oce_0100.nc t0ni_00002880_restart_oce_0101.nc t0ni_00002880_restart_oce_0102.nc t0ni_00002880_restart_oce_0103.nc t0ni_00002880_restart_oce_0104.nc t0ni_00002880_restart_oce_0105.nc t0ni_00002880_restart_oce_0106.nc t0ni_00002880_restart_oce_0107.nc t0ni_00002880_restart_oce_0108.nc t0ni_00002880_restart_oce_0109.nc t0ni_00002880_restart_oce_0110.nc t0ni_00002880_restart_oce_0111.nc t0ni_00002880_restart_oce_0112.nc t0ni_00002880_restart_oce_0113.nc t0ni_00002880_restart_oce_0114.nc t0ni_00002880_restart_oce_0115.nc t0ni_00002880_restart_oce_0116.nc t0ni_00002880_restart_oce_0117.nc t0ni_00002880_restart_oce_0118.nc t0ni_00002880_restart_oce_0119.nc t0ni_00002880_restart_oce_0120.nc t0ni_00002880_restart_oce_0121.nc t0ni_00002880_restart_oce_0122.nc t0ni_00002880_restart_oce_0123.nc t0ni_00002880_restart_oce_0124.nc t0ni_00002880_restart_oce_0125.nc t0ni_00002880_restart_oce_0126.nc t0ni_00002880_restart_oce_0127.nc t0ni_00002880_restart_oce_0128.nc t0ni_00002880_restart_oce_0129.nc t0ni_00002880_restart_oce_0130.nc t0ni_00002880_restart_oce_0131.nc t0ni_00002880_restart_oce_0132.nc t0ni_00002880_restart_oce_0133.nc t0ni_00002880_restart_oce_0134.nc t0ni_00002880_restart_oce_0135.nc t0ni_00002880_restart_oce_0136.nc t0ni_00002880_restart_oce_0137.nc t0ni_00002880_restart_oce_0138.nc t0ni_00002880_restart_oce_0139.nc t0ni_00002880_restart_oce_0140.nc t0ni_00002880_restart_oce_0141.nc t0ni_00002880_restart_oce_0142.nc t0ni_00002880_restart_oce_0143.nc t0ni_00002880_restart_oce_0144.nc t0ni_00002880_restart_oce_0145.nc t0ni_00002880_restart_oce_0146.nc t0ni_00002880_restart_oce_0147.nc t0ni_00002880_restart_oce_0148.nc t0ni_00002880_restart_oce_0149.nc t0ni_00002880_restart_oce_0150.nc t0ni_00002880_restart_oce_0151.nc t0ni_00002880_restart_oce_0152.nc t0ni_00002880_restart_oce_0153.nc t0ni_00002880_restart_oce_0154.nc t0ni_00002880_restart_oce_0155.nc t0ni_00002880_restart_oce_0156.nc t0ni_00002880_restart_oce_0157.nc t0ni_00002880_restart_oce_0158.nc t0ni_00002880_restart_oce_0159.nc t0ni_00002880_restart_oce_0160.nc t0ni_00002880_restart_oce_0161.nc t0ni_00002880_restart_oce_0162.nc t0ni_00002880_restart_oce_0163.nc t0ni_00002880_restart_oce_0164.nc t0ni_00002880_restart_oce_0165.nc t0ni_00002880_restart_oce_0166.nc t0ni_00002880_restart_oce_0167.nc t0ni_00002880_restart_oce_0168.nc t0ni_00002880_restart_oce_0169.nc t0ni_00002880_restart_oce_0170.nc t0ni_00002880_restart_oce_0171.nc t0ni_00002880_restart_oce_0172.nc t0ni_00002880_restart_oce_0173.nc t0ni_00002880_restart_oce_0174.nc t0ni_00002880_restart_oce_0175.nc t0ni_00002880_restart_oce_0176.nc t0ni_00002880_restart_oce_0177.nc t0ni_00002880_restart_oce_0178.nc t0ni_00002880_restart_oce_0179.nc t0ni_00002880_restart_oce_0180.nc t0ni_00002880_restart_oce_0181.nc t0ni_00002880_restart_oce_0182.nc t0ni_00002880_restart_oce_0183.nc t0ni_00002880_restart_oce_0184.nc t0ni_00002880_restart_oce_0185.nc t0ni_00002880_restart_oce_0186.nc t0ni_00002880_restart_oce_0187.nc t0ni_00002880_restart_oce_0188.nc t0ni_00002880_restart_oce_0189.nc t0ni_00002880_restart_oce_0190.nc t0ni_00002880_restart_oce_0191.nc t0ni_00002880_restart_oce_0192.nc t0ni_00002880_restart_oce_0193.nc t0ni_00002880_restart_oce_0194.nc t0ni_00002880_restart_oce_0195.nc t0ni_00002880_restart_oce_0196.nc t0ni_00002880_restart_oce_0197.nc t0ni_00002880_restart_oce_0198.nc t0ni_00002880_restart_oce_0199.nc t0ni_00002880_restart_oce_0200.nc t0ni_00002880_restart_oce_0201.nc t0ni_00002880_restart_oce_0202.nc t0ni_00002880_restart_oce_0203.nc t0ni_00002880_restart_oce_0204.nc t0ni_00002880_restart_oce_0205.nc t0ni_00002880_restart_oce_0206.nc t0ni_00002880_restart_oce_0207.nc t0ni_00002880_restart_oce_0208.nc t0ni_00002880_restart_oce_0209.nc t0ni_00002880_restart_oce_0210.nc t0ni_00002880_restart_oce_0211.nc t0ni_00002880_restart_oce_0212.nc t0ni_00002880_restart_oce_0213.nc t0ni_00002880_restart_oce_0214.nc t0ni_00002880_restart_oce_0215.nc t0ni_00002880_restart_oce_0216.nc t0ni_00002880_restart_oce_0217.nc t0ni_00002880_restart_oce_0218.nc t0ni_00002880_restart_oce_0219.nc t0ni_00002880_restart_oce_0220.nc t0ni_00002880_restart_oce_0221.nc t0ni_00002880_restart_oce_0222.nc t0ni_00002880_restart_oce_0223.nc t0ni_00002880_restart_oce_0224.nc t0ni_00002880_restart_oce_0225.nc t0ni_00002880_restart_oce_0226.nc t0ni_00002880_restart_oce_0227.nc t0ni_00002880_restart_oce_0228.nc t0ni_00002880_restart_oce_0229.nc t0ni_00002880_restart_oce_0230.nc t0ni_00002880_restart_oce_0231.nc t0ni_00002880_restart_oce_0232.nc t0ni_00002880_restart_oce_0233.nc t0ni_00002880_restart_oce_0234.nc t0ni_00002880_restart_oce_0235.nc t0ni_00002880_restart_oce_0236.nc t0ni_00002880_restart_oce_0237.nc t0ni_00002880_restart_oce_0238.nc t0ni_00002880_restart_oce_0239.nc t0ni_00002880_restart_oce_0240.nc t0ni_00002880_restart_oce_0241.nc t0ni_00002880_restart_oce_0242.nc t0ni_00002880_restart_oce_0243.nc t0ni_00002880_restart_oce_0244.nc t0ni_00002880_restart_oce_0245.nc t0ni_00002880_restart_oce_0246.nc t0ni_00002880_restart_oce_0247.nc t0ni_00002880_restart_oce_0248.nc t0ni_00002880_restart_oce_0249.nc t0ni_00002880_restart_oce_0250.nc t0ni_00002880_restart_oce_0251.nc t0ni_00002880_restart_oce_0252.nc t0ni_00002880_restart_oce_0253.nc t0ni_00002880_restart_oce_0254.nc t0ni_00002880_restart_oce_0255.nc t0ni_00002880_restart_oce_0256.nc t0ni_00002880_restart_oce_0257.nc t0ni_00002880_restart_oce_0258.nc t0ni_00002880_restart_oce_0259.nc t0ni_00002880_restart_oce_0260.nc t0ni_00002880_restart_oce_0261.nc t0ni_00002880_restart_oce_0262.nc t0ni_00002880_restart_oce_0263.nc t0ni_00002880_restart_oce_0264.nc t0ni_00002880_restart_oce_0265.nc t0ni_00002880_restart_oce_0266.nc t0ni_00002880_restart_oce_0267.nc t0ni_00002880_restart_oce_0268.nc t0ni_00002880_restart_oce_0269.nc t0ni_00002880_restart_oce_0270.nc t0ni_00002880_restart_oce_0271.nc t0ni_00002880_restart_oce_0272.nc t0ni_00002880_restart_oce_0273.nc t0ni_00002880_restart_oce_0274.nc t0ni_00002880_restart_oce_0275.nc t0ni_00002880_restart_oce_0276.nc t0ni_00002880_restart_oce_0277.nc t0ni_00002880_restart_oce_0278.nc t0ni_00002880_restart_oce_0279.nc t0ni_00002880_restart_oce_0280.nc t0ni_00002880_restart_oce_0281.nc t0ni_00002880_restart_oce_0282.nc t0ni_00002880_restart_oce_0283.nc t0ni_00002880_restart_oce_0284.nc t0ni_00002880_restart_oce_0285.nc t0ni_00002880_restart_oce_0286.nc t0ni_00002880_restart_oce_0287.nc t0ni_00002880_restart_oce_0288.nc t0ni_00002880_restart_oce_0289.nc t0ni_00002880_restart_oce_0290.nc t0ni_00002880_restart_oce_0291.nc t0ni_00002880_restart_oce_0292.nc t0ni_00002880_restart_oce_0293.nc t0ni_00002880_restart_oce_0294.nc t0ni_00002880_restart_oce_0295.nc t0ni_00002880_restart_oce_0296.nc t0ni_00002880_restart_oce_0297.nc t0ni_00002880_restart_oce_0298.nc t0ni_00002880_restart_oce_0299.nc t0ni_00002880_restart_oce_0300.nc t0ni_00002880_restart_oce_0301.nc t0ni_00002880_restart_oce_0302.nc t0ni_00002880_restart_oce_0303.nc t0ni_00002880_restart_oce_0304.nc t0ni_00002880_restart_oce_0305.nc t0ni_00002880_restart_oce_0306.nc t0ni_00002880_restart_oce_0307.nc t0ni_00002880_restart_oce_0308.nc t0ni_00002880_restart_oce_0309.nc t0ni_00002880_restart_oce_0310.nc t0ni_00002880_restart_oce_0311.nc t0ni_00002880_restart_oce_0312.nc t0ni_00002880_restart_oce_0313.nc t0ni_00002880_restart_oce_0314.nc t0ni_00002880_restart_oce_0315.nc t0ni_00002880_restart_oce_0316.nc t0ni_00002880_restart_oce_0317.nc t0ni_00002880_restart_oce_0318.nc t0ni_00002880_restart_oce_0319.nc t0ni_00002880_restart_oce_0320.nc t0ni_00002880_restart_oce_0321.nc t0ni_00002880_restart_oce_0322.nc t0ni_00002880_restart_oce_0323.nc t0ni_00002880_restart_oce_0324.nc t0ni_00002880_restart_oce_0325.nc t0ni_00002880_restart_oce_0326.nc t0ni_00002880_restart_oce_0327.nc t0ni_00002880_restart_oce_0328.nc t0ni_00002880_restart_oce_0329.nc t0ni_00002880_restart_oce_0330.nc t0ni_00002880_restart_oce_0331.nc t0ni_00002880_restart_oce_0332.nc t0ni_00002880_restart_oce_0333.nc t0ni_00002880_restart_oce_0334.nc t0ni_00002880_restart_oce_0335.nc t0ni_00002880_restart_oce_0336.nc t0ni_00002880_restart_oce_0337.nc t0ni_00002880_restart_oce_0338.nc t0ni_00002880_restart_oce_0339.nc t0ni_00002880_restart_oce_0340.nc t0ni_00002880_restart_oce_0341.nc t0ni_00002880_restart_oce_0342.nc t0ni_00002880_restart_oce_0343.nc t0ni_00002880_restart_oce_0344.nc t0ni_00002880_restart_oce_0345.nc t0ni_00002880_restart_oce_0346.nc t0ni_00002880_restart_oce_0347.nc t0ni_00002880_restart_oce_0348.nc t0ni_00002880_restart_oce_0349.nc t0ni_00002880_restart_oce_0350.nc t0ni_00002880_restart_oce_0351.nc t0ni_00002880_restart_oce_0352.nc t0ni_00002880_restart_oce_0353.nc t0ni_00002880_restart_oce_0354.nc t0ni_00002880_restart_oce_0355.nc t0ni_00002880_restart_oce_0356.nc t0ni_00002880_restart_oce_0357.nc t0ni_00002880_restart_oce_0358.nc t0ni_00002880_restart_oce_0359.nc t0ni_00002880_restart_oce_0360.nc t0ni_00002880_restart_oce_0361.nc t0ni_00002880_restart_oce_0362.nc t0ni_00002880_restart_oce_0363.nc t0ni_00002880_restart_oce_0364.nc t0ni_00002880_restart_oce_0365.nc t0ni_00002880_restart_oce_0366.nc t0ni_00002880_restart_oce_0367.nc t0ni_00002880_restart_oce_0368.nc t0ni_00002880_restart_oce_0369.nc t0ni_00002880_restart_oce_0370.nc t0ni_00002880_restart_oce_0371.nc t0ni_00002880_restart_oce_0372.nc t0ni_00002880_restart_oce_0373.nc t0ni_00002880_restart_oce_0374.nc t0ni_00002880_restart_oce_0375.nc t0ni_00002880_restart_oce_0376.nc t0ni_00002880_restart_oce_0377.nc t0ni_00002880_restart_oce_0378.nc t0ni_00002880_restart_oce_0379.nc t0ni_00002880_restart_oce_0380.nc t0ni_00002880_restart_oce_0381.nc t0ni_00002880_restart_oce_0382.nc t0ni_00002880_restart_oce_0383.nc t0ni_00002880_restart_oce_0384.nc t0ni_00002880_restart_oce_0385.nc t0ni_00002880_restart_oce_0386.nc t0ni_00002880_restart_oce_0387.nc t0ni_00002880_restart_oce_0388.nc t0ni_00002880_restart_oce_0389.nc t0ni_00002880_restart_oce_0390.nc t0ni_00002880_restart_oce_0391.nc t0ni_00002880_restart_oce_0392.nc t0ni_00002880_restart_oce_0393.nc t0ni_00002880_restart_oce_0394.nc t0ni_00002880_restart_oce_0395.nc t0ni_00002880_restart_oce_0396.nc t0ni_00002880_restart_oce_0397.nc t0ni_00002880_restart_oce_0398.nc t0ni_00002880_restart_oce_0399.nc t0ni_00002880_restart_oce_0400.nc t0ni_00002880_restart_oce_0401.nc t0ni_00002880_restart_oce_0402.nc t0ni_00002880_restart_oce_0403.nc t0ni_00002880_restart_oce_0404.nc t0ni_00002880_restart_oce_0405.nc t0ni_00002880_restart_oce_0406.nc t0ni_00002880_restart_oce_0407.nc t0ni_00002880_restart_oce_0408.nc t0ni_00002880_restart_oce_0409.nc t0ni_00002880_restart_oce_0410.nc t0ni_00002880_restart_oce_0411.nc t0ni_00002880_restart_oce_0412.nc t0ni_00002880_restart_oce_0413.nc t0ni_00002880_restart_oce_0414.nc t0ni_00002880_restart_oce_0415.nc t0ni_00002880_restart_oce_0416.nc t0ni_00002880_restart_oce_0417.nc t0ni_00002880_restart_oce_0418.nc t0ni_00002880_restart_oce_0419.nc t0ni_00002880_restart_oce_0420.nc t0ni_00002880_restart_oce_0421.nc t0ni_00002880_restart_oce_0422.nc t0ni_00002880_restart_oce_0423.nc t0ni_00002880_restart_oce_0424.nc t0ni_00002880_restart_oce_0425.nc t0ni_00002880_restart_oce_0426.nc t0ni_00002880_restart_oce_0427.nc t0ni_00002880_restart_oce_0428.nc t0ni_00002880_restart_oce_0429.nc t0ni_00002880_restart_oce_0430.nc t0ni_00002880_restart_oce_0431.nc t0ni_00002880_restart_oce_0432.nc t0ni_00002880_restart_oce_0433.nc t0ni_00002880_restart_oce_0434.nc t0ni_00002880_restart_oce_0435.nc t0ni_00002880_restart_oce_0436.nc t0ni_00002880_restart_oce_0437.nc t0ni_00002880_restart_oce_0438.nc t0ni_00002880_restart_oce_0439.nc t0ni_00002880_restart_oce_0440.nc t0ni_00002880_restart_oce_0441.nc t0ni_00002880_restart_oce_0442.nc t0ni_00002880_restart_oce_0443.nc t0ni_00002880_restart_oce_0444.nc t0ni_00002880_restart_oce_0445.nc t0ni_00002880_restart_oce_0446.nc t0ni_00002880_restart_oce_0447.nc t0ni_00002880_restart_oce_0448.nc t0ni_00002880_restart_oce_0449.nc t0ni_00002880_restart_oce_0450.nc t0ni_00002880_restart_oce_0451.nc t0ni_00002880_restart_oce_0452.nc t0ni_00002880_restart_oce_0453.nc t0ni_00002880_restart_oce_0454.nc t0ni_00002880_restart_oce_0455.nc t0ni_00002880_restart_oce_0456.nc t0ni_00002880_restart_oce_0457.nc t0ni_00002880_restart_oce_0458.nc t0ni_00002880_restart_oce_0459.nc t0ni_00002880_restart_oce_0460.nc t0ni_00002880_restart_oce_0461.nc t0ni_00002880_restart_oce_0462.nc t0ni_00002880_restart_oce_0463.nc t0ni_00002880_restart_oce_0464.nc t0ni_00002880_restart_oce_0465.nc t0ni_00002880_restart_oce_0466.nc t0ni_00002880_restart_oce_0467.nc t0ni_00002880_restart_oce_0468.nc t0ni_00002880_restart_oce_0469.nc t0ni_00002880_restart_oce_0470.nc t0ni_00002880_restart_oce_0471.nc t0ni_00002880_restart_oce_0472.nc t0ni_00002880_restart_oce_0473.nc t0ni_00002880_restart_oce_0474.nc t0ni_00002880_restart_oce_0475.nc t0ni_00002880_restart_oce_0476.nc t0ni_00002880_restart_oce_0477.nc t0ni_00002880_restart_oce_0478.nc t0ni_00002880_restart_oce_0479.nc t0ni_00002880_restart_oce_0480.nc t0ni_00002880_restart_oce_0481.nc t0ni_00002880_restart_oce_0482.nc t0ni_00002880_restart_oce_0483.nc t0ni_00002880_restart_oce_0484.nc t0ni_00002880_restart_oce_0485.nc t0ni_00002880_restart_oce_0486.nc t0ni_00002880_restart_oce_0487.nc t0ni_00002880_restart_oce_0488.nc t0ni_00002880_restart_oce_0489.nc t0ni_00002880_restart_oce_0490.nc t0ni_00002880_restart_oce_0491.nc t0ni_00002880_restart_oce_0492.nc t0ni_00002880_restart_oce_0493.nc t0ni_00002880_restart_oce_0494.nc t0ni_00002880_restart_oce_0495.nc t0ni_00002880_restart_oce_0496.nc t0ni_00002880_restart_oce_0497.nc t0ni_00002880_restart_oce_0498.nc t0ni_00002880_restart_oce_0499.nc t0ni_00002880_restart_oce_0500.nc t0ni_00002880_restart_oce_0501.nc t0ni_00002880_restart_oce_0502.nc t0ni_00002880_restart_oce_0503.nc t0ni_00002880_restart_oce_0504.nc t0ni_00002880_restart_oce_0505.nc t0ni_00002880_restart_oce_0506.nc t0ni_00002880_restart_oce_0507.nc t0ni_00002880_restart_oce_0508.nc t0ni_00002880_restart_oce_0509.nc t0ni_00002880_restart_oce_0510.nc t0ni_00002880_restart_oce_0511.nc t0ni_00002880_restart_oce_0512.nc t0ni_00002880_restart_oce_0513.nc t0ni_00002880_restart_oce_0514.nc t0ni_00002880_restart_oce_0515.nc t0ni_00002880_restart_oce_0516.nc t0ni_00002880_restart_oce_0517.nc t0ni_00002880_restart_oce_0518.nc t0ni_00002880_restart_oce_0519.nc t0ni_00002880_restart_oce_0520.nc t0ni_00002880_restart_oce_0521.nc t0ni_00002880_restart_oce_0522.nc t0ni_00002880_restart_oce_0523.nc t0ni_00002880_restart_oce_0524.nc t0ni_00002880_restart_oce_0525.nc t0ni_00002880_restart_oce_0526.nc t0ni_00002880_restart_oce_0527.nc t0ni_00002880_restart_oce_0528.nc t0ni_00002880_restart_oce_0529.nc t0ni_00002880_restart_oce_0530.nc t0ni_00002880_restart_oce_0531.nc t0ni_00002880_restart_oce_0532.nc t0ni_00002880_restart_oce_0533.nc t0ni_00002880_restart_oce_0534.nc t0ni_00002880_restart_oce_0535.nc t0ni_00002880_restart_oce_0536.nc t0ni_00002880_restart_oce_0537.nc t0ni_00002880_restart_oce_0538.nc t0ni_00002880_restart_oce_0539.nc t0ni_00002880_restart_oce_0540.nc t0ni_00002880_restart_oce_0541.nc t0ni_00002880_restart_oce_0542.nc t0ni_00002880_restart_oce_0543.nc t0ni_00002880_restart_oce_0544.nc t0ni_00002880_restart_oce_0545.nc t0ni_00002880_restart_oce_0546.nc t0ni_00002880_restart_oce_0547.nc t0ni_00002880_restart_oce_0548.nc t0ni_00002880_restart_oce_0549.nc t0ni_00002880_restart_oce_0550.nc t0ni_00002880_restart_oce_0551.nc t0ni_00002880_restart_oce_0552.nc t0ni_00002880_restart_oce_0553.nc t0ni_00002880_restart_oce_0554.nc t0ni_00002880_restart_oce_0555.nc t0ni_00002880_restart_oce_0556.nc t0ni_00002880_restart_oce_0557.nc t0ni_00002880_restart_oce_0558.nc t0ni_00002880_restart_oce_0559.nc t0ni_00002880_restart_oce_0560.nc t0ni_00002880_restart_oce_0561.nc t0ni_00002880_restart_oce_0562.nc t0ni_00002880_restart_oce_0563.nc t0ni_00002880_restart_oce_0564.nc t0ni_00002880_restart_oce_0565.nc t0ni_00002880_restart_oce_0566.nc t0ni_00002880_restart_oce_0567.nc t0ni_00002880_restart_oce_0568.nc t0ni_00002880_restart_oce_0569.nc t0ni_00002880_restart_oce_0570.nc t0ni_00002880_restart_oce_0571.nc t0ni_00002880_restart_oce_0572.nc t0ni_00002880_restart_oce_0573.nc t0ni_00002880_restart_oce_0574.nc t0ni_00002880_restart_oce_0575.nc t0ni_00002880_restart_oce_0576.nc t0ni_00002880_restart_oce_0577.nc t0ni_00002880_restart_oce_0578.nc t0ni_00002880_restart_oce_0579.nc t0ni_00002880_restart_oce_0580.nc t0ni_00002880_restart_oce_0581.nc t0ni_00002880_restart_oce_0582.nc t0ni_00002880_restart_oce_0583.nc t0ni_00002880_restart_oce_0584.nc t0ni_00002880_restart_oce_0585.nc t0ni_00002880_restart_oce_0586.nc t0ni_00002880_restart_oce_0587.nc t0ni_00002880_restart_oce_0588.nc t0ni_00002880_restart_oce_0589.nc t0ni_00002880_restart_oce_0590.nc t0ni_00002880_restart_oce_0591.nc t0ni_00002880_restart_oce_0592.nc t0ni_00002880_restart_oce_0593.nc t0ni_00002880_restart_oce_0594.nc t0ni_00002880_restart_oce_0595.nc t0ni_00002880_restart_oce_0596.nc t0ni_00002880_restart_oce_0597.nc t0ni_00002880_restart_oce_0598.nc t0ni_00002880_restart_oce_0599.nc t0ni_00002880_restart_oce_0600.nc t0ni_00002880_restart_oce_0601.nc t0ni_00002880_restart_oce_0602.nc t0ni_00002880_restart_oce_0603.nc t0ni_00002880_restart_oce_0604.nc t0ni_00002880_restart_oce_0605.nc t0ni_00002880_restart_oce_0606.nc t0ni_00002880_restart_oce_0607.nc t0ni_00002880_restart_oce_0608.nc t0ni_00002880_restart_oce_0609.nc t0ni_00002880_restart_oce_0610.nc t0ni_00002880_restart_oce_0611.nc t0ni_00002880_restart_oce_0612.nc t0ni_00002880_restart_oce_0613.nc t0ni_00002880_restart_oce_0614.nc t0ni_00002880_restart_oce_0615.nc t0ni_00002880_restart_oce_0616.nc t0ni_00002880_restart_oce_0617.nc t0ni_00002880_restart_oce_0618.nc t0ni_00002880_restart_oce_0619.nc t0ni_00002880_restart_oce_0620.nc t0ni_00002880_restart_oce_0621.nc t0ni_00002880_restart_oce_0622.nc t0ni_00002880_restart_oce_0623.nc t0ni_00002880_restart_oce_0624.nc t0ni_00002880_restart_oce_0625.nc t0ni_00002880_restart_oce_0626.nc t0ni_00002880_restart_oce_0627.nc t0ni_00002880_restart_oce_0628.nc t0ni_00002880_restart_oce_0629.nc t0ni_00002880_restart_oce_0630.nc t0ni_00002880_restart_oce_0631.nc t0ni_00002880_restart_oce_0632.nc t0ni_00002880_restart_oce_0633.nc t0ni_00002880_restart_oce_0634.nc t0ni_00002880_restart_oce_0635.nc t0ni_00002880_restart_oce_0636.nc t0ni_00002880_restart_oce_0637.nc t0ni_00002880_restart_oce_0638.nc t0ni_00002880_restart_oce_0639.nc t0ni_00002880_restart_oce_0640.nc t0ni_00002880_restart_oce_0641.nc t0ni_00002880_restart_oce_0642.nc t0ni_00002880_restart_oce_0643.nc t0ni_00002880_restart_oce_0644.nc t0ni_00002880_restart_oce_0645.nc t0ni_00002880_restart_oce_0646.nc t0ni_00002880_restart_oce_0647.nc t0ni_00002880_restart_oce_0648.nc t0ni_00002880_restart_oce_0649.nc t0ni_00002880_restart_oce_0650.nc t0ni_00002880_restart_oce_0651.nc t0ni_00002880_restart_oce_0652.nc t0ni_00002880_restart_oce_0653.nc t0ni_00002880_restart_oce_0654.nc t0ni_00002880_restart_oce_0655.nc t0ni_00002880_restart_oce_0656.nc t0ni_00002880_restart_oce_0657.nc t0ni_00002880_restart_oce_0658.nc t0ni_00002880_restart_oce_0659.nc t0ni_00002880_restart_oce_0660.nc t0ni_00002880_restart_oce_0661.nc t0ni_00002880_restart_oce_0662.nc t0ni_00002880_restart_oce_0663.nc t0ni_00002880_restart_oce_0664.nc t0ni_00002880_restart_oce_0665.nc t0ni_00002880_restart_oce_0666.nc t0ni_00002880_restart_oce_0667.nc t0ni_00002880_restart_oce_0668.nc t0ni_00002880_restart_oce_0669.nc t0ni_00002880_restart_oce_0670.nc t0ni_00002880_restart_oce_0671.nc t0ni_00002880_restart_oce_0672.nc t0ni_00002880_restart_oce_0673.nc t0ni_00002880_restart_oce_0674.nc t0ni_00002880_restart_oce_0675.nc t0ni_00002880_restart_oce_0676.nc t0ni_00002880_restart_oce_0677.nc t0ni_00002880_restart_oce_0678.nc t0ni_00002880_restart_oce_0679.nc t0ni_00002880_restart_oce_0680.nc t0ni_00002880_restart_oce_0681.nc t0ni_00002880_restart_oce_0682.nc t0ni_00002880_restart_oce_0683.nc t0ni_00002880_restart_oce_0684.nc t0ni_00002880_restart_oce_0685.nc t0ni_00002880_restart_oce_0686.nc t0ni_00002880_restart_oce_0687.nc t0ni_00002880_restart_oce_0688.nc t0ni_00002880_restart_oce_0689.nc t0ni_00002880_restart_oce_0690.nc t0ni_00002880_restart_oce_0691.nc t0ni_00002880_restart_oce_0692.nc t0ni_00002880_restart_oce_0693.nc t0ni_00002880_restart_oce_0694.nc t0ni_00002880_restart_oce_0695.nc t0ni_00002880_restart_oce_0696.nc t0ni_00002880_restart_oce_0697.nc t0ni_00002880_restart_oce_0698.nc t0ni_00002880_restart_oce_0699.nc t0ni_00002880_restart_oce_0700.nc t0ni_00002880_restart_oce_0701.nc t0ni_00002880_restart_oce_0702.nc t0ni_00002880_restart_oce_0703.nc t0ni_00002880_restart_oce_0704.nc t0ni_00002880_restart_oce_0705.nc t0ni_00002880_restart_oce_0706.nc t0ni_00002880_restart_oce_0707.nc t0ni_00002880_restart_oce_0708.nc t0ni_00002880_restart_oce_0709.nc t0ni_00002880_restart_oce_0710.nc t0ni_00002880_restart_oce_0711.nc t0ni_00002880_restart_oce_0712.nc t0ni_00002880_restart_oce_0713.nc t0ni_00002880_restart_oce_0714.nc t0ni_00002880_restart_oce_0715.nc t0ni_00002880_restart_oce_0716.nc t0ni_00002880_restart_oce_0717.nc t0ni_00002880_restart_oce_0718.nc t0ni_00002880_restart_oce_0719.nc t0ni_00002880_restart_oce_0720.nc t0ni_00002880_restart_oce_0721.nc t0ni_00002880_restart_oce_0722.nc t0ni_00002880_restart_oce_0723.nc t0ni_00002880_restart_oce_0724.nc t0ni_00002880_restart_oce_0725.nc t0ni_00002880_restart_oce_0726.nc t0ni_00002880_restart_oce_0727.nc t0ni_00002880_restart_oce_0728.nc t0ni_00002880_restart_oce_0729.nc t0ni_00002880_restart_oce_0730.nc t0ni_00002880_restart_oce_0731.nc t0ni_00002880_restart_oce_0732.nc t0ni_00002880_restart_oce_0733.nc t0ni_00002880_restart_oce_0734.nc t0ni_00002880_restart_oce_0735.nc t0ni_00002880_restart_oce_0736.nc t0ni_00002880_restart_oce_0737.nc t0ni_00002880_restart_oce_0738.nc t0ni_00002880_restart_oce_0739.nc t0ni_00002880_restart_oce_0740.nc t0ni_00002880_restart_oce_0741.nc t0ni_00002880_restart_oce_0742.nc t0ni_00002880_restart_oce_0743.nc t0ni_00002880_restart_oce_0744.nc t0ni_00002880_restart_oce_0745.nc t0ni_00002880_restart_oce_0746.nc t0ni_00002880_restart_oce_0747.nc t0ni_00002880_restart_oce_0748.nc t0ni_00002880_restart_oce_0749.nc t0ni_00002880_restart_oce_0750.nc t0ni_00002880_restart_oce_0751.nc t0ni_00002880_restart_oce_0752.nc t0ni_00002880_restart_oce_0753.nc t0ni_00002880_restart_oce_0754.nc t0ni_00002880_restart_oce_0755.nc t0ni_00002880_restart_oce_0756.nc t0ni_00002880_restart_oce_0757.nc t0ni_00002880_restart_oce_0758.nc t0ni_00002880_restart_oce_0759.nc t0ni_00002880_restart_oce_0760.nc t0ni_00002880_restart_oce_0761.nc t0ni_00002880_restart_oce_0762.nc t0ni_00002880_restart_oce_0763.nc t0ni_00002880_restart_oce_0764.nc t0ni_00002880_restart_oce_0765.nc t0ni_00002880_restart_oce_0766.nc t0ni_00002880_restart_oce_0767.nc t0ni_00002880_restart_oce_0768.nc t0ni_00002880_restart_oce_0769.nc t0ni_00002880_restart_oce_0770.nc t0ni_00002880_restart_oce_0771.nc t0ni_00002880_restart_oce_0772.nc t0ni_00002880_restart_oce_0773.nc t0ni_00002880_restart_oce_0774.nc t0ni_00002880_restart_oce_0775.nc t0ni_00002880_restart_oce_0776.nc t0ni_00002880_restart_oce_0777.nc t0ni_00002880_restart_oce_0778.nc t0ni_00002880_restart_oce_0779.nc t0ni_00002880_restart_oce_0780.nc t0ni_00002880_restart_oce_0781.nc t0ni_00002880_restart_oce_0782.nc t0ni_00002880_restart_oce_0783.nc t0ni_00002880_restart_oce_0784.nc t0ni_00002880_restart_oce_0785.nc t0ni_00002880_restart_oce_0786.nc t0ni_00002880_restart_oce_0787.nc t0ni_00002880_restart_oce_0788.nc t0ni_00002880_restart_oce_0789.nc t0ni_00002880_restart_oce_0790.nc t0ni_00002880_restart_oce_0791.nc t0ni_00002880_restart_oce_0792.nc t0ni_00002880_restart_oce_0793.nc t0ni_00002880_restart_oce_0794.nc t0ni_00002880_restart_oce_0795.nc t0ni_00002880_restart_oce_0796.nc t0ni_00002880_restart_oce_0797.nc t0ni_00002880_restart_oce_0798.nc t0ni_00002880_restart_oce_0799.nc t0ni_00002880_restart_oce_0800.nc t0ni_00002880_restart_oce_0801.nc t0ni_00002880_restart_oce_0802.nc t0ni_00002880_restart_oce_0803.nc t0ni_00002880_restart_oce_0804.nc t0ni_00002880_restart_oce_0805.nc t0ni_00002880_restart_oce_0806.nc t0ni_00002880_restart_oce_0807.nc t0ni_00002880_restart_oce_0808.nc t0ni_00002880_restart_oce_0809.nc t0ni_00002880_restart_oce_0810.nc t0ni_00002880_restart_oce_0811.nc t0ni_00002880_restart_oce_0812.nc t0ni_00002880_restart_oce_0813.nc t0ni_00002880_restart_oce_0814.nc t0ni_00002880_restart_oce_0815.nc t0ni_00002880_restart_oce_0816.nc t0ni_00002880_restart_oce_0817.nc t0ni_00002880_restart_oce_0818.nc t0ni_00002880_restart_oce_0819.nc t0ni_00002880_restart_oce_0820.nc t0ni_00002880_restart_oce_0821.nc t0ni_00002880_restart_oce_0822.nc t0ni_00002880_restart_oce_0823.nc t0ni_00002880_restart_oce_0824.nc t0ni_00002880_restart_oce_0825.nc t0ni_00002880_restart_oce_0826.nc t0ni_00002880_restart_oce_0827.nc t0ni_00002880_restart_oce_0828.nc t0ni_00002880_restart_oce_0829.nc t0ni_00002880_restart_oce_0830.nc t0ni_00002880_restart_oce_0831.nc t0ni_00002880_restart_oce_0832.nc t0ni_00002880_restart_oce_0833.nc t0ni_00002880_restart_oce_0834.nc t0ni_00002880_restart_oce_0835.nc t0ni_00002880_restart_oce_0836.nc t0ni_00002880_restart_oce_0837.nc t0ni_00002880_restart_oce_0838.nc t0ni_00002880_restart_oce_0839.nc t0ni_00002880_restart_oce_0840.nc t0ni_00002880_restart_oce_0841.nc t0ni_00002880_restart_oce_0842.nc t0ni_00002880_restart_oce_0843.nc t0ni_00002880_restart_oce_0844.nc t0ni_00002880_restart_oce_0845.nc t0ni_00002880_restart_oce_0846.nc t0ni_00002880_restart_oce_0847.nc t0ni_00002880_restart_oce_0848.nc t0ni_00002880_restart_oce_0849.nc t0ni_00002880_restart_oce_0850.nc t0ni_00002880_restart_oce_0851.nc t0ni_00002880_restart_oce_0852.nc t0ni_00002880_restart_oce_0853.nc t0ni_00002880_restart_oce_0854.nc t0ni_00002880_restart_oce_0855.nc t0ni_00002880_restart_oce_0856.nc t0ni_00002880_restart_oce_0857.nc t0ni_00002880_restart_oce_0858.nc t0ni_00002880_restart_oce_0859.nc t0ni_00002880_restart_oce_0860.nc t0ni_00002880_restart_oce_0861.nc t0ni_00002880_restart_oce_0862.nc t0ni_00002880_restart_oce_0863.nc t0ni_00002880_restart_oce_0864.nc t0ni_00002880_restart_oce_0865.nc t0ni_00002880_restart_oce_0866.nc t0ni_00002880_restart_oce_0867.nc t0ni_00002880_restart_oce_0868.nc t0ni_00002880_restart_oce_0869.nc t0ni_00002880_restart_oce_0870.nc t0ni_00002880_restart_oce_0871.nc t0ni_00002880_restart_oce_0872.nc t0ni_00002880_restart_oce_0873.nc t0ni_00002880_restart_oce_0874.nc t0ni_00002880_restart_oce_0875.nc t0ni_00002880_restart_oce_0876.nc t0ni_00002880_restart_oce_0877.nc t0ni_00002880_restart_oce_0878.nc t0ni_00002880_restart_oce_0879.nc t0ni_00002880_restart_oce_0880.nc t0ni_00002880_restart_oce_0881.nc t0ni_00002880_restart_oce_0882.nc t0ni_00002880_restart_oce_0883.nc t0ni_00002880_restart_oce_0884.nc t0ni_00002880_restart_oce_0885.nc t0ni_00002880_restart_oce_0886.nc t0ni_00002880_restart_oce_0887.nc t0ni_00002880_restart_oce_0888.nc t0ni_00002880_restart_oce_0889.nc t0ni_00002880_restart_oce_0890.nc t0ni_00002880_restart_oce_0891.nc t0ni_00002880_restart_oce_0892.nc t0ni_00002880_restart_oce_0893.nc t0ni_00002880_restart_oce_0894.nc t0ni_00002880_restart_oce_0895.nc t0ni_00002880_restart_oce_0896.nc t0ni_00002880_restart_oce_0897.nc t0ni_00002880_restart_oce_0898.nc t0ni_00002880_restart_oce_0899.nc t0ni_00002880_restart_oce_0900.nc t0ni_00002880_restart_oce_0901.nc t0ni_00002880_restart_oce_0902.nc t0ni_00002880_restart_oce_0903.nc t0ni_00002880_restart_oce_0904.nc t0ni_00002880_restart_oce_0905.nc t0ni_00002880_restart_oce_0906.nc t0ni_00002880_restart_oce_0907.nc t0ni_00002880_restart_oce_0908.nc t0ni_00002880_restart_oce_0909.nc t0ni_00002880_restart_oce_0910.nc t0ni_00002880_restart_oce_0911.nc t0ni_00002880_restart_oce_0912.nc t0ni_00002880_restart_oce_0913.nc t0ni_00002880_restart_oce_0914.nc t0ni_00002880_restart_oce_0915.nc t0ni_00002880_restart_oce_0916.nc t0ni_00002880_restart_oce_0917.nc t0ni_00002880_restart_oce_0918.nc t0ni_00002880_restart_oce_0919.nc t0ni_00002880_restart_oce_0920.nc t0ni_00002880_restart_oce_0921.nc t0ni_00002880_restart_oce_0922.nc t0ni_00002880_restart_oce_0923.nc t0ni_00002880_restart_oce_0924.nc t0ni_00002880_restart_oce_0925.nc t0ni_00002880_restart_oce_0926.nc t0ni_00002880_restart_oce_0927.nc t0ni_00002880_restart_oce_0928.nc t0ni_00002880_restart_oce_0929.nc t0ni_00002880_restart_oce_0930.nc t0ni_00002880_restart_oce_0931.nc t0ni_00002880_restart_oce_0932.nc t0ni_00002880_restart_oce_0933.nc t0ni_00002880_restart_oce_0934.nc t0ni_00002880_restart_oce_0935.nc t0ni_00002880_restart_oce_0936.nc t0ni_00002880_restart_oce_0937.nc t0ni_00002880_restart_oce_0938.nc t0ni_00002880_restart_oce_0939.nc t0ni_00002880_restart_oce_0940.nc t0ni_00002880_restart_oce_0941.nc t0ni_00002880_restart_oce_0942.nc t0ni_00002880_restart_oce_0943.nc t0ni_00002880_restart_oce_0944.nc t0ni_00002880_restart_oce_0945.nc t0ni_00002880_restart_oce_0946.nc t0ni_00002880_restart_oce_0947.nc t0ni_00002880_restart_oce_0948.nc t0ni_00002880_restart_oce_0949.nc t0ni_00002880_restart_oce_0950.nc t0ni_00002880_restart_oce_0951.nc t0ni_00002880_restart_oce_0952.nc t0ni_00002880_restart_oce_0953.nc t0ni_00002880_restart_oce_0954.nc t0ni_00002880_restart_oce_0955.nc t0ni_00002880_restart_oce_0956.nc t0ni_00002880_restart_oce_0957.nc t0ni_00002880_restart_oce_0958.nc t0ni_00002880_restart_oce_0959.nc t0ni_00002880_restart_oce_0960.nc t0ni_00002880_restart_oce_0961.nc t0ni_00002880_restart_oce_0962.nc t0ni_00002880_restart_oce_0963.nc t0ni_00002880_restart_oce_0964.nc t0ni_00002880_restart_oce_0965.nc t0ni_00002880_restart_oce_0966.nc t0ni_00002880_restart_oce_0967.nc t0ni_00002880_restart_oce_0968.nc t0ni_00002880_restart_oce_0969.nc t0ni_00002880_restart_oce_0970.nc t0ni_00002880_restart_oce_0971.nc t0ni_00002880_restart_oce_0972.nc t0ni_00002880_restart_oce_0973.nc t0ni_00002880_restart_oce_0974.nc t0ni_00002880_restart_oce_0975.nc t0ni_00002880_restart_oce_0976.nc t0ni_00002880_restart_oce_0977.nc t0ni_00002880_restart_oce_0978.nc t0ni_00002880_restart_oce_0979.nc t0ni_00002880_restart_oce_0980.nc t0ni_00002880_restart_oce_0981.nc t0ni_00002880_restart_oce_0982.nc t0ni_00002880_restart_oce_0983.nc t0ni_00002880_restart_oce_0984.nc t0ni_00002880_restart_oce_0985.nc t0ni_00002880_restart_oce_0986.nc t0ni_00002880_restart_oce_0987.nc t0ni_00002880_restart_oce_0988.nc t0ni_00002880_restart_oce_0989.nc t0ni_00002880_restart_oce_0990.nc t0ni_00002880_restart_oce_0991.nc t0ni_00002880_restart_oce_0992.nc t0ni_00002880_restart_oce_0993.nc t0ni_00002880_restart_oce_0994.nc t0ni_00002880_restart_oce_0995.nc t0ni_00002880_restart_oce_0996.nc t0ni_00002880_restart_oce_0997.nc t0ni_00002880_restart_oce_0998.nc t0ni_00002880_restart_oce_0999.nc t0ni_00002880_restart_oce_1000.nc t0ni_00002880_restart_oce_1001.nc t0ni_00002880_restart_oce_1002.nc t0ni_00002880_restart_oce_1003.nc t0ni_00002880_restart_oce_1004.nc t0ni_00002880_restart_oce_1005.nc t0ni_00002880_restart_oce_1006.nc t0ni_00002880_restart_oce_1007.nc t0ni_00002880_restart_oce_1008.nc t0ni_00002880_restart_oce_1009.nc t0ni_00002880_restart_oce_1010.nc t0ni_00002880_restart_oce_1011.nc t0ni_00002880_restart_oce_1012.nc t0ni_00002880_restart_oce_1013.nc t0ni_00002880_restart_oce_1014.nc t0ni_00002880_restart_oce_1015.nc t0ni_00002880_restart_oce_1016.nc t0ni_00002880_restart_oce_1017.nc t0ni_00002880_restart_oce_1018.nc t0ni_00002880_restart_oce_1019.nc t0ni_00002880_restart_oce_1020.nc t0ni_00002880_restart_oce_1021.nc t0ni_00002880_restart_oce_1022.nc t0ni_00002880_restart_oce_1023.nc t0ni_00002880_restart_oce_1024.nc t0ni_00002880_restart_oce_1025.nc t0ni_00002880_restart_oce_1026.nc t0ni_00002880_restart_oce_1027.nc t0ni_00002880_restart_oce_1028.nc t0ni_00002880_restart_oce_1029.nc t0ni_00002880_restart_oce_1030.nc t0ni_00002880_restart_oce_1031.nc t0ni_00002880_restart_oce_1032.nc t0ni_00002880_restart_oce_1033.nc t0ni_00002880_restart_oce_1034.nc t0ni_00002880_restart_oce_1035.nc t0ni_00002880_restart_oce_1036.nc t0ni_00002880_restart_oce_1037.nc t0ni_00002880_restart_oce_1038.nc t0ni_00002880_restart_oce_1039.nc t0ni_00002880_restart_oce_1040.nc t0ni_00002880_restart_oce_1041.nc t0ni_00002880_restart_oce_1042.nc t0ni_00002880_restart_oce_1043.nc t0ni_00002880_restart_oce_1044.nc t0ni_00002880_restart_oce_1045.nc t0ni_00002880_restart_oce_1046.nc t0ni_00002880_restart_oce_1047.nc t0ni_00002880_restart_oce_1048.nc t0ni_00002880_restart_oce_1049.nc t0ni_00002880_restart_oce_1050.nc t0ni_00002880_restart_oce_1051.nc t0ni_00002880_restart_oce_1052.nc t0ni_00002880_restart_oce_1053.nc t0ni_00002880_restart_oce_1054.nc t0ni_00002880_restart_oce_1055.nc t0ni_00002880_restart_oce_1056.nc t0ni_00002880_restart_oce_1057.nc t0ni_00002880_restart_oce_1058.nc t0ni_00002880_restart_oce_1059.nc t0ni_00002880_restart_oce_1060.nc t0ni_00002880_restart_oce_1061.nc t0ni_00002880_restart_oce_1062.nc t0ni_00002880_restart_oce_1063.nc t0ni_00002880_restart_oce_1064.nc t0ni_00002880_restart_oce_1065.nc t0ni_00002880_restart_oce_1066.nc t0ni_00002880_restart_oce_1067.nc t0ni_00002880_restart_oce_1068.nc t0ni_00002880_restart_oce_1069.nc t0ni_00002880_restart_oce_1070.nc t0ni_00002880_restart_oce_1071.nc t0ni_00002880_restart_oce_1072.nc t0ni_00002880_restart_oce_1073.nc t0ni_00002880_restart_oce_1074.nc t0ni_00002880_restart_oce_1075.nc t0ni_00002880_restart_oce_1076.nc t0ni_00002880_restart_oce_1077.nc t0ni_00002880_restart_oce_1078.nc t0ni_00002880_restart_oce_1079.nc t0ni_00002880_restart_oce_1080.nc t0ni_00002880_restart_oce_1081.nc t0ni_00002880_restart_oce_1082.nc t0ni_00002880_restart_oce_1083.nc t0ni_00002880_restart_oce_1084.nc t0ni_00002880_restart_oce_1085.nc t0ni_00002880_restart_oce_1086.nc t0ni_00002880_restart_oce_1087.nc t0ni_00002880_restart_oce_1088.nc t0ni_00002880_restart_oce_1089.nc t0ni_00002880_restart_oce_1090.nc t0ni_00002880_restart_oce_1091.nc t0ni_00002880_restart_oce_1092.nc t0ni_00002880_restart_oce_1093.nc t0ni_00002880_restart_oce_1094.nc t0ni_00002880_restart_oce_1095.nc t0ni_00002880_restart_oce_1096.nc t0ni_00002880_restart_oce_1097.nc t0ni_00002880_restart_oce_1098.nc t0ni_00002880_restart_oce_1099.nc t0ni_00002880_restart_oce_1100.nc t0ni_00002880_restart_oce_1101.nc t0ni_00002880_restart_oce_1102.nc t0ni_00002880_restart_oce_1103.nc t0ni_00002880_restart_oce_1104.nc t0ni_00002880_restart_oce_1105.nc t0ni_00002880_restart_oce_1106.nc t0ni_00002880_restart_oce_1107.nc t0ni_00002880_restart_oce_1108.nc t0ni_00002880_restart_oce_1109.nc t0ni_00002880_restart_oce_1110.nc t0ni_00002880_restart_oce_1111.nc t0ni_00002880_restart_oce_1112.nc t0ni_00002880_restart_oce_1113.nc t0ni_00002880_restart_oce_1114.nc t0ni_00002880_restart_oce_1115.nc t0ni_00002880_restart_oce_1116.nc t0ni_00002880_restart_oce_1117.nc t0ni_00002880_restart_oce_1118.nc t0ni_00002880_restart_oce_1119.nc t0ni_00002880_restart_oce_1120.nc t0ni_00002880_restart_oce_1121.nc t0ni_00002880_restart_oce_1122.nc t0ni_00002880_restart_oce_1123.nc t0ni_00002880_restart_oce_1124.nc t0ni_00002880_restart_oce_1125.nc t0ni_00002880_restart_oce_1126.nc t0ni_00002880_restart_oce_1127.nc t0ni_00002880_restart_oce_1128.nc t0ni_00002880_restart_oce_1129.nc t0ni_00002880_restart_oce_1130.nc t0ni_00002880_restart_oce_1131.nc t0ni_00002880_restart_oce_1132.nc t0ni_00002880_restart_oce_1133.nc t0ni_00002880_restart_oce_1134.nc t0ni_00002880_restart_oce_1135.nc t0ni_00002880_restart_oce_1136.nc t0ni_00002880_restart_oce_1137.nc t0ni_00002880_restart_oce_1138.nc t0ni_00002880_restart_oce_1139.nc t0ni_00002880_restart_oce_1140.nc t0ni_00002880_restart_oce_1141.nc t0ni_00002880_restart_oce_1142.nc t0ni_00002880_restart_oce_1143.nc t0ni_00002880_restart_oce_1144.nc t0ni_00002880_restart_oce_1145.nc t0ni_00002880_restart_oce_1146.nc t0ni_00002880_restart_oce_1147.nc t0ni_00002880_restart_oce_1148.nc t0ni_00002880_restart_oce_1149.nc t0ni_00002880_restart_oce_1150.nc t0ni_00002880_restart_oce_1151.nc t0ni_00002880_restart_oce_1152.nc t0ni_00002880_restart_oce_1153.nc t0ni_00002880_restart_oce_1154.nc t0ni_00002880_restart_oce_1155.nc t0ni_00002880_restart_oce_1156.nc t0ni_00002880_restart_oce_1157.nc t0ni_00002880_restart_oce_1158.nc t0ni_00002880_restart_oce_1159.nc t0ni_00002880_restart_oce_1160.nc t0ni_00002880_restart_oce_1161.nc t0ni_00002880_restart_oce_1162.nc t0ni_00002880_restart_oce_1163.nc t0ni_00002880_restart_oce_1164.nc t0ni_00002880_restart_oce_1165.nc t0ni_00002880_restart_oce_1166.nc t0ni_00002880_restart_oce_1167.nc t0ni_00002880_restart_oce_1168.nc t0ni_00002880_restart_oce_1169.nc t0ni_00002880_restart_oce_1170.nc t0ni_00002880_restart_oce_1171.nc t0ni_00002880_restart_oce_1172.nc t0ni_00002880_restart_oce_1173.nc t0ni_00002880_restart_oce_1174.nc t0ni_00002880_restart_oce_1175.nc t0ni_00002880_restart_oce_1176.nc t0ni_00002880_restart_oce_1177.nc t0ni_00002880_restart_oce_1178.nc t0ni_00002880_restart_oce_1179.nc t0ni_00002880_restart_oce_1180.nc t0ni_00002880_restart_oce_1181.nc t0ni_00002880_restart_oce_1182.nc t0ni_00002880_restart_oce_1183.nc t0ni_00002880_restart_oce_1184.nc t0ni_00002880_restart_oce_1185.nc t0ni_00002880_restart_oce_1186.nc t0ni_00002880_restart_oce_1187.nc t0ni_00002880_restart_oce_1188.nc t0ni_00002880_restart_oce_1189.nc t0ni_00002880_restart_oce_1190.nc t0ni_00002880_restart_oce_1191.nc t0ni_00002880_restart_oce_1192.nc t0ni_00002880_restart_oce_1193.nc t0ni_00002880_restart_oce_1194.nc t0ni_00002880_restart_oce_1195.nc t0ni_00002880_restart_oce_1196.nc t0ni_00002880_restart_oce_1197.nc t0ni_00002880_restart_oce_1198.nc t0ni_00002880_restart_oce_1199.nc t0ni_00002880_restart_oce_1200.nc t0ni_00002880_restart_oce_1201.nc t0ni_00002880_restart_oce_1202.nc t0ni_00002880_restart_oce_1203.nc t0ni_00002880_restart_oce_1204.nc t0ni_00002880_restart_oce_1205.nc t0ni_00002880_restart_oce_1206.nc t0ni_00002880_restart_oce_1207.nc t0ni_00002880_restart_oce_1208.nc t0ni_00002880_restart_oce_1209.nc t0ni_00002880_restart_oce_1210.nc t0ni_00002880_restart_oce_1211.nc t0ni_00002880_restart_oce_1212.nc t0ni_00002880_restart_oce_1213.nc t0ni_00002880_restart_oce_1214.nc t0ni_00002880_restart_oce_1215.nc t0ni_00002880_restart_oce_1216.nc t0ni_00002880_restart_oce_1217.nc t0ni_00002880_restart_oce_1218.nc t0ni_00002880_restart_oce_1219.nc t0ni_00002880_restart_oce_1220.nc t0ni_00002880_restart_oce_1221.nc t0ni_00002880_restart_oce_1222.nc t0ni_00002880_restart_oce_1223.nc t0ni_00002880_restart_oce_1224.nc t0ni_00002880_restart_oce_1225.nc t0ni_00002880_restart_oce_1226.nc t0ni_00002880_restart_oce_1227.nc t0ni_00002880_restart_oce_1228.nc t0ni_00002880_restart_oce_1229.nc t0ni_00002880_restart_oce_1230.nc t0ni_00002880_restart_oce_1231.nc t0ni_00002880_restart_oce_1232.nc t0ni_00002880_restart_oce_1233.nc t0ni_00002880_restart_oce_1234.nc t0ni_00002880_restart_oce_1235.nc t0ni_00002880_restart_oce_1236.nc t0ni_00002880_restart_oce_1237.nc t0ni_00002880_restart_oce_1238.nc t0ni_00002880_restart_oce_1239.nc t0ni_00002880_restart_oce_1240.nc t0ni_00002880_restart_oce_1241.nc t0ni_00002880_restart_oce_1242.nc t0ni_00002880_restart_oce_1243.nc t0ni_00002880_restart_oce_1244.nc t0ni_00002880_restart_oce_1245.nc t0ni_00002880_restart_oce_1246.nc t0ni_00002880_restart_oce_1247.nc t0ni_00002880_restart_oce_1248.nc t0ni_00002880_restart_oce_1249.nc t0ni_00002880_restart_oce_1250.nc t0ni_00002880_restart_oce_1251.nc t0ni_00002880_restart_oce_1252.nc t0ni_00002880_restart_oce_1253.nc t0ni_00002880_restart_oce_1254.nc t0ni_00002880_restart_oce_1255.nc t0ni_00002880_restart_oce_1256.nc t0ni_00002880_restart_oce_1257.nc t0ni_00002880_restart_oce_1258.nc t0ni_00002880_restart_oce_1259.nc t0ni_00002880_restart_oce_1260.nc t0ni_00002880_restart_oce_1261.nc t0ni_00002880_restart_oce_1262.nc t0ni_00002880_restart_oce_1263.nc t0ni_00002880_restart_oce_1264.nc t0ni_00002880_restart_oce_1265.nc t0ni_00002880_restart_oce_1266.nc t0ni_00002880_restart_oce_1267.nc t0ni_00002880_restart_oce_1268.nc t0ni_00002880_restart_oce_1269.nc t0ni_00002880_restart_oce_1270.nc t0ni_00002880_restart_oce_1271.nc t0ni_00002880_restart_oce_1272.nc t0ni_00002880_restart_oce_1273.nc t0ni_00002880_restart_oce_1274.nc t0ni_00002880_restart_oce_1275.nc t0ni_00002880_restart_oce_1276.nc t0ni_00002880_restart_oce_1277.nc t0ni_00002880_restart_oce_1278.nc t0ni_00002880_restart_oce_1279.nc t0ni_00002880_restart_oce_1280.nc t0ni_00002880_restart_oce_1281.nc t0ni_00002880_restart_oce_1282.nc t0ni_00002880_restart_oce_1283.nc t0ni_00002880_restart_oce_1284.nc t0ni_00002880_restart_oce_1285.nc t0ni_00002880_restart_oce_1286.nc t0ni_00002880_restart_oce_1287.nc t0ni_00002880_restart_oce_1288.nc t0ni_00002880_restart_oce_1289.nc t0ni_00002880_restart_oce_1290.nc t0ni_00002880_restart_oce_1291.nc t0ni_00002880_restart_oce_1292.nc t0ni_00002880_restart_oce_1293.nc t0ni_00002880_restart_oce_1294.nc t0ni_00002880_restart_oce_1295.nc t0ni_00002880_restart_oce_1296.nc t0ni_00002880_restart_oce_1297.nc t0ni_00002880_restart_oce_1298.nc t0ni_00002880_restart_oce_1299.nc t0ni_00002880_restart_oce_1300.nc t0ni_00002880_restart_oce_1301.nc t0ni_00002880_restart_oce_1302.nc t0ni_00002880_restart_oce_1303.nc t0ni_00002880_restart_oce_1304.nc t0ni_00002880_restart_oce_1305.nc t0ni_00002880_restart_oce_1306.nc t0ni_00002880_restart_oce_1307.nc t0ni_00002880_restart_oce_1308.nc t0ni_00002880_restart_oce_1309.nc t0ni_00002880_restart_oce_1310.nc t0ni_00002880_restart_oce_1311.nc t0ni_00002880_restart_oce_1312.nc t0ni_00002880_restart_oce_1313.nc t0ni_00002880_restart_oce_1314.nc t0ni_00002880_restart_oce_1315.nc t0ni_00002880_restart_oce_1316.nc t0ni_00002880_restart_oce_1317.nc t0ni_00002880_restart_oce_1318.nc t0ni_00002880_restart_oce_1319.nc t0ni_00002880_restart_oce_1320.nc t0ni_00002880_restart_oce_1321.nc t0ni_00002880_restart_oce_1322.nc t0ni_00002880_restart_oce_1323.nc t0ni_00002880_restart_oce_1324.nc t0ni_00002880_restart_oce_1325.nc t0ni_00002880_restart_oce_1326.nc t0ni_00002880_restart_oce_1327.nc t0ni_00002880_restart_oce_1328.nc t0ni_00002880_restart_oce_1329.nc t0ni_00002880_restart_oce_1330.nc t0ni_00002880_restart_oce_1331.nc t0ni_00002880_restart_oce_1332.nc t0ni_00002880_restart_oce_1333.nc t0ni_00002880_restart_oce_1334.nc t0ni_00002880_restart_oce_1335.nc t0ni_00002880_restart_oce_1336.nc t0ni_00002880_restart_oce_1337.nc t0ni_00002880_restart_oce_1338.nc t0ni_00002880_restart_oce_1339.nc t0ni_00002880_restart_oce_1340.nc t0ni_00002880_restart_oce_1341.nc t0ni_00002880_restart_oce_1342.nc t0ni_00002880_restart_oce_1343.nc t0ni_00002880_restart_oce_1344.nc t0ni_00002880_restart_oce_1345.nc t0ni_00002880_restart_oce_1346.nc t0ni_00002880_restart_oce_1347.nc t0ni_00002880_restart_oce_1348.nc t0ni_00002880_restart_oce_1349.nc t0ni_00002880_restart_oce_1350.nc t0ni_00002880_restart_oce_1351.nc t0ni_00002880_restart_oce_1352.nc t0ni_00002880_restart_oce_1353.nc t0ni_00002880_restart_oce_1354.nc t0ni_00002880_restart_oce_1355.nc t0ni_00002880_restart_oce_1356.nc t0ni_00002880_restart_oce_1357.nc t0ni_00002880_restart_oce_1358.nc t0ni_00002880_restart_oce_1359.nc t0ni_00002880_restart_oce_1360.nc t0ni_00002880_restart_oce_1361.nc t0ni_00002880_restart_oce_1362.nc t0ni_00002880_restart_oce_1363.nc t0ni_00002880_restart_oce_1364.nc t0ni_00002880_restart_oce_1365.nc t0ni_00002880_restart_oce_1366.nc t0ni_00002880_restart_oce_1367.nc t0ni_00002880_restart_oce_1368.nc t0ni_00002880_restart_oce_1369.nc t0ni_00002880_restart_oce_1370.nc t0ni_00002880_restart_oce_1371.nc t0ni_00002880_restart_oce_1372.nc t0ni_00002880_restart_oce_1373.nc t0ni_00002880_restart_oce_1374.nc t0ni_00002880_restart_oce_1375.nc t0ni_00002880_restart_oce_1376.nc t0ni_00002880_restart_oce_1377.nc t0ni_00002880_restart_oce_1378.nc t0ni_00002880_restart_oce_1379.nc t0ni_00002880_restart_oce_1380.nc t0ni_00002880_restart_oce_1381.nc t0ni_00002880_restart_oce_1382.nc t0ni_00002880_restart_oce_1383.nc t0ni_00002880_restart_oce_1384.nc t0ni_00002880_restart_oce_1385.nc t0ni_00002880_restart_oce_1386.nc t0ni_00002880_restart_oce_1387.nc t0ni_00002880_restart_oce_1388.nc t0ni_00002880_restart_oce_1389.nc t0ni_00002880_restart_oce_1390.nc
+ mkdir -p save_ic/19931201/nemo
+ [[ 2592000 -eq 0 ]]
+ [[ 2592000 -eq 2592000 ]]
+ cp -f t0ni_00002880_restart_oce_0000.nc t0ni_00002880_restart_oce_0001.nc t0ni_00002880_restart_oce_0002.nc t0ni_00002880_restart_oce_0003.nc t0ni_00002880_restart_oce_0004.nc t0ni_00002880_restart_oce_0005.nc t0ni_00002880_restart_oce_0006.nc t0ni_00002880_restart_oce_0007.nc t0ni_00002880_restart_oce_0008.nc t0ni_00002880_restart_oce_0009.nc t0ni_00002880_restart_oce_0010.nc t0ni_00002880_restart_oce_0011.nc t0ni_00002880_restart_oce_0012.nc t0ni_00002880_restart_oce_0013.nc t0ni_00002880_restart_oce_0014.nc t0ni_00002880_restart_oce_0015.nc t0ni_00002880_restart_oce_0016.nc t0ni_00002880_restart_oce_0017.nc t0ni_00002880_restart_oce_0018.nc t0ni_00002880_restart_oce_0019.nc t0ni_00002880_restart_oce_0020.nc t0ni_00002880_restart_oce_0021.nc t0ni_00002880_restart_oce_0022.nc t0ni_00002880_restart_oce_0023.nc t0ni_00002880_restart_oce_0024.nc t0ni_00002880_restart_oce_0025.nc t0ni_00002880_restart_oce_0026.nc t0ni_00002880_restart_oce_0027.nc t0ni_00002880_restart_oce_0028.nc t0ni_00002880_restart_oce_0029.nc t0ni_00002880_restart_oce_0030.nc t0ni_00002880_restart_oce_0031.nc t0ni_00002880_restart_oce_0032.nc t0ni_00002880_restart_oce_0033.nc t0ni_00002880_restart_oce_0034.nc t0ni_00002880_restart_oce_0035.nc t0ni_00002880_restart_oce_0036.nc t0ni_00002880_restart_oce_0037.nc t0ni_00002880_restart_oce_0038.nc t0ni_00002880_restart_oce_0039.nc t0ni_00002880_restart_oce_0040.nc t0ni_00002880_restart_oce_0041.nc t0ni_00002880_restart_oce_0042.nc t0ni_00002880_restart_oce_0043.nc t0ni_00002880_restart_oce_0044.nc t0ni_00002880_restart_oce_0045.nc t0ni_00002880_restart_oce_0046.nc t0ni_00002880_restart_oce_0047.nc t0ni_00002880_restart_oce_0048.nc t0ni_00002880_restart_oce_0049.nc t0ni_00002880_restart_oce_0050.nc t0ni_00002880_restart_oce_0051.nc t0ni_00002880_restart_oce_0052.nc t0ni_00002880_restart_oce_0053.nc t0ni_00002880_restart_oce_0054.nc t0ni_00002880_restart_oce_0055.nc t0ni_00002880_restart_oce_0056.nc t0ni_00002880_restart_oce_0057.nc t0ni_00002880_restart_oce_0058.nc t0ni_00002880_restart_oce_0059.nc t0ni_00002880_restart_oce_0060.nc t0ni_00002880_restart_oce_0061.nc t0ni_00002880_restart_oce_0062.nc t0ni_00002880_restart_oce_0063.nc t0ni_00002880_restart_oce_0064.nc t0ni_00002880_restart_oce_0065.nc t0ni_00002880_restart_oce_0066.nc t0ni_00002880_restart_oce_0067.nc t0ni_00002880_restart_oce_0068.nc t0ni_00002880_restart_oce_0069.nc t0ni_00002880_restart_oce_0070.nc t0ni_00002880_restart_oce_0071.nc t0ni_00002880_restart_oce_0072.nc t0ni_00002880_restart_oce_0073.nc t0ni_00002880_restart_oce_0074.nc t0ni_00002880_restart_oce_0075.nc t0ni_00002880_restart_oce_0076.nc t0ni_00002880_restart_oce_0077.nc t0ni_00002880_restart_oce_0078.nc t0ni_00002880_restart_oce_0079.nc t0ni_00002880_restart_oce_0080.nc t0ni_00002880_restart_oce_0081.nc t0ni_00002880_restart_oce_0082.nc t0ni_00002880_restart_oce_0083.nc t0ni_00002880_restart_oce_0084.nc t0ni_00002880_restart_oce_0085.nc t0ni_00002880_restart_oce_0086.nc t0ni_00002880_restart_oce_0087.nc t0ni_00002880_restart_oce_0088.nc t0ni_00002880_restart_oce_0089.nc t0ni_00002880_restart_oce_0090.nc t0ni_00002880_restart_oce_0091.nc t0ni_00002880_restart_oce_0092.nc t0ni_00002880_restart_oce_0093.nc t0ni_00002880_restart_oce_0094.nc t0ni_00002880_restart_oce_0095.nc t0ni_00002880_restart_oce_0096.nc t0ni_00002880_restart_oce_0097.nc t0ni_00002880_restart_oce_0098.nc t0ni_00002880_restart_oce_0099.nc t0ni_00002880_restart_oce_0100.nc t0ni_00002880_restart_oce_0101.nc t0ni_00002880_restart_oce_0102.nc t0ni_00002880_restart_oce_0103.nc t0ni_00002880_restart_oce_0104.nc t0ni_00002880_restart_oce_0105.nc t0ni_00002880_restart_oce_0106.nc t0ni_00002880_restart_oce_0107.nc t0ni_00002880_restart_oce_0108.nc t0ni_00002880_restart_oce_0109.nc t0ni_00002880_restart_oce_0110.nc t0ni_00002880_restart_oce_0111.nc t0ni_00002880_restart_oce_0112.nc t0ni_00002880_restart_oce_0113.nc t0ni_00002880_restart_oce_0114.nc t0ni_00002880_restart_oce_0115.nc t0ni_00002880_restart_oce_0116.nc t0ni_00002880_restart_oce_0117.nc t0ni_00002880_restart_oce_0118.nc t0ni_00002880_restart_oce_0119.nc t0ni_00002880_restart_oce_0120.nc t0ni_00002880_restart_oce_0121.nc t0ni_00002880_restart_oce_0122.nc t0ni_00002880_restart_oce_0123.nc t0ni_00002880_restart_oce_0124.nc t0ni_00002880_restart_oce_0125.nc t0ni_00002880_restart_oce_0126.nc t0ni_00002880_restart_oce_0127.nc t0ni_00002880_restart_oce_0128.nc t0ni_00002880_restart_oce_0129.nc t0ni_00002880_restart_oce_0130.nc t0ni_00002880_restart_oce_0131.nc t0ni_00002880_restart_oce_0132.nc t0ni_00002880_restart_oce_0133.nc t0ni_00002880_restart_oce_0134.nc t0ni_00002880_restart_oce_0135.nc t0ni_00002880_restart_oce_0136.nc t0ni_00002880_restart_oce_0137.nc t0ni_00002880_restart_oce_0138.nc t0ni_00002880_restart_oce_0139.nc t0ni_00002880_restart_oce_0140.nc t0ni_00002880_restart_oce_0141.nc t0ni_00002880_restart_oce_0142.nc t0ni_00002880_restart_oce_0143.nc t0ni_00002880_restart_oce_0144.nc t0ni_00002880_restart_oce_0145.nc t0ni_00002880_restart_oce_0146.nc t0ni_00002880_restart_oce_0147.nc t0ni_00002880_restart_oce_0148.nc t0ni_00002880_restart_oce_0149.nc t0ni_00002880_restart_oce_0150.nc t0ni_00002880_restart_oce_0151.nc t0ni_00002880_restart_oce_0152.nc t0ni_00002880_restart_oce_0153.nc t0ni_00002880_restart_oce_0154.nc t0ni_00002880_restart_oce_0155.nc t0ni_00002880_restart_oce_0156.nc t0ni_00002880_restart_oce_0157.nc t0ni_00002880_restart_oce_0158.nc t0ni_00002880_restart_oce_0159.nc t0ni_00002880_restart_oce_0160.nc t0ni_00002880_restart_oce_0161.nc t0ni_00002880_restart_oce_0162.nc t0ni_00002880_restart_oce_0163.nc t0ni_00002880_restart_oce_0164.nc t0ni_00002880_restart_oce_0165.nc t0ni_00002880_restart_oce_0166.nc t0ni_00002880_restart_oce_0167.nc t0ni_00002880_restart_oce_0168.nc t0ni_00002880_restart_oce_0169.nc t0ni_00002880_restart_oce_0170.nc t0ni_00002880_restart_oce_0171.nc t0ni_00002880_restart_oce_0172.nc t0ni_00002880_restart_oce_0173.nc t0ni_00002880_restart_oce_0174.nc t0ni_00002880_restart_oce_0175.nc t0ni_00002880_restart_oce_0176.nc t0ni_00002880_restart_oce_0177.nc t0ni_00002880_restart_oce_0178.nc t0ni_00002880_restart_oce_0179.nc t0ni_00002880_restart_oce_0180.nc t0ni_00002880_restart_oce_0181.nc t0ni_00002880_restart_oce_0182.nc t0ni_00002880_restart_oce_0183.nc t0ni_00002880_restart_oce_0184.nc t0ni_00002880_restart_oce_0185.nc t0ni_00002880_restart_oce_0186.nc t0ni_00002880_restart_oce_0187.nc t0ni_00002880_restart_oce_0188.nc t0ni_00002880_restart_oce_0189.nc t0ni_00002880_restart_oce_0190.nc t0ni_00002880_restart_oce_0191.nc t0ni_00002880_restart_oce_0192.nc t0ni_00002880_restart_oce_0193.nc t0ni_00002880_restart_oce_0194.nc t0ni_00002880_restart_oce_0195.nc t0ni_00002880_restart_oce_0196.nc t0ni_00002880_restart_oce_0197.nc t0ni_00002880_restart_oce_0198.nc t0ni_00002880_restart_oce_0199.nc t0ni_00002880_restart_oce_0200.nc t0ni_00002880_restart_oce_0201.nc t0ni_00002880_restart_oce_0202.nc t0ni_00002880_restart_oce_0203.nc t0ni_00002880_restart_oce_0204.nc t0ni_00002880_restart_oce_0205.nc t0ni_00002880_restart_oce_0206.nc t0ni_00002880_restart_oce_0207.nc t0ni_00002880_restart_oce_0208.nc t0ni_00002880_restart_oce_0209.nc t0ni_00002880_restart_oce_0210.nc t0ni_00002880_restart_oce_0211.nc t0ni_00002880_restart_oce_0212.nc t0ni_00002880_restart_oce_0213.nc t0ni_00002880_restart_oce_0214.nc t0ni_00002880_restart_oce_0215.nc t0ni_00002880_restart_oce_0216.nc t0ni_00002880_restart_oce_0217.nc t0ni_00002880_restart_oce_0218.nc t0ni_00002880_restart_oce_0219.nc t0ni_00002880_restart_oce_0220.nc t0ni_00002880_restart_oce_0221.nc t0ni_00002880_restart_oce_0222.nc t0ni_00002880_restart_oce_0223.nc t0ni_00002880_restart_oce_0224.nc t0ni_00002880_restart_oce_0225.nc t0ni_00002880_restart_oce_0226.nc t0ni_00002880_restart_oce_0227.nc t0ni_00002880_restart_oce_0228.nc t0ni_00002880_restart_oce_0229.nc t0ni_00002880_restart_oce_0230.nc t0ni_00002880_restart_oce_0231.nc t0ni_00002880_restart_oce_0232.nc t0ni_00002880_restart_oce_0233.nc t0ni_00002880_restart_oce_0234.nc t0ni_00002880_restart_oce_0235.nc t0ni_00002880_restart_oce_0236.nc t0ni_00002880_restart_oce_0237.nc t0ni_00002880_restart_oce_0238.nc t0ni_00002880_restart_oce_0239.nc t0ni_00002880_restart_oce_0240.nc t0ni_00002880_restart_oce_0241.nc t0ni_00002880_restart_oce_0242.nc t0ni_00002880_restart_oce_0243.nc t0ni_00002880_restart_oce_0244.nc t0ni_00002880_restart_oce_0245.nc t0ni_00002880_restart_oce_0246.nc t0ni_00002880_restart_oce_0247.nc t0ni_00002880_restart_oce_0248.nc t0ni_00002880_restart_oce_0249.nc t0ni_00002880_restart_oce_0250.nc t0ni_00002880_restart_oce_0251.nc t0ni_00002880_restart_oce_0252.nc t0ni_00002880_restart_oce_0253.nc t0ni_00002880_restart_oce_0254.nc t0ni_00002880_restart_oce_0255.nc t0ni_00002880_restart_oce_0256.nc t0ni_00002880_restart_oce_0257.nc t0ni_00002880_restart_oce_0258.nc t0ni_00002880_restart_oce_0259.nc t0ni_00002880_restart_oce_0260.nc t0ni_00002880_restart_oce_0261.nc t0ni_00002880_restart_oce_0262.nc t0ni_00002880_restart_oce_0263.nc t0ni_00002880_restart_oce_0264.nc t0ni_00002880_restart_oce_0265.nc t0ni_00002880_restart_oce_0266.nc t0ni_00002880_restart_oce_0267.nc t0ni_00002880_restart_oce_0268.nc t0ni_00002880_restart_oce_0269.nc t0ni_00002880_restart_oce_0270.nc t0ni_00002880_restart_oce_0271.nc t0ni_00002880_restart_oce_0272.nc t0ni_00002880_restart_oce_0273.nc t0ni_00002880_restart_oce_0274.nc t0ni_00002880_restart_oce_0275.nc t0ni_00002880_restart_oce_0276.nc t0ni_00002880_restart_oce_0277.nc t0ni_00002880_restart_oce_0278.nc t0ni_00002880_restart_oce_0279.nc t0ni_00002880_restart_oce_0280.nc t0ni_00002880_restart_oce_0281.nc t0ni_00002880_restart_oce_0282.nc t0ni_00002880_restart_oce_0283.nc t0ni_00002880_restart_oce_0284.nc t0ni_00002880_restart_oce_0285.nc t0ni_00002880_restart_oce_0286.nc t0ni_00002880_restart_oce_0287.nc t0ni_00002880_restart_oce_0288.nc t0ni_00002880_restart_oce_0289.nc t0ni_00002880_restart_oce_0290.nc t0ni_00002880_restart_oce_0291.nc t0ni_00002880_restart_oce_0292.nc t0ni_00002880_restart_oce_0293.nc t0ni_00002880_restart_oce_0294.nc t0ni_00002880_restart_oce_0295.nc t0ni_00002880_restart_oce_0296.nc t0ni_00002880_restart_oce_0297.nc t0ni_00002880_restart_oce_0298.nc t0ni_00002880_restart_oce_0299.nc t0ni_00002880_restart_oce_0300.nc t0ni_00002880_restart_oce_0301.nc t0ni_00002880_restart_oce_0302.nc t0ni_00002880_restart_oce_0303.nc t0ni_00002880_restart_oce_0304.nc t0ni_00002880_restart_oce_0305.nc t0ni_00002880_restart_oce_0306.nc t0ni_00002880_restart_oce_0307.nc t0ni_00002880_restart_oce_0308.nc t0ni_00002880_restart_oce_0309.nc t0ni_00002880_restart_oce_0310.nc t0ni_00002880_restart_oce_0311.nc t0ni_00002880_restart_oce_0312.nc t0ni_00002880_restart_oce_0313.nc t0ni_00002880_restart_oce_0314.nc t0ni_00002880_restart_oce_0315.nc t0ni_00002880_restart_oce_0316.nc t0ni_00002880_restart_oce_0317.nc t0ni_00002880_restart_oce_0318.nc t0ni_00002880_restart_oce_0319.nc t0ni_00002880_restart_oce_0320.nc t0ni_00002880_restart_oce_0321.nc t0ni_00002880_restart_oce_0322.nc t0ni_00002880_restart_oce_0323.nc t0ni_00002880_restart_oce_0324.nc t0ni_00002880_restart_oce_0325.nc t0ni_00002880_restart_oce_0326.nc t0ni_00002880_restart_oce_0327.nc t0ni_00002880_restart_oce_0328.nc t0ni_00002880_restart_oce_0329.nc t0ni_00002880_restart_oce_0330.nc t0ni_00002880_restart_oce_0331.nc t0ni_00002880_restart_oce_0332.nc t0ni_00002880_restart_oce_0333.nc t0ni_00002880_restart_oce_0334.nc t0ni_00002880_restart_oce_0335.nc t0ni_00002880_restart_oce_0336.nc t0ni_00002880_restart_oce_0337.nc t0ni_00002880_restart_oce_0338.nc t0ni_00002880_restart_oce_0339.nc t0ni_00002880_restart_oce_0340.nc t0ni_00002880_restart_oce_0341.nc t0ni_00002880_restart_oce_0342.nc t0ni_00002880_restart_oce_0343.nc t0ni_00002880_restart_oce_0344.nc t0ni_00002880_restart_oce_0345.nc t0ni_00002880_restart_oce_0346.nc t0ni_00002880_restart_oce_0347.nc t0ni_00002880_restart_oce_0348.nc t0ni_00002880_restart_oce_0349.nc t0ni_00002880_restart_oce_0350.nc t0ni_00002880_restart_oce_0351.nc t0ni_00002880_restart_oce_0352.nc t0ni_00002880_restart_oce_0353.nc t0ni_00002880_restart_oce_0354.nc t0ni_00002880_restart_oce_0355.nc t0ni_00002880_restart_oce_0356.nc t0ni_00002880_restart_oce_0357.nc t0ni_00002880_restart_oce_0358.nc t0ni_00002880_restart_oce_0359.nc t0ni_00002880_restart_oce_0360.nc t0ni_00002880_restart_oce_0361.nc t0ni_00002880_restart_oce_0362.nc t0ni_00002880_restart_oce_0363.nc t0ni_00002880_restart_oce_0364.nc t0ni_00002880_restart_oce_0365.nc t0ni_00002880_restart_oce_0366.nc t0ni_00002880_restart_oce_0367.nc t0ni_00002880_restart_oce_0368.nc t0ni_00002880_restart_oce_0369.nc t0ni_00002880_restart_oce_0370.nc t0ni_00002880_restart_oce_0371.nc t0ni_00002880_restart_oce_0372.nc t0ni_00002880_restart_oce_0373.nc t0ni_00002880_restart_oce_0374.nc t0ni_00002880_restart_oce_0375.nc t0ni_00002880_restart_oce_0376.nc t0ni_00002880_restart_oce_0377.nc t0ni_00002880_restart_oce_0378.nc t0ni_00002880_restart_oce_0379.nc t0ni_00002880_restart_oce_0380.nc t0ni_00002880_restart_oce_0381.nc t0ni_00002880_restart_oce_0382.nc t0ni_00002880_restart_oce_0383.nc t0ni_00002880_restart_oce_0384.nc t0ni_00002880_restart_oce_0385.nc t0ni_00002880_restart_oce_0386.nc t0ni_00002880_restart_oce_0387.nc t0ni_00002880_restart_oce_0388.nc t0ni_00002880_restart_oce_0389.nc t0ni_00002880_restart_oce_0390.nc t0ni_00002880_restart_oce_0391.nc t0ni_00002880_restart_oce_0392.nc t0ni_00002880_restart_oce_0393.nc t0ni_00002880_restart_oce_0394.nc t0ni_00002880_restart_oce_0395.nc t0ni_00002880_restart_oce_0396.nc t0ni_00002880_restart_oce_0397.nc t0ni_00002880_restart_oce_0398.nc t0ni_00002880_restart_oce_0399.nc t0ni_00002880_restart_oce_0400.nc t0ni_00002880_restart_oce_0401.nc t0ni_00002880_restart_oce_0402.nc t0ni_00002880_restart_oce_0403.nc t0ni_00002880_restart_oce_0404.nc t0ni_00002880_restart_oce_0405.nc t0ni_00002880_restart_oce_0406.nc t0ni_00002880_restart_oce_0407.nc t0ni_00002880_restart_oce_0408.nc t0ni_00002880_restart_oce_0409.nc t0ni_00002880_restart_oce_0410.nc t0ni_00002880_restart_oce_0411.nc t0ni_00002880_restart_oce_0412.nc t0ni_00002880_restart_oce_0413.nc t0ni_00002880_restart_oce_0414.nc t0ni_00002880_restart_oce_0415.nc t0ni_00002880_restart_oce_0416.nc t0ni_00002880_restart_oce_0417.nc t0ni_00002880_restart_oce_0418.nc t0ni_00002880_restart_oce_0419.nc t0ni_00002880_restart_oce_0420.nc t0ni_00002880_restart_oce_0421.nc t0ni_00002880_restart_oce_0422.nc t0ni_00002880_restart_oce_0423.nc t0ni_00002880_restart_oce_0424.nc t0ni_00002880_restart_oce_0425.nc t0ni_00002880_restart_oce_0426.nc t0ni_00002880_restart_oce_0427.nc t0ni_00002880_restart_oce_0428.nc t0ni_00002880_restart_oce_0429.nc t0ni_00002880_restart_oce_0430.nc t0ni_00002880_restart_oce_0431.nc t0ni_00002880_restart_oce_0432.nc t0ni_00002880_restart_oce_0433.nc t0ni_00002880_restart_oce_0434.nc t0ni_00002880_restart_oce_0435.nc t0ni_00002880_restart_oce_0436.nc t0ni_00002880_restart_oce_0437.nc t0ni_00002880_restart_oce_0438.nc t0ni_00002880_restart_oce_0439.nc t0ni_00002880_restart_oce_0440.nc t0ni_00002880_restart_oce_0441.nc t0ni_00002880_restart_oce_0442.nc t0ni_00002880_restart_oce_0443.nc t0ni_00002880_restart_oce_0444.nc t0ni_00002880_restart_oce_0445.nc t0ni_00002880_restart_oce_0446.nc t0ni_00002880_restart_oce_0447.nc t0ni_00002880_restart_oce_0448.nc t0ni_00002880_restart_oce_0449.nc t0ni_00002880_restart_oce_0450.nc t0ni_00002880_restart_oce_0451.nc t0ni_00002880_restart_oce_0452.nc t0ni_00002880_restart_oce_0453.nc t0ni_00002880_restart_oce_0454.nc t0ni_00002880_restart_oce_0455.nc t0ni_00002880_restart_oce_0456.nc t0ni_00002880_restart_oce_0457.nc t0ni_00002880_restart_oce_0458.nc t0ni_00002880_restart_oce_0459.nc t0ni_00002880_restart_oce_0460.nc t0ni_00002880_restart_oce_0461.nc t0ni_00002880_restart_oce_0462.nc t0ni_00002880_restart_oce_0463.nc t0ni_00002880_restart_oce_0464.nc t0ni_00002880_restart_oce_0465.nc t0ni_00002880_restart_oce_0466.nc t0ni_00002880_restart_oce_0467.nc t0ni_00002880_restart_oce_0468.nc t0ni_00002880_restart_oce_0469.nc t0ni_00002880_restart_oce_0470.nc t0ni_00002880_restart_oce_0471.nc t0ni_00002880_restart_oce_0472.nc t0ni_00002880_restart_oce_0473.nc t0ni_00002880_restart_oce_0474.nc t0ni_00002880_restart_oce_0475.nc t0ni_00002880_restart_oce_0476.nc t0ni_00002880_restart_oce_0477.nc t0ni_00002880_restart_oce_0478.nc t0ni_00002880_restart_oce_0479.nc t0ni_00002880_restart_oce_0480.nc t0ni_00002880_restart_oce_0481.nc t0ni_00002880_restart_oce_0482.nc t0ni_00002880_restart_oce_0483.nc t0ni_00002880_restart_oce_0484.nc t0ni_00002880_restart_oce_0485.nc t0ni_00002880_restart_oce_0486.nc t0ni_00002880_restart_oce_0487.nc t0ni_00002880_restart_oce_0488.nc t0ni_00002880_restart_oce_0489.nc t0ni_00002880_restart_oce_0490.nc t0ni_00002880_restart_oce_0491.nc t0ni_00002880_restart_oce_0492.nc t0ni_00002880_restart_oce_0493.nc t0ni_00002880_restart_oce_0494.nc t0ni_00002880_restart_oce_0495.nc t0ni_00002880_restart_oce_0496.nc t0ni_00002880_restart_oce_0497.nc t0ni_00002880_restart_oce_0498.nc t0ni_00002880_restart_oce_0499.nc t0ni_00002880_restart_oce_0500.nc t0ni_00002880_restart_oce_0501.nc t0ni_00002880_restart_oce_0502.nc t0ni_00002880_restart_oce_0503.nc t0ni_00002880_restart_oce_0504.nc t0ni_00002880_restart_oce_0505.nc t0ni_00002880_restart_oce_0506.nc t0ni_00002880_restart_oce_0507.nc t0ni_00002880_restart_oce_0508.nc t0ni_00002880_restart_oce_0509.nc t0ni_00002880_restart_oce_0510.nc t0ni_00002880_restart_oce_0511.nc t0ni_00002880_restart_oce_0512.nc t0ni_00002880_restart_oce_0513.nc t0ni_00002880_restart_oce_0514.nc t0ni_00002880_restart_oce_0515.nc t0ni_00002880_restart_oce_0516.nc t0ni_00002880_restart_oce_0517.nc t0ni_00002880_restart_oce_0518.nc t0ni_00002880_restart_oce_0519.nc t0ni_00002880_restart_oce_0520.nc t0ni_00002880_restart_oce_0521.nc t0ni_00002880_restart_oce_0522.nc t0ni_00002880_restart_oce_0523.nc t0ni_00002880_restart_oce_0524.nc t0ni_00002880_restart_oce_0525.nc t0ni_00002880_restart_oce_0526.nc t0ni_00002880_restart_oce_0527.nc t0ni_00002880_restart_oce_0528.nc t0ni_00002880_restart_oce_0529.nc t0ni_00002880_restart_oce_0530.nc t0ni_00002880_restart_oce_0531.nc t0ni_00002880_restart_oce_0532.nc t0ni_00002880_restart_oce_0533.nc t0ni_00002880_restart_oce_0534.nc t0ni_00002880_restart_oce_0535.nc t0ni_00002880_restart_oce_0536.nc t0ni_00002880_restart_oce_0537.nc t0ni_00002880_restart_oce_0538.nc t0ni_00002880_restart_oce_0539.nc t0ni_00002880_restart_oce_0540.nc t0ni_00002880_restart_oce_0541.nc t0ni_00002880_restart_oce_0542.nc t0ni_00002880_restart_oce_0543.nc t0ni_00002880_restart_oce_0544.nc t0ni_00002880_restart_oce_0545.nc t0ni_00002880_restart_oce_0546.nc t0ni_00002880_restart_oce_0547.nc t0ni_00002880_restart_oce_0548.nc t0ni_00002880_restart_oce_0549.nc t0ni_00002880_restart_oce_0550.nc t0ni_00002880_restart_oce_0551.nc t0ni_00002880_restart_oce_0552.nc t0ni_00002880_restart_oce_0553.nc t0ni_00002880_restart_oce_0554.nc t0ni_00002880_restart_oce_0555.nc t0ni_00002880_restart_oce_0556.nc t0ni_00002880_restart_oce_0557.nc t0ni_00002880_restart_oce_0558.nc t0ni_00002880_restart_oce_0559.nc t0ni_00002880_restart_oce_0560.nc t0ni_00002880_restart_oce_0561.nc t0ni_00002880_restart_oce_0562.nc t0ni_00002880_restart_oce_0563.nc t0ni_00002880_restart_oce_0564.nc t0ni_00002880_restart_oce_0565.nc t0ni_00002880_restart_oce_0566.nc t0ni_00002880_restart_oce_0567.nc t0ni_00002880_restart_oce_0568.nc t0ni_00002880_restart_oce_0569.nc t0ni_00002880_restart_oce_0570.nc t0ni_00002880_restart_oce_0571.nc t0ni_00002880_restart_oce_0572.nc t0ni_00002880_restart_oce_0573.nc t0ni_00002880_restart_oce_0574.nc t0ni_00002880_restart_oce_0575.nc t0ni_00002880_restart_oce_0576.nc t0ni_00002880_restart_oce_0577.nc t0ni_00002880_restart_oce_0578.nc t0ni_00002880_restart_oce_0579.nc t0ni_00002880_restart_oce_0580.nc t0ni_00002880_restart_oce_0581.nc t0ni_00002880_restart_oce_0582.nc t0ni_00002880_restart_oce_0583.nc t0ni_00002880_restart_oce_0584.nc t0ni_00002880_restart_oce_0585.nc t0ni_00002880_restart_oce_0586.nc t0ni_00002880_restart_oce_0587.nc t0ni_00002880_restart_oce_0588.nc t0ni_00002880_restart_oce_0589.nc t0ni_00002880_restart_oce_0590.nc t0ni_00002880_restart_oce_0591.nc t0ni_00002880_restart_oce_0592.nc t0ni_00002880_restart_oce_0593.nc t0ni_00002880_restart_oce_0594.nc t0ni_00002880_restart_oce_0595.nc t0ni_00002880_restart_oce_0596.nc t0ni_00002880_restart_oce_0597.nc t0ni_00002880_restart_oce_0598.nc t0ni_00002880_restart_oce_0599.nc t0ni_00002880_restart_oce_0600.nc t0ni_00002880_restart_oce_0601.nc t0ni_00002880_restart_oce_0602.nc t0ni_00002880_restart_oce_0603.nc t0ni_00002880_restart_oce_0604.nc t0ni_00002880_restart_oce_0605.nc t0ni_00002880_restart_oce_0606.nc t0ni_00002880_restart_oce_0607.nc t0ni_00002880_restart_oce_0608.nc t0ni_00002880_restart_oce_0609.nc t0ni_00002880_restart_oce_0610.nc t0ni_00002880_restart_oce_0611.nc t0ni_00002880_restart_oce_0612.nc t0ni_00002880_restart_oce_0613.nc t0ni_00002880_restart_oce_0614.nc t0ni_00002880_restart_oce_0615.nc t0ni_00002880_restart_oce_0616.nc t0ni_00002880_restart_oce_0617.nc t0ni_00002880_restart_oce_0618.nc t0ni_00002880_restart_oce_0619.nc t0ni_00002880_restart_oce_0620.nc t0ni_00002880_restart_oce_0621.nc t0ni_00002880_restart_oce_0622.nc t0ni_00002880_restart_oce_0623.nc t0ni_00002880_restart_oce_0624.nc t0ni_00002880_restart_oce_0625.nc t0ni_00002880_restart_oce_0626.nc t0ni_00002880_restart_oce_0627.nc t0ni_00002880_restart_oce_0628.nc t0ni_00002880_restart_oce_0629.nc t0ni_00002880_restart_oce_0630.nc t0ni_00002880_restart_oce_0631.nc t0ni_00002880_restart_oce_0632.nc t0ni_00002880_restart_oce_0633.nc t0ni_00002880_restart_oce_0634.nc t0ni_00002880_restart_oce_0635.nc t0ni_00002880_restart_oce_0636.nc t0ni_00002880_restart_oce_0637.nc t0ni_00002880_restart_oce_0638.nc t0ni_00002880_restart_oce_0639.nc t0ni_00002880_restart_oce_0640.nc t0ni_00002880_restart_oce_0641.nc t0ni_00002880_restart_oce_0642.nc t0ni_00002880_restart_oce_0643.nc t0ni_00002880_restart_oce_0644.nc t0ni_00002880_restart_oce_0645.nc t0ni_00002880_restart_oce_0646.nc t0ni_00002880_restart_oce_0647.nc t0ni_00002880_restart_oce_0648.nc t0ni_00002880_restart_oce_0649.nc t0ni_00002880_restart_oce_0650.nc t0ni_00002880_restart_oce_0651.nc t0ni_00002880_restart_oce_0652.nc t0ni_00002880_restart_oce_0653.nc t0ni_00002880_restart_oce_0654.nc t0ni_00002880_restart_oce_0655.nc t0ni_00002880_restart_oce_0656.nc t0ni_00002880_restart_oce_0657.nc t0ni_00002880_restart_oce_0658.nc t0ni_00002880_restart_oce_0659.nc t0ni_00002880_restart_oce_0660.nc t0ni_00002880_restart_oce_0661.nc t0ni_00002880_restart_oce_0662.nc t0ni_00002880_restart_oce_0663.nc t0ni_00002880_restart_oce_0664.nc t0ni_00002880_restart_oce_0665.nc t0ni_00002880_restart_oce_0666.nc t0ni_00002880_restart_oce_0667.nc t0ni_00002880_restart_oce_0668.nc t0ni_00002880_restart_oce_0669.nc t0ni_00002880_restart_oce_0670.nc t0ni_00002880_restart_oce_0671.nc t0ni_00002880_restart_oce_0672.nc t0ni_00002880_restart_oce_0673.nc t0ni_00002880_restart_oce_0674.nc t0ni_00002880_restart_oce_0675.nc t0ni_00002880_restart_oce_0676.nc t0ni_00002880_restart_oce_0677.nc t0ni_00002880_restart_oce_0678.nc t0ni_00002880_restart_oce_0679.nc t0ni_00002880_restart_oce_0680.nc t0ni_00002880_restart_oce_0681.nc t0ni_00002880_restart_oce_0682.nc t0ni_00002880_restart_oce_0683.nc t0ni_00002880_restart_oce_0684.nc t0ni_00002880_restart_oce_0685.nc t0ni_00002880_restart_oce_0686.nc t0ni_00002880_restart_oce_0687.nc t0ni_00002880_restart_oce_0688.nc t0ni_00002880_restart_oce_0689.nc t0ni_00002880_restart_oce_0690.nc t0ni_00002880_restart_oce_0691.nc t0ni_00002880_restart_oce_0692.nc t0ni_00002880_restart_oce_0693.nc t0ni_00002880_restart_oce_0694.nc t0ni_00002880_restart_oce_0695.nc t0ni_00002880_restart_oce_0696.nc t0ni_00002880_restart_oce_0697.nc t0ni_00002880_restart_oce_0698.nc t0ni_00002880_restart_oce_0699.nc t0ni_00002880_restart_oce_0700.nc t0ni_00002880_restart_oce_0701.nc t0ni_00002880_restart_oce_0702.nc t0ni_00002880_restart_oce_0703.nc t0ni_00002880_restart_oce_0704.nc t0ni_00002880_restart_oce_0705.nc t0ni_00002880_restart_oce_0706.nc t0ni_00002880_restart_oce_0707.nc t0ni_00002880_restart_oce_0708.nc t0ni_00002880_restart_oce_0709.nc t0ni_00002880_restart_oce_0710.nc t0ni_00002880_restart_oce_0711.nc t0ni_00002880_restart_oce_0712.nc t0ni_00002880_restart_oce_0713.nc t0ni_00002880_restart_oce_0714.nc t0ni_00002880_restart_oce_0715.nc t0ni_00002880_restart_oce_0716.nc t0ni_00002880_restart_oce_0717.nc t0ni_00002880_restart_oce_0718.nc t0ni_00002880_restart_oce_0719.nc t0ni_00002880_restart_oce_0720.nc t0ni_00002880_restart_oce_0721.nc t0ni_00002880_restart_oce_0722.nc t0ni_00002880_restart_oce_0723.nc t0ni_00002880_restart_oce_0724.nc t0ni_00002880_restart_oce_0725.nc t0ni_00002880_restart_oce_0726.nc t0ni_00002880_restart_oce_0727.nc t0ni_00002880_restart_oce_0728.nc t0ni_00002880_restart_oce_0729.nc t0ni_00002880_restart_oce_0730.nc t0ni_00002880_restart_oce_0731.nc t0ni_00002880_restart_oce_0732.nc t0ni_00002880_restart_oce_0733.nc t0ni_00002880_restart_oce_0734.nc t0ni_00002880_restart_oce_0735.nc t0ni_00002880_restart_oce_0736.nc t0ni_00002880_restart_oce_0737.nc t0ni_00002880_restart_oce_0738.nc t0ni_00002880_restart_oce_0739.nc t0ni_00002880_restart_oce_0740.nc t0ni_00002880_restart_oce_0741.nc t0ni_00002880_restart_oce_0742.nc t0ni_00002880_restart_oce_0743.nc t0ni_00002880_restart_oce_0744.nc t0ni_00002880_restart_oce_0745.nc t0ni_00002880_restart_oce_0746.nc t0ni_00002880_restart_oce_0747.nc t0ni_00002880_restart_oce_0748.nc t0ni_00002880_restart_oce_0749.nc t0ni_00002880_restart_oce_0750.nc t0ni_00002880_restart_oce_0751.nc t0ni_00002880_restart_oce_0752.nc t0ni_00002880_restart_oce_0753.nc t0ni_00002880_restart_oce_0754.nc t0ni_00002880_restart_oce_0755.nc t0ni_00002880_restart_oce_0756.nc t0ni_00002880_restart_oce_0757.nc t0ni_00002880_restart_oce_0758.nc t0ni_00002880_restart_oce_0759.nc t0ni_00002880_restart_oce_0760.nc t0ni_00002880_restart_oce_0761.nc t0ni_00002880_restart_oce_0762.nc t0ni_00002880_restart_oce_0763.nc t0ni_00002880_restart_oce_0764.nc t0ni_00002880_restart_oce_0765.nc t0ni_00002880_restart_oce_0766.nc t0ni_00002880_restart_oce_0767.nc t0ni_00002880_restart_oce_0768.nc t0ni_00002880_restart_oce_0769.nc t0ni_00002880_restart_oce_0770.nc t0ni_00002880_restart_oce_0771.nc t0ni_00002880_restart_oce_0772.nc t0ni_00002880_restart_oce_0773.nc t0ni_00002880_restart_oce_0774.nc t0ni_00002880_restart_oce_0775.nc t0ni_00002880_restart_oce_0776.nc t0ni_00002880_restart_oce_0777.nc t0ni_00002880_restart_oce_0778.nc t0ni_00002880_restart_oce_0779.nc t0ni_00002880_restart_oce_0780.nc t0ni_00002880_restart_oce_0781.nc t0ni_00002880_restart_oce_0782.nc t0ni_00002880_restart_oce_0783.nc t0ni_00002880_restart_oce_0784.nc t0ni_00002880_restart_oce_0785.nc t0ni_00002880_restart_oce_0786.nc t0ni_00002880_restart_oce_0787.nc t0ni_00002880_restart_oce_0788.nc t0ni_00002880_restart_oce_0789.nc t0ni_00002880_restart_oce_0790.nc t0ni_00002880_restart_oce_0791.nc t0ni_00002880_restart_oce_0792.nc t0ni_00002880_restart_oce_0793.nc t0ni_00002880_restart_oce_0794.nc t0ni_00002880_restart_oce_0795.nc t0ni_00002880_restart_oce_0796.nc t0ni_00002880_restart_oce_0797.nc t0ni_00002880_restart_oce_0798.nc t0ni_00002880_restart_oce_0799.nc t0ni_00002880_restart_oce_0800.nc t0ni_00002880_restart_oce_0801.nc t0ni_00002880_restart_oce_0802.nc t0ni_00002880_restart_oce_0803.nc t0ni_00002880_restart_oce_0804.nc t0ni_00002880_restart_oce_0805.nc t0ni_00002880_restart_oce_0806.nc t0ni_00002880_restart_oce_0807.nc t0ni_00002880_restart_oce_0808.nc t0ni_00002880_restart_oce_0809.nc t0ni_00002880_restart_oce_0810.nc t0ni_00002880_restart_oce_0811.nc t0ni_00002880_restart_oce_0812.nc t0ni_00002880_restart_oce_0813.nc t0ni_00002880_restart_oce_0814.nc t0ni_00002880_restart_oce_0815.nc t0ni_00002880_restart_oce_0816.nc t0ni_00002880_restart_oce_0817.nc t0ni_00002880_restart_oce_0818.nc t0ni_00002880_restart_oce_0819.nc t0ni_00002880_restart_oce_0820.nc t0ni_00002880_restart_oce_0821.nc t0ni_00002880_restart_oce_0822.nc t0ni_00002880_restart_oce_0823.nc t0ni_00002880_restart_oce_0824.nc t0ni_00002880_restart_oce_0825.nc t0ni_00002880_restart_oce_0826.nc t0ni_00002880_restart_oce_0827.nc t0ni_00002880_restart_oce_0828.nc t0ni_00002880_restart_oce_0829.nc t0ni_00002880_restart_oce_0830.nc t0ni_00002880_restart_oce_0831.nc t0ni_00002880_restart_oce_0832.nc t0ni_00002880_restart_oce_0833.nc t0ni_00002880_restart_oce_0834.nc t0ni_00002880_restart_oce_0835.nc t0ni_00002880_restart_oce_0836.nc t0ni_00002880_restart_oce_0837.nc t0ni_00002880_restart_oce_0838.nc t0ni_00002880_restart_oce_0839.nc t0ni_00002880_restart_oce_0840.nc t0ni_00002880_restart_oce_0841.nc t0ni_00002880_restart_oce_0842.nc t0ni_00002880_restart_oce_0843.nc t0ni_00002880_restart_oce_0844.nc t0ni_00002880_restart_oce_0845.nc t0ni_00002880_restart_oce_0846.nc t0ni_00002880_restart_oce_0847.nc t0ni_00002880_restart_oce_0848.nc t0ni_00002880_restart_oce_0849.nc t0ni_00002880_restart_oce_0850.nc t0ni_00002880_restart_oce_0851.nc t0ni_00002880_restart_oce_0852.nc t0ni_00002880_restart_oce_0853.nc t0ni_00002880_restart_oce_0854.nc t0ni_00002880_restart_oce_0855.nc t0ni_00002880_restart_oce_0856.nc t0ni_00002880_restart_oce_0857.nc t0ni_00002880_restart_oce_0858.nc t0ni_00002880_restart_oce_0859.nc t0ni_00002880_restart_oce_0860.nc t0ni_00002880_restart_oce_0861.nc t0ni_00002880_restart_oce_0862.nc t0ni_00002880_restart_oce_0863.nc t0ni_00002880_restart_oce_0864.nc t0ni_00002880_restart_oce_0865.nc t0ni_00002880_restart_oce_0866.nc t0ni_00002880_restart_oce_0867.nc t0ni_00002880_restart_oce_0868.nc t0ni_00002880_restart_oce_0869.nc t0ni_00002880_restart_oce_0870.nc t0ni_00002880_restart_oce_0871.nc t0ni_00002880_restart_oce_0872.nc t0ni_00002880_restart_oce_0873.nc t0ni_00002880_restart_oce_0874.nc t0ni_00002880_restart_oce_0875.nc t0ni_00002880_restart_oce_0876.nc t0ni_00002880_restart_oce_0877.nc t0ni_00002880_restart_oce_0878.nc t0ni_00002880_restart_oce_0879.nc t0ni_00002880_restart_oce_0880.nc t0ni_00002880_restart_oce_0881.nc t0ni_00002880_restart_oce_0882.nc t0ni_00002880_restart_oce_0883.nc t0ni_00002880_restart_oce_0884.nc t0ni_00002880_restart_oce_0885.nc t0ni_00002880_restart_oce_0886.nc t0ni_00002880_restart_oce_0887.nc t0ni_00002880_restart_oce_0888.nc t0ni_00002880_restart_oce_0889.nc t0ni_00002880_restart_oce_0890.nc t0ni_00002880_restart_oce_0891.nc t0ni_00002880_restart_oce_0892.nc t0ni_00002880_restart_oce_0893.nc t0ni_00002880_restart_oce_0894.nc t0ni_00002880_restart_oce_0895.nc t0ni_00002880_restart_oce_0896.nc t0ni_00002880_restart_oce_0897.nc t0ni_00002880_restart_oce_0898.nc t0ni_00002880_restart_oce_0899.nc t0ni_00002880_restart_oce_0900.nc t0ni_00002880_restart_oce_0901.nc t0ni_00002880_restart_oce_0902.nc t0ni_00002880_restart_oce_0903.nc t0ni_00002880_restart_oce_0904.nc t0ni_00002880_restart_oce_0905.nc t0ni_00002880_restart_oce_0906.nc t0ni_00002880_restart_oce_0907.nc t0ni_00002880_restart_oce_0908.nc t0ni_00002880_restart_oce_0909.nc t0ni_00002880_restart_oce_0910.nc t0ni_00002880_restart_oce_0911.nc t0ni_00002880_restart_oce_0912.nc t0ni_00002880_restart_oce_0913.nc t0ni_00002880_restart_oce_0914.nc t0ni_00002880_restart_oce_0915.nc t0ni_00002880_restart_oce_0916.nc t0ni_00002880_restart_oce_0917.nc t0ni_00002880_restart_oce_0918.nc t0ni_00002880_restart_oce_0919.nc t0ni_00002880_restart_oce_0920.nc t0ni_00002880_restart_oce_0921.nc t0ni_00002880_restart_oce_0922.nc t0ni_00002880_restart_oce_0923.nc t0ni_00002880_restart_oce_0924.nc t0ni_00002880_restart_oce_0925.nc t0ni_00002880_restart_oce_0926.nc t0ni_00002880_restart_oce_0927.nc t0ni_00002880_restart_oce_0928.nc t0ni_00002880_restart_oce_0929.nc t0ni_00002880_restart_oce_0930.nc t0ni_00002880_restart_oce_0931.nc t0ni_00002880_restart_oce_0932.nc t0ni_00002880_restart_oce_0933.nc t0ni_00002880_restart_oce_0934.nc t0ni_00002880_restart_oce_0935.nc t0ni_00002880_restart_oce_0936.nc t0ni_00002880_restart_oce_0937.nc t0ni_00002880_restart_oce_0938.nc t0ni_00002880_restart_oce_0939.nc t0ni_00002880_restart_oce_0940.nc t0ni_00002880_restart_oce_0941.nc t0ni_00002880_restart_oce_0942.nc t0ni_00002880_restart_oce_0943.nc t0ni_00002880_restart_oce_0944.nc t0ni_00002880_restart_oce_0945.nc t0ni_00002880_restart_oce_0946.nc t0ni_00002880_restart_oce_0947.nc t0ni_00002880_restart_oce_0948.nc t0ni_00002880_restart_oce_0949.nc t0ni_00002880_restart_oce_0950.nc t0ni_00002880_restart_oce_0951.nc t0ni_00002880_restart_oce_0952.nc t0ni_00002880_restart_oce_0953.nc t0ni_00002880_restart_oce_0954.nc t0ni_00002880_restart_oce_0955.nc t0ni_00002880_restart_oce_0956.nc t0ni_00002880_restart_oce_0957.nc t0ni_00002880_restart_oce_0958.nc t0ni_00002880_restart_oce_0959.nc t0ni_00002880_restart_oce_0960.nc t0ni_00002880_restart_oce_0961.nc t0ni_00002880_restart_oce_0962.nc t0ni_00002880_restart_oce_0963.nc t0ni_00002880_restart_oce_0964.nc t0ni_00002880_restart_oce_0965.nc t0ni_00002880_restart_oce_0966.nc t0ni_00002880_restart_oce_0967.nc t0ni_00002880_restart_oce_0968.nc t0ni_00002880_restart_oce_0969.nc t0ni_00002880_restart_oce_0970.nc t0ni_00002880_restart_oce_0971.nc t0ni_00002880_restart_oce_0972.nc t0ni_00002880_restart_oce_0973.nc t0ni_00002880_restart_oce_0974.nc t0ni_00002880_restart_oce_0975.nc t0ni_00002880_restart_oce_0976.nc t0ni_00002880_restart_oce_0977.nc t0ni_00002880_restart_oce_0978.nc t0ni_00002880_restart_oce_0979.nc t0ni_00002880_restart_oce_0980.nc t0ni_00002880_restart_oce_0981.nc t0ni_00002880_restart_oce_0982.nc t0ni_00002880_restart_oce_0983.nc t0ni_00002880_restart_oce_0984.nc t0ni_00002880_restart_oce_0985.nc t0ni_00002880_restart_oce_0986.nc t0ni_00002880_restart_oce_0987.nc t0ni_00002880_restart_oce_0988.nc t0ni_00002880_restart_oce_0989.nc t0ni_00002880_restart_oce_0990.nc t0ni_00002880_restart_oce_0991.nc t0ni_00002880_restart_oce_0992.nc t0ni_00002880_restart_oce_0993.nc t0ni_00002880_restart_oce_0994.nc t0ni_00002880_restart_oce_0995.nc t0ni_00002880_restart_oce_0996.nc t0ni_00002880_restart_oce_0997.nc t0ni_00002880_restart_oce_0998.nc t0ni_00002880_restart_oce_0999.nc t0ni_00002880_restart_oce_1000.nc t0ni_00002880_restart_oce_1001.nc t0ni_00002880_restart_oce_1002.nc t0ni_00002880_restart_oce_1003.nc t0ni_00002880_restart_oce_1004.nc t0ni_00002880_restart_oce_1005.nc t0ni_00002880_restart_oce_1006.nc t0ni_00002880_restart_oce_1007.nc t0ni_00002880_restart_oce_1008.nc t0ni_00002880_restart_oce_1009.nc t0ni_00002880_restart_oce_1010.nc t0ni_00002880_restart_oce_1011.nc t0ni_00002880_restart_oce_1012.nc t0ni_00002880_restart_oce_1013.nc t0ni_00002880_restart_oce_1014.nc t0ni_00002880_restart_oce_1015.nc t0ni_00002880_restart_oce_1016.nc t0ni_00002880_restart_oce_1017.nc t0ni_00002880_restart_oce_1018.nc t0ni_00002880_restart_oce_1019.nc t0ni_00002880_restart_oce_1020.nc t0ni_00002880_restart_oce_1021.nc t0ni_00002880_restart_oce_1022.nc t0ni_00002880_restart_oce_1023.nc t0ni_00002880_restart_oce_1024.nc t0ni_00002880_restart_oce_1025.nc t0ni_00002880_restart_oce_1026.nc t0ni_00002880_restart_oce_1027.nc t0ni_00002880_restart_oce_1028.nc t0ni_00002880_restart_oce_1029.nc t0ni_00002880_restart_oce_1030.nc t0ni_00002880_restart_oce_1031.nc t0ni_00002880_restart_oce_1032.nc t0ni_00002880_restart_oce_1033.nc t0ni_00002880_restart_oce_1034.nc t0ni_00002880_restart_oce_1035.nc t0ni_00002880_restart_oce_1036.nc t0ni_00002880_restart_oce_1037.nc t0ni_00002880_restart_oce_1038.nc t0ni_00002880_restart_oce_1039.nc t0ni_00002880_restart_oce_1040.nc t0ni_00002880_restart_oce_1041.nc t0ni_00002880_restart_oce_1042.nc t0ni_00002880_restart_oce_1043.nc t0ni_00002880_restart_oce_1044.nc t0ni_00002880_restart_oce_1045.nc t0ni_00002880_restart_oce_1046.nc t0ni_00002880_restart_oce_1047.nc t0ni_00002880_restart_oce_1048.nc t0ni_00002880_restart_oce_1049.nc t0ni_00002880_restart_oce_1050.nc t0ni_00002880_restart_oce_1051.nc t0ni_00002880_restart_oce_1052.nc t0ni_00002880_restart_oce_1053.nc t0ni_00002880_restart_oce_1054.nc t0ni_00002880_restart_oce_1055.nc t0ni_00002880_restart_oce_1056.nc t0ni_00002880_restart_oce_1057.nc t0ni_00002880_restart_oce_1058.nc t0ni_00002880_restart_oce_1059.nc t0ni_00002880_restart_oce_1060.nc t0ni_00002880_restart_oce_1061.nc t0ni_00002880_restart_oce_1062.nc t0ni_00002880_restart_oce_1063.nc t0ni_00002880_restart_oce_1064.nc t0ni_00002880_restart_oce_1065.nc t0ni_00002880_restart_oce_1066.nc t0ni_00002880_restart_oce_1067.nc t0ni_00002880_restart_oce_1068.nc t0ni_00002880_restart_oce_1069.nc t0ni_00002880_restart_oce_1070.nc t0ni_00002880_restart_oce_1071.nc t0ni_00002880_restart_oce_1072.nc t0ni_00002880_restart_oce_1073.nc t0ni_00002880_restart_oce_1074.nc t0ni_00002880_restart_oce_1075.nc t0ni_00002880_restart_oce_1076.nc t0ni_00002880_restart_oce_1077.nc t0ni_00002880_restart_oce_1078.nc t0ni_00002880_restart_oce_1079.nc t0ni_00002880_restart_oce_1080.nc t0ni_00002880_restart_oce_1081.nc t0ni_00002880_restart_oce_1082.nc t0ni_00002880_restart_oce_1083.nc t0ni_00002880_restart_oce_1084.nc t0ni_00002880_restart_oce_1085.nc t0ni_00002880_restart_oce_1086.nc t0ni_00002880_restart_oce_1087.nc t0ni_00002880_restart_oce_1088.nc t0ni_00002880_restart_oce_1089.nc t0ni_00002880_restart_oce_1090.nc t0ni_00002880_restart_oce_1091.nc t0ni_00002880_restart_oce_1092.nc t0ni_00002880_restart_oce_1093.nc t0ni_00002880_restart_oce_1094.nc t0ni_00002880_restart_oce_1095.nc t0ni_00002880_restart_oce_1096.nc t0ni_00002880_restart_oce_1097.nc t0ni_00002880_restart_oce_1098.nc t0ni_00002880_restart_oce_1099.nc t0ni_00002880_restart_oce_1100.nc t0ni_00002880_restart_oce_1101.nc t0ni_00002880_restart_oce_1102.nc t0ni_00002880_restart_oce_1103.nc t0ni_00002880_restart_oce_1104.nc t0ni_00002880_restart_oce_1105.nc t0ni_00002880_restart_oce_1106.nc t0ni_00002880_restart_oce_1107.nc t0ni_00002880_restart_oce_1108.nc t0ni_00002880_restart_oce_1109.nc t0ni_00002880_restart_oce_1110.nc t0ni_00002880_restart_oce_1111.nc t0ni_00002880_restart_oce_1112.nc t0ni_00002880_restart_oce_1113.nc t0ni_00002880_restart_oce_1114.nc t0ni_00002880_restart_oce_1115.nc t0ni_00002880_restart_oce_1116.nc t0ni_00002880_restart_oce_1117.nc t0ni_00002880_restart_oce_1118.nc t0ni_00002880_restart_oce_1119.nc t0ni_00002880_restart_oce_1120.nc t0ni_00002880_restart_oce_1121.nc t0ni_00002880_restart_oce_1122.nc t0ni_00002880_restart_oce_1123.nc t0ni_00002880_restart_oce_1124.nc t0ni_00002880_restart_oce_1125.nc t0ni_00002880_restart_oce_1126.nc t0ni_00002880_restart_oce_1127.nc t0ni_00002880_restart_oce_1128.nc t0ni_00002880_restart_oce_1129.nc t0ni_00002880_restart_oce_1130.nc t0ni_00002880_restart_oce_1131.nc t0ni_00002880_restart_oce_1132.nc t0ni_00002880_restart_oce_1133.nc t0ni_00002880_restart_oce_1134.nc t0ni_00002880_restart_oce_1135.nc t0ni_00002880_restart_oce_1136.nc t0ni_00002880_restart_oce_1137.nc t0ni_00002880_restart_oce_1138.nc t0ni_00002880_restart_oce_1139.nc t0ni_00002880_restart_oce_1140.nc t0ni_00002880_restart_oce_1141.nc t0ni_00002880_restart_oce_1142.nc t0ni_00002880_restart_oce_1143.nc t0ni_00002880_restart_oce_1144.nc t0ni_00002880_restart_oce_1145.nc t0ni_00002880_restart_oce_1146.nc t0ni_00002880_restart_oce_1147.nc t0ni_00002880_restart_oce_1148.nc t0ni_00002880_restart_oce_1149.nc t0ni_00002880_restart_oce_1150.nc t0ni_00002880_restart_oce_1151.nc t0ni_00002880_restart_oce_1152.nc t0ni_00002880_restart_oce_1153.nc t0ni_00002880_restart_oce_1154.nc t0ni_00002880_restart_oce_1155.nc t0ni_00002880_restart_oce_1156.nc t0ni_00002880_restart_oce_1157.nc t0ni_00002880_restart_oce_1158.nc t0ni_00002880_restart_oce_1159.nc t0ni_00002880_restart_oce_1160.nc t0ni_00002880_restart_oce_1161.nc t0ni_00002880_restart_oce_1162.nc t0ni_00002880_restart_oce_1163.nc t0ni_00002880_restart_oce_1164.nc t0ni_00002880_restart_oce_1165.nc t0ni_00002880_restart_oce_1166.nc t0ni_00002880_restart_oce_1167.nc t0ni_00002880_restart_oce_1168.nc t0ni_00002880_restart_oce_1169.nc t0ni_00002880_restart_oce_1170.nc t0ni_00002880_restart_oce_1171.nc t0ni_00002880_restart_oce_1172.nc t0ni_00002880_restart_oce_1173.nc t0ni_00002880_restart_oce_1174.nc t0ni_00002880_restart_oce_1175.nc t0ni_00002880_restart_oce_1176.nc t0ni_00002880_restart_oce_1177.nc t0ni_00002880_restart_oce_1178.nc t0ni_00002880_restart_oce_1179.nc t0ni_00002880_restart_oce_1180.nc t0ni_00002880_restart_oce_1181.nc t0ni_00002880_restart_oce_1182.nc t0ni_00002880_restart_oce_1183.nc t0ni_00002880_restart_oce_1184.nc t0ni_00002880_restart_oce_1185.nc t0ni_00002880_restart_oce_1186.nc t0ni_00002880_restart_oce_1187.nc t0ni_00002880_restart_oce_1188.nc t0ni_00002880_restart_oce_1189.nc t0ni_00002880_restart_oce_1190.nc t0ni_00002880_restart_oce_1191.nc t0ni_00002880_restart_oce_1192.nc t0ni_00002880_restart_oce_1193.nc t0ni_00002880_restart_oce_1194.nc t0ni_00002880_restart_oce_1195.nc t0ni_00002880_restart_oce_1196.nc t0ni_00002880_restart_oce_1197.nc t0ni_00002880_restart_oce_1198.nc t0ni_00002880_restart_oce_1199.nc t0ni_00002880_restart_oce_1200.nc t0ni_00002880_restart_oce_1201.nc t0ni_00002880_restart_oce_1202.nc t0ni_00002880_restart_oce_1203.nc t0ni_00002880_restart_oce_1204.nc t0ni_00002880_restart_oce_1205.nc t0ni_00002880_restart_oce_1206.nc t0ni_00002880_restart_oce_1207.nc t0ni_00002880_restart_oce_1208.nc t0ni_00002880_restart_oce_1209.nc t0ni_00002880_restart_oce_1210.nc t0ni_00002880_restart_oce_1211.nc t0ni_00002880_restart_oce_1212.nc t0ni_00002880_restart_oce_1213.nc t0ni_00002880_restart_oce_1214.nc t0ni_00002880_restart_oce_1215.nc t0ni_00002880_restart_oce_1216.nc t0ni_00002880_restart_oce_1217.nc t0ni_00002880_restart_oce_1218.nc t0ni_00002880_restart_oce_1219.nc t0ni_00002880_restart_oce_1220.nc t0ni_00002880_restart_oce_1221.nc t0ni_00002880_restart_oce_1222.nc t0ni_00002880_restart_oce_1223.nc t0ni_00002880_restart_oce_1224.nc t0ni_00002880_restart_oce_1225.nc t0ni_00002880_restart_oce_1226.nc t0ni_00002880_restart_oce_1227.nc t0ni_00002880_restart_oce_1228.nc t0ni_00002880_restart_oce_1229.nc t0ni_00002880_restart_oce_1230.nc t0ni_00002880_restart_oce_1231.nc t0ni_00002880_restart_oce_1232.nc t0ni_00002880_restart_oce_1233.nc t0ni_00002880_restart_oce_1234.nc t0ni_00002880_restart_oce_1235.nc t0ni_00002880_restart_oce_1236.nc t0ni_00002880_restart_oce_1237.nc t0ni_00002880_restart_oce_1238.nc t0ni_00002880_restart_oce_1239.nc t0ni_00002880_restart_oce_1240.nc t0ni_00002880_restart_oce_1241.nc t0ni_00002880_restart_oce_1242.nc t0ni_00002880_restart_oce_1243.nc t0ni_00002880_restart_oce_1244.nc t0ni_00002880_restart_oce_1245.nc t0ni_00002880_restart_oce_1246.nc t0ni_00002880_restart_oce_1247.nc t0ni_00002880_restart_oce_1248.nc t0ni_00002880_restart_oce_1249.nc t0ni_00002880_restart_oce_1250.nc t0ni_00002880_restart_oce_1251.nc t0ni_00002880_restart_oce_1252.nc t0ni_00002880_restart_oce_1253.nc t0ni_00002880_restart_oce_1254.nc t0ni_00002880_restart_oce_1255.nc t0ni_00002880_restart_oce_1256.nc t0ni_00002880_restart_oce_1257.nc t0ni_00002880_restart_oce_1258.nc t0ni_00002880_restart_oce_1259.nc t0ni_00002880_restart_oce_1260.nc t0ni_00002880_restart_oce_1261.nc t0ni_00002880_restart_oce_1262.nc t0ni_00002880_restart_oce_1263.nc t0ni_00002880_restart_oce_1264.nc t0ni_00002880_restart_oce_1265.nc t0ni_00002880_restart_oce_1266.nc t0ni_00002880_restart_oce_1267.nc t0ni_00002880_restart_oce_1268.nc t0ni_00002880_restart_oce_1269.nc t0ni_00002880_restart_oce_1270.nc t0ni_00002880_restart_oce_1271.nc t0ni_00002880_restart_oce_1272.nc t0ni_00002880_restart_oce_1273.nc t0ni_00002880_restart_oce_1274.nc t0ni_00002880_restart_oce_1275.nc t0ni_00002880_restart_oce_1276.nc t0ni_00002880_restart_oce_1277.nc t0ni_00002880_restart_oce_1278.nc t0ni_00002880_restart_oce_1279.nc t0ni_00002880_restart_oce_1280.nc t0ni_00002880_restart_oce_1281.nc t0ni_00002880_restart_oce_1282.nc t0ni_00002880_restart_oce_1283.nc t0ni_00002880_restart_oce_1284.nc t0ni_00002880_restart_oce_1285.nc t0ni_00002880_restart_oce_1286.nc t0ni_00002880_restart_oce_1287.nc t0ni_00002880_restart_oce_1288.nc t0ni_00002880_restart_oce_1289.nc t0ni_00002880_restart_oce_1290.nc t0ni_00002880_restart_oce_1291.nc t0ni_00002880_restart_oce_1292.nc t0ni_00002880_restart_oce_1293.nc t0ni_00002880_restart_oce_1294.nc t0ni_00002880_restart_oce_1295.nc t0ni_00002880_restart_oce_1296.nc t0ni_00002880_restart_oce_1297.nc t0ni_00002880_restart_oce_1298.nc t0ni_00002880_restart_oce_1299.nc t0ni_00002880_restart_oce_1300.nc t0ni_00002880_restart_oce_1301.nc t0ni_00002880_restart_oce_1302.nc t0ni_00002880_restart_oce_1303.nc t0ni_00002880_restart_oce_1304.nc t0ni_00002880_restart_oce_1305.nc t0ni_00002880_restart_oce_1306.nc t0ni_00002880_restart_oce_1307.nc t0ni_00002880_restart_oce_1308.nc t0ni_00002880_restart_oce_1309.nc t0ni_00002880_restart_oce_1310.nc t0ni_00002880_restart_oce_1311.nc t0ni_00002880_restart_oce_1312.nc t0ni_00002880_restart_oce_1313.nc t0ni_00002880_restart_oce_1314.nc t0ni_00002880_restart_oce_1315.nc t0ni_00002880_restart_oce_1316.nc t0ni_00002880_restart_oce_1317.nc t0ni_00002880_restart_oce_1318.nc t0ni_00002880_restart_oce_1319.nc t0ni_00002880_restart_oce_1320.nc t0ni_00002880_restart_oce_1321.nc t0ni_00002880_restart_oce_1322.nc t0ni_00002880_restart_oce_1323.nc t0ni_00002880_restart_oce_1324.nc t0ni_00002880_restart_oce_1325.nc t0ni_00002880_restart_oce_1326.nc t0ni_00002880_restart_oce_1327.nc t0ni_00002880_restart_oce_1328.nc t0ni_00002880_restart_oce_1329.nc t0ni_00002880_restart_oce_1330.nc t0ni_00002880_restart_oce_1331.nc t0ni_00002880_restart_oce_1332.nc t0ni_00002880_restart_oce_1333.nc t0ni_00002880_restart_oce_1334.nc t0ni_00002880_restart_oce_1335.nc t0ni_00002880_restart_oce_1336.nc t0ni_00002880_restart_oce_1337.nc t0ni_00002880_restart_oce_1338.nc t0ni_00002880_restart_oce_1339.nc t0ni_00002880_restart_oce_1340.nc t0ni_00002880_restart_oce_1341.nc t0ni_00002880_restart_oce_1342.nc t0ni_00002880_restart_oce_1343.nc t0ni_00002880_restart_oce_1344.nc t0ni_00002880_restart_oce_1345.nc t0ni_00002880_restart_oce_1346.nc t0ni_00002880_restart_oce_1347.nc t0ni_00002880_restart_oce_1348.nc t0ni_00002880_restart_oce_1349.nc t0ni_00002880_restart_oce_1350.nc t0ni_00002880_restart_oce_1351.nc t0ni_00002880_restart_oce_1352.nc t0ni_00002880_restart_oce_1353.nc t0ni_00002880_restart_oce_1354.nc t0ni_00002880_restart_oce_1355.nc t0ni_00002880_restart_oce_1356.nc t0ni_00002880_restart_oce_1357.nc t0ni_00002880_restart_oce_1358.nc t0ni_00002880_restart_oce_1359.nc t0ni_00002880_restart_oce_1360.nc t0ni_00002880_restart_oce_1361.nc t0ni_00002880_restart_oce_1362.nc t0ni_00002880_restart_oce_1363.nc t0ni_00002880_restart_oce_1364.nc t0ni_00002880_restart_oce_1365.nc t0ni_00002880_restart_oce_1366.nc t0ni_00002880_restart_oce_1367.nc t0ni_00002880_restart_oce_1368.nc t0ni_00002880_restart_oce_1369.nc t0ni_00002880_restart_oce_1370.nc t0ni_00002880_restart_oce_1371.nc t0ni_00002880_restart_oce_1372.nc t0ni_00002880_restart_oce_1373.nc t0ni_00002880_restart_oce_1374.nc t0ni_00002880_restart_oce_1375.nc t0ni_00002880_restart_oce_1376.nc t0ni_00002880_restart_oce_1377.nc t0ni_00002880_restart_oce_1378.nc t0ni_00002880_restart_oce_1379.nc t0ni_00002880_restart_oce_1380.nc t0ni_00002880_restart_oce_1381.nc t0ni_00002880_restart_oce_1382.nc t0ni_00002880_restart_oce_1383.nc t0ni_00002880_restart_oce_1384.nc t0ni_00002880_restart_oce_1385.nc t0ni_00002880_restart_oce_1386.nc t0ni_00002880_restart_oce_1387.nc t0ni_00002880_restart_oce_1388.nc t0ni_00002880_restart_oce_1389.nc t0ni_00002880_restart_oce_1390.nc save_ic/19931201/nemo
+ for ext in '$extensions'
+ ls t0ni_00002880_restart_ice_0000.nc t0ni_00002880_restart_ice_0001.nc t0ni_00002880_restart_ice_0002.nc t0ni_00002880_restart_ice_0003.nc t0ni_00002880_restart_ice_0004.nc t0ni_00002880_restart_ice_0005.nc t0ni_00002880_restart_ice_0006.nc t0ni_00002880_restart_ice_0007.nc t0ni_00002880_restart_ice_0008.nc t0ni_00002880_restart_ice_0009.nc t0ni_00002880_restart_ice_0010.nc t0ni_00002880_restart_ice_0011.nc t0ni_00002880_restart_ice_0012.nc t0ni_00002880_restart_ice_0013.nc t0ni_00002880_restart_ice_0014.nc t0ni_00002880_restart_ice_0015.nc t0ni_00002880_restart_ice_0016.nc t0ni_00002880_restart_ice_0017.nc t0ni_00002880_restart_ice_0018.nc t0ni_00002880_restart_ice_0019.nc t0ni_00002880_restart_ice_0020.nc t0ni_00002880_restart_ice_0021.nc t0ni_00002880_restart_ice_0022.nc t0ni_00002880_restart_ice_0023.nc t0ni_00002880_restart_ice_0024.nc t0ni_00002880_restart_ice_0025.nc t0ni_00002880_restart_ice_0026.nc t0ni_00002880_restart_ice_0027.nc t0ni_00002880_restart_ice_0028.nc t0ni_00002880_restart_ice_0029.nc t0ni_00002880_restart_ice_0030.nc t0ni_00002880_restart_ice_0031.nc t0ni_00002880_restart_ice_0032.nc t0ni_00002880_restart_ice_0033.nc t0ni_00002880_restart_ice_0034.nc t0ni_00002880_restart_ice_0035.nc t0ni_00002880_restart_ice_0036.nc t0ni_00002880_restart_ice_0037.nc t0ni_00002880_restart_ice_0038.nc t0ni_00002880_restart_ice_0039.nc t0ni_00002880_restart_ice_0040.nc t0ni_00002880_restart_ice_0041.nc t0ni_00002880_restart_ice_0042.nc t0ni_00002880_restart_ice_0043.nc t0ni_00002880_restart_ice_0044.nc t0ni_00002880_restart_ice_0045.nc t0ni_00002880_restart_ice_0046.nc t0ni_00002880_restart_ice_0047.nc t0ni_00002880_restart_ice_0048.nc t0ni_00002880_restart_ice_0049.nc t0ni_00002880_restart_ice_0050.nc t0ni_00002880_restart_ice_0051.nc t0ni_00002880_restart_ice_0052.nc t0ni_00002880_restart_ice_0053.nc t0ni_00002880_restart_ice_0054.nc t0ni_00002880_restart_ice_0055.nc t0ni_00002880_restart_ice_0056.nc t0ni_00002880_restart_ice_0057.nc t0ni_00002880_restart_ice_0058.nc t0ni_00002880_restart_ice_0059.nc t0ni_00002880_restart_ice_0060.nc t0ni_00002880_restart_ice_0061.nc t0ni_00002880_restart_ice_0062.nc t0ni_00002880_restart_ice_0063.nc t0ni_00002880_restart_ice_0064.nc t0ni_00002880_restart_ice_0065.nc t0ni_00002880_restart_ice_0066.nc t0ni_00002880_restart_ice_0067.nc t0ni_00002880_restart_ice_0068.nc t0ni_00002880_restart_ice_0069.nc t0ni_00002880_restart_ice_0070.nc t0ni_00002880_restart_ice_0071.nc t0ni_00002880_restart_ice_0072.nc t0ni_00002880_restart_ice_0073.nc t0ni_00002880_restart_ice_0074.nc t0ni_00002880_restart_ice_0075.nc t0ni_00002880_restart_ice_0076.nc t0ni_00002880_restart_ice_0077.nc t0ni_00002880_restart_ice_0078.nc t0ni_00002880_restart_ice_0079.nc t0ni_00002880_restart_ice_0080.nc t0ni_00002880_restart_ice_0081.nc t0ni_00002880_restart_ice_0082.nc t0ni_00002880_restart_ice_0083.nc t0ni_00002880_restart_ice_0084.nc t0ni_00002880_restart_ice_0085.nc t0ni_00002880_restart_ice_0086.nc t0ni_00002880_restart_ice_0087.nc t0ni_00002880_restart_ice_0088.nc t0ni_00002880_restart_ice_0089.nc t0ni_00002880_restart_ice_0090.nc t0ni_00002880_restart_ice_0091.nc t0ni_00002880_restart_ice_0092.nc t0ni_00002880_restart_ice_0093.nc t0ni_00002880_restart_ice_0094.nc t0ni_00002880_restart_ice_0095.nc t0ni_00002880_restart_ice_0096.nc t0ni_00002880_restart_ice_0097.nc t0ni_00002880_restart_ice_0098.nc t0ni_00002880_restart_ice_0099.nc t0ni_00002880_restart_ice_0100.nc t0ni_00002880_restart_ice_0101.nc t0ni_00002880_restart_ice_0102.nc t0ni_00002880_restart_ice_0103.nc t0ni_00002880_restart_ice_0104.nc t0ni_00002880_restart_ice_0105.nc t0ni_00002880_restart_ice_0106.nc t0ni_00002880_restart_ice_0107.nc t0ni_00002880_restart_ice_0108.nc t0ni_00002880_restart_ice_0109.nc t0ni_00002880_restart_ice_0110.nc t0ni_00002880_restart_ice_0111.nc t0ni_00002880_restart_ice_0112.nc t0ni_00002880_restart_ice_0113.nc t0ni_00002880_restart_ice_0114.nc t0ni_00002880_restart_ice_0115.nc t0ni_00002880_restart_ice_0116.nc t0ni_00002880_restart_ice_0117.nc t0ni_00002880_restart_ice_0118.nc t0ni_00002880_restart_ice_0119.nc t0ni_00002880_restart_ice_0120.nc t0ni_00002880_restart_ice_0121.nc t0ni_00002880_restart_ice_0122.nc t0ni_00002880_restart_ice_0123.nc t0ni_00002880_restart_ice_0124.nc t0ni_00002880_restart_ice_0125.nc t0ni_00002880_restart_ice_0126.nc t0ni_00002880_restart_ice_0127.nc t0ni_00002880_restart_ice_0128.nc t0ni_00002880_restart_ice_0129.nc t0ni_00002880_restart_ice_0130.nc t0ni_00002880_restart_ice_0131.nc t0ni_00002880_restart_ice_0132.nc t0ni_00002880_restart_ice_0133.nc t0ni_00002880_restart_ice_0134.nc t0ni_00002880_restart_ice_0135.nc t0ni_00002880_restart_ice_0136.nc t0ni_00002880_restart_ice_0137.nc t0ni_00002880_restart_ice_0138.nc t0ni_00002880_restart_ice_0139.nc t0ni_00002880_restart_ice_0140.nc t0ni_00002880_restart_ice_0141.nc t0ni_00002880_restart_ice_0142.nc t0ni_00002880_restart_ice_0143.nc t0ni_00002880_restart_ice_0144.nc t0ni_00002880_restart_ice_0145.nc t0ni_00002880_restart_ice_0146.nc t0ni_00002880_restart_ice_0147.nc t0ni_00002880_restart_ice_0148.nc t0ni_00002880_restart_ice_0149.nc t0ni_00002880_restart_ice_0150.nc t0ni_00002880_restart_ice_0151.nc t0ni_00002880_restart_ice_0152.nc t0ni_00002880_restart_ice_0153.nc t0ni_00002880_restart_ice_0154.nc t0ni_00002880_restart_ice_0155.nc t0ni_00002880_restart_ice_0156.nc t0ni_00002880_restart_ice_0157.nc t0ni_00002880_restart_ice_0158.nc t0ni_00002880_restart_ice_0159.nc t0ni_00002880_restart_ice_0160.nc t0ni_00002880_restart_ice_0161.nc t0ni_00002880_restart_ice_0162.nc t0ni_00002880_restart_ice_0163.nc t0ni_00002880_restart_ice_0164.nc t0ni_00002880_restart_ice_0165.nc t0ni_00002880_restart_ice_0166.nc t0ni_00002880_restart_ice_0167.nc t0ni_00002880_restart_ice_0168.nc t0ni_00002880_restart_ice_0169.nc t0ni_00002880_restart_ice_0170.nc t0ni_00002880_restart_ice_0171.nc t0ni_00002880_restart_ice_0172.nc t0ni_00002880_restart_ice_0173.nc t0ni_00002880_restart_ice_0174.nc t0ni_00002880_restart_ice_0175.nc t0ni_00002880_restart_ice_0176.nc t0ni_00002880_restart_ice_0177.nc t0ni_00002880_restart_ice_0178.nc t0ni_00002880_restart_ice_0179.nc t0ni_00002880_restart_ice_0180.nc t0ni_00002880_restart_ice_0181.nc t0ni_00002880_restart_ice_0182.nc t0ni_00002880_restart_ice_0183.nc t0ni_00002880_restart_ice_0184.nc t0ni_00002880_restart_ice_0185.nc t0ni_00002880_restart_ice_0186.nc t0ni_00002880_restart_ice_0187.nc t0ni_00002880_restart_ice_0188.nc t0ni_00002880_restart_ice_0189.nc t0ni_00002880_restart_ice_0190.nc t0ni_00002880_restart_ice_0191.nc t0ni_00002880_restart_ice_0192.nc t0ni_00002880_restart_ice_0193.nc t0ni_00002880_restart_ice_0194.nc t0ni_00002880_restart_ice_0195.nc t0ni_00002880_restart_ice_0196.nc t0ni_00002880_restart_ice_0197.nc t0ni_00002880_restart_ice_0198.nc t0ni_00002880_restart_ice_0199.nc t0ni_00002880_restart_ice_0200.nc t0ni_00002880_restart_ice_0201.nc t0ni_00002880_restart_ice_0202.nc t0ni_00002880_restart_ice_0203.nc t0ni_00002880_restart_ice_0204.nc t0ni_00002880_restart_ice_0205.nc t0ni_00002880_restart_ice_0206.nc t0ni_00002880_restart_ice_0207.nc t0ni_00002880_restart_ice_0208.nc t0ni_00002880_restart_ice_0209.nc t0ni_00002880_restart_ice_0210.nc t0ni_00002880_restart_ice_0211.nc t0ni_00002880_restart_ice_0212.nc t0ni_00002880_restart_ice_0213.nc t0ni_00002880_restart_ice_0214.nc t0ni_00002880_restart_ice_0215.nc t0ni_00002880_restart_ice_0216.nc t0ni_00002880_restart_ice_0217.nc t0ni_00002880_restart_ice_0218.nc t0ni_00002880_restart_ice_0219.nc t0ni_00002880_restart_ice_0220.nc t0ni_00002880_restart_ice_0221.nc t0ni_00002880_restart_ice_0222.nc t0ni_00002880_restart_ice_0223.nc t0ni_00002880_restart_ice_0224.nc t0ni_00002880_restart_ice_0225.nc t0ni_00002880_restart_ice_0226.nc t0ni_00002880_restart_ice_0227.nc t0ni_00002880_restart_ice_0228.nc t0ni_00002880_restart_ice_0229.nc t0ni_00002880_restart_ice_0230.nc t0ni_00002880_restart_ice_0231.nc t0ni_00002880_restart_ice_0232.nc t0ni_00002880_restart_ice_0233.nc t0ni_00002880_restart_ice_0234.nc t0ni_00002880_restart_ice_0235.nc t0ni_00002880_restart_ice_0236.nc t0ni_00002880_restart_ice_0237.nc t0ni_00002880_restart_ice_0238.nc t0ni_00002880_restart_ice_0239.nc t0ni_00002880_restart_ice_0240.nc t0ni_00002880_restart_ice_0241.nc t0ni_00002880_restart_ice_0242.nc t0ni_00002880_restart_ice_0243.nc t0ni_00002880_restart_ice_0244.nc t0ni_00002880_restart_ice_0245.nc t0ni_00002880_restart_ice_0246.nc t0ni_00002880_restart_ice_0247.nc t0ni_00002880_restart_ice_0248.nc t0ni_00002880_restart_ice_0249.nc t0ni_00002880_restart_ice_0250.nc t0ni_00002880_restart_ice_0251.nc t0ni_00002880_restart_ice_0252.nc t0ni_00002880_restart_ice_0253.nc t0ni_00002880_restart_ice_0254.nc t0ni_00002880_restart_ice_0255.nc t0ni_00002880_restart_ice_0256.nc t0ni_00002880_restart_ice_0257.nc t0ni_00002880_restart_ice_0258.nc t0ni_00002880_restart_ice_0259.nc t0ni_00002880_restart_ice_0260.nc t0ni_00002880_restart_ice_0261.nc t0ni_00002880_restart_ice_0262.nc t0ni_00002880_restart_ice_0263.nc t0ni_00002880_restart_ice_0264.nc t0ni_00002880_restart_ice_0265.nc t0ni_00002880_restart_ice_0266.nc t0ni_00002880_restart_ice_0267.nc t0ni_00002880_restart_ice_0268.nc t0ni_00002880_restart_ice_0269.nc t0ni_00002880_restart_ice_0270.nc t0ni_00002880_restart_ice_0271.nc t0ni_00002880_restart_ice_0272.nc t0ni_00002880_restart_ice_0273.nc t0ni_00002880_restart_ice_0274.nc t0ni_00002880_restart_ice_0275.nc t0ni_00002880_restart_ice_0276.nc t0ni_00002880_restart_ice_0277.nc t0ni_00002880_restart_ice_0278.nc t0ni_00002880_restart_ice_0279.nc t0ni_00002880_restart_ice_0280.nc t0ni_00002880_restart_ice_0281.nc t0ni_00002880_restart_ice_0282.nc t0ni_00002880_restart_ice_0283.nc t0ni_00002880_restart_ice_0284.nc t0ni_00002880_restart_ice_0285.nc t0ni_00002880_restart_ice_0286.nc t0ni_00002880_restart_ice_0287.nc t0ni_00002880_restart_ice_0288.nc t0ni_00002880_restart_ice_0289.nc t0ni_00002880_restart_ice_0290.nc t0ni_00002880_restart_ice_0291.nc t0ni_00002880_restart_ice_0292.nc t0ni_00002880_restart_ice_0293.nc t0ni_00002880_restart_ice_0294.nc t0ni_00002880_restart_ice_0295.nc t0ni_00002880_restart_ice_0296.nc t0ni_00002880_restart_ice_0297.nc t0ni_00002880_restart_ice_0298.nc t0ni_00002880_restart_ice_0299.nc t0ni_00002880_restart_ice_0300.nc t0ni_00002880_restart_ice_0301.nc t0ni_00002880_restart_ice_0302.nc t0ni_00002880_restart_ice_0303.nc t0ni_00002880_restart_ice_0304.nc t0ni_00002880_restart_ice_0305.nc t0ni_00002880_restart_ice_0306.nc t0ni_00002880_restart_ice_0307.nc t0ni_00002880_restart_ice_0308.nc t0ni_00002880_restart_ice_0309.nc t0ni_00002880_restart_ice_0310.nc t0ni_00002880_restart_ice_0311.nc t0ni_00002880_restart_ice_0312.nc t0ni_00002880_restart_ice_0313.nc t0ni_00002880_restart_ice_0314.nc t0ni_00002880_restart_ice_0315.nc t0ni_00002880_restart_ice_0316.nc t0ni_00002880_restart_ice_0317.nc t0ni_00002880_restart_ice_0318.nc t0ni_00002880_restart_ice_0319.nc t0ni_00002880_restart_ice_0320.nc t0ni_00002880_restart_ice_0321.nc t0ni_00002880_restart_ice_0322.nc t0ni_00002880_restart_ice_0323.nc t0ni_00002880_restart_ice_0324.nc t0ni_00002880_restart_ice_0325.nc t0ni_00002880_restart_ice_0326.nc t0ni_00002880_restart_ice_0327.nc t0ni_00002880_restart_ice_0328.nc t0ni_00002880_restart_ice_0329.nc t0ni_00002880_restart_ice_0330.nc t0ni_00002880_restart_ice_0331.nc t0ni_00002880_restart_ice_0332.nc t0ni_00002880_restart_ice_0333.nc t0ni_00002880_restart_ice_0334.nc t0ni_00002880_restart_ice_0335.nc t0ni_00002880_restart_ice_0336.nc t0ni_00002880_restart_ice_0337.nc t0ni_00002880_restart_ice_0338.nc t0ni_00002880_restart_ice_0339.nc t0ni_00002880_restart_ice_0340.nc t0ni_00002880_restart_ice_0341.nc t0ni_00002880_restart_ice_0342.nc t0ni_00002880_restart_ice_0343.nc t0ni_00002880_restart_ice_0344.nc t0ni_00002880_restart_ice_0345.nc t0ni_00002880_restart_ice_0346.nc t0ni_00002880_restart_ice_0347.nc t0ni_00002880_restart_ice_0348.nc t0ni_00002880_restart_ice_0349.nc t0ni_00002880_restart_ice_0350.nc t0ni_00002880_restart_ice_0351.nc t0ni_00002880_restart_ice_0352.nc t0ni_00002880_restart_ice_0353.nc t0ni_00002880_restart_ice_0354.nc t0ni_00002880_restart_ice_0355.nc t0ni_00002880_restart_ice_0356.nc t0ni_00002880_restart_ice_0357.nc t0ni_00002880_restart_ice_0358.nc t0ni_00002880_restart_ice_0359.nc t0ni_00002880_restart_ice_0360.nc t0ni_00002880_restart_ice_0361.nc t0ni_00002880_restart_ice_0362.nc t0ni_00002880_restart_ice_0363.nc t0ni_00002880_restart_ice_0364.nc t0ni_00002880_restart_ice_0365.nc t0ni_00002880_restart_ice_0366.nc t0ni_00002880_restart_ice_0367.nc t0ni_00002880_restart_ice_0368.nc t0ni_00002880_restart_ice_0369.nc t0ni_00002880_restart_ice_0370.nc t0ni_00002880_restart_ice_0371.nc t0ni_00002880_restart_ice_0372.nc t0ni_00002880_restart_ice_0373.nc t0ni_00002880_restart_ice_0374.nc t0ni_00002880_restart_ice_0375.nc t0ni_00002880_restart_ice_0376.nc t0ni_00002880_restart_ice_0377.nc t0ni_00002880_restart_ice_0378.nc t0ni_00002880_restart_ice_0379.nc t0ni_00002880_restart_ice_0380.nc t0ni_00002880_restart_ice_0381.nc t0ni_00002880_restart_ice_0382.nc t0ni_00002880_restart_ice_0383.nc t0ni_00002880_restart_ice_0384.nc t0ni_00002880_restart_ice_0385.nc t0ni_00002880_restart_ice_0386.nc t0ni_00002880_restart_ice_0387.nc t0ni_00002880_restart_ice_0388.nc t0ni_00002880_restart_ice_0389.nc t0ni_00002880_restart_ice_0390.nc t0ni_00002880_restart_ice_0391.nc t0ni_00002880_restart_ice_0392.nc t0ni_00002880_restart_ice_0393.nc t0ni_00002880_restart_ice_0394.nc t0ni_00002880_restart_ice_0395.nc t0ni_00002880_restart_ice_0396.nc t0ni_00002880_restart_ice_0397.nc t0ni_00002880_restart_ice_0398.nc t0ni_00002880_restart_ice_0399.nc t0ni_00002880_restart_ice_0400.nc t0ni_00002880_restart_ice_0401.nc t0ni_00002880_restart_ice_0402.nc t0ni_00002880_restart_ice_0403.nc t0ni_00002880_restart_ice_0404.nc t0ni_00002880_restart_ice_0405.nc t0ni_00002880_restart_ice_0406.nc t0ni_00002880_restart_ice_0407.nc t0ni_00002880_restart_ice_0408.nc t0ni_00002880_restart_ice_0409.nc t0ni_00002880_restart_ice_0410.nc t0ni_00002880_restart_ice_0411.nc t0ni_00002880_restart_ice_0412.nc t0ni_00002880_restart_ice_0413.nc t0ni_00002880_restart_ice_0414.nc t0ni_00002880_restart_ice_0415.nc t0ni_00002880_restart_ice_0416.nc t0ni_00002880_restart_ice_0417.nc t0ni_00002880_restart_ice_0418.nc t0ni_00002880_restart_ice_0419.nc t0ni_00002880_restart_ice_0420.nc t0ni_00002880_restart_ice_0421.nc t0ni_00002880_restart_ice_0422.nc t0ni_00002880_restart_ice_0423.nc t0ni_00002880_restart_ice_0424.nc t0ni_00002880_restart_ice_0425.nc t0ni_00002880_restart_ice_0426.nc t0ni_00002880_restart_ice_0427.nc t0ni_00002880_restart_ice_0428.nc t0ni_00002880_restart_ice_0429.nc t0ni_00002880_restart_ice_0430.nc t0ni_00002880_restart_ice_0431.nc t0ni_00002880_restart_ice_0432.nc t0ni_00002880_restart_ice_0433.nc t0ni_00002880_restart_ice_0434.nc t0ni_00002880_restart_ice_0435.nc t0ni_00002880_restart_ice_0436.nc t0ni_00002880_restart_ice_0437.nc t0ni_00002880_restart_ice_0438.nc t0ni_00002880_restart_ice_0439.nc t0ni_00002880_restart_ice_0440.nc t0ni_00002880_restart_ice_0441.nc t0ni_00002880_restart_ice_0442.nc t0ni_00002880_restart_ice_0443.nc t0ni_00002880_restart_ice_0444.nc t0ni_00002880_restart_ice_0445.nc t0ni_00002880_restart_ice_0446.nc t0ni_00002880_restart_ice_0447.nc t0ni_00002880_restart_ice_0448.nc t0ni_00002880_restart_ice_0449.nc t0ni_00002880_restart_ice_0450.nc t0ni_00002880_restart_ice_0451.nc t0ni_00002880_restart_ice_0452.nc t0ni_00002880_restart_ice_0453.nc t0ni_00002880_restart_ice_0454.nc t0ni_00002880_restart_ice_0455.nc t0ni_00002880_restart_ice_0456.nc t0ni_00002880_restart_ice_0457.nc t0ni_00002880_restart_ice_0458.nc t0ni_00002880_restart_ice_0459.nc t0ni_00002880_restart_ice_0460.nc t0ni_00002880_restart_ice_0461.nc t0ni_00002880_restart_ice_0462.nc t0ni_00002880_restart_ice_0463.nc t0ni_00002880_restart_ice_0464.nc t0ni_00002880_restart_ice_0465.nc t0ni_00002880_restart_ice_0466.nc t0ni_00002880_restart_ice_0467.nc t0ni_00002880_restart_ice_0468.nc t0ni_00002880_restart_ice_0469.nc t0ni_00002880_restart_ice_0470.nc t0ni_00002880_restart_ice_0471.nc t0ni_00002880_restart_ice_0472.nc t0ni_00002880_restart_ice_0473.nc t0ni_00002880_restart_ice_0474.nc t0ni_00002880_restart_ice_0475.nc t0ni_00002880_restart_ice_0476.nc t0ni_00002880_restart_ice_0477.nc t0ni_00002880_restart_ice_0478.nc t0ni_00002880_restart_ice_0479.nc t0ni_00002880_restart_ice_0480.nc t0ni_00002880_restart_ice_0481.nc t0ni_00002880_restart_ice_0482.nc t0ni_00002880_restart_ice_0483.nc t0ni_00002880_restart_ice_0484.nc t0ni_00002880_restart_ice_0485.nc t0ni_00002880_restart_ice_0486.nc t0ni_00002880_restart_ice_0487.nc t0ni_00002880_restart_ice_0488.nc t0ni_00002880_restart_ice_0489.nc t0ni_00002880_restart_ice_0490.nc t0ni_00002880_restart_ice_0491.nc t0ni_00002880_restart_ice_0492.nc t0ni_00002880_restart_ice_0493.nc t0ni_00002880_restart_ice_0494.nc t0ni_00002880_restart_ice_0495.nc t0ni_00002880_restart_ice_0496.nc t0ni_00002880_restart_ice_0497.nc t0ni_00002880_restart_ice_0498.nc t0ni_00002880_restart_ice_0499.nc t0ni_00002880_restart_ice_0500.nc t0ni_00002880_restart_ice_0501.nc t0ni_00002880_restart_ice_0502.nc t0ni_00002880_restart_ice_0503.nc t0ni_00002880_restart_ice_0504.nc t0ni_00002880_restart_ice_0505.nc t0ni_00002880_restart_ice_0506.nc t0ni_00002880_restart_ice_0507.nc t0ni_00002880_restart_ice_0508.nc t0ni_00002880_restart_ice_0509.nc t0ni_00002880_restart_ice_0510.nc t0ni_00002880_restart_ice_0511.nc t0ni_00002880_restart_ice_0512.nc t0ni_00002880_restart_ice_0513.nc t0ni_00002880_restart_ice_0514.nc t0ni_00002880_restart_ice_0515.nc t0ni_00002880_restart_ice_0516.nc t0ni_00002880_restart_ice_0517.nc t0ni_00002880_restart_ice_0518.nc t0ni_00002880_restart_ice_0519.nc t0ni_00002880_restart_ice_0520.nc t0ni_00002880_restart_ice_0521.nc t0ni_00002880_restart_ice_0522.nc t0ni_00002880_restart_ice_0523.nc t0ni_00002880_restart_ice_0524.nc t0ni_00002880_restart_ice_0525.nc t0ni_00002880_restart_ice_0526.nc t0ni_00002880_restart_ice_0527.nc t0ni_00002880_restart_ice_0528.nc t0ni_00002880_restart_ice_0529.nc t0ni_00002880_restart_ice_0530.nc t0ni_00002880_restart_ice_0531.nc t0ni_00002880_restart_ice_0532.nc t0ni_00002880_restart_ice_0533.nc t0ni_00002880_restart_ice_0534.nc t0ni_00002880_restart_ice_0535.nc t0ni_00002880_restart_ice_0536.nc t0ni_00002880_restart_ice_0537.nc t0ni_00002880_restart_ice_0538.nc t0ni_00002880_restart_ice_0539.nc t0ni_00002880_restart_ice_0540.nc t0ni_00002880_restart_ice_0541.nc t0ni_00002880_restart_ice_0542.nc t0ni_00002880_restart_ice_0543.nc t0ni_00002880_restart_ice_0544.nc t0ni_00002880_restart_ice_0545.nc t0ni_00002880_restart_ice_0546.nc t0ni_00002880_restart_ice_0547.nc t0ni_00002880_restart_ice_0548.nc t0ni_00002880_restart_ice_0549.nc t0ni_00002880_restart_ice_0550.nc t0ni_00002880_restart_ice_0551.nc t0ni_00002880_restart_ice_0552.nc t0ni_00002880_restart_ice_0553.nc t0ni_00002880_restart_ice_0554.nc t0ni_00002880_restart_ice_0555.nc t0ni_00002880_restart_ice_0556.nc t0ni_00002880_restart_ice_0557.nc t0ni_00002880_restart_ice_0558.nc t0ni_00002880_restart_ice_0559.nc t0ni_00002880_restart_ice_0560.nc t0ni_00002880_restart_ice_0561.nc t0ni_00002880_restart_ice_0562.nc t0ni_00002880_restart_ice_0563.nc t0ni_00002880_restart_ice_0564.nc t0ni_00002880_restart_ice_0565.nc t0ni_00002880_restart_ice_0566.nc t0ni_00002880_restart_ice_0567.nc t0ni_00002880_restart_ice_0568.nc t0ni_00002880_restart_ice_0569.nc t0ni_00002880_restart_ice_0570.nc t0ni_00002880_restart_ice_0571.nc t0ni_00002880_restart_ice_0572.nc t0ni_00002880_restart_ice_0573.nc t0ni_00002880_restart_ice_0574.nc t0ni_00002880_restart_ice_0575.nc t0ni_00002880_restart_ice_0576.nc t0ni_00002880_restart_ice_0577.nc t0ni_00002880_restart_ice_0578.nc t0ni_00002880_restart_ice_0579.nc t0ni_00002880_restart_ice_0580.nc t0ni_00002880_restart_ice_0581.nc t0ni_00002880_restart_ice_0582.nc t0ni_00002880_restart_ice_0583.nc t0ni_00002880_restart_ice_0584.nc t0ni_00002880_restart_ice_0585.nc t0ni_00002880_restart_ice_0586.nc t0ni_00002880_restart_ice_0587.nc t0ni_00002880_restart_ice_0588.nc t0ni_00002880_restart_ice_0589.nc t0ni_00002880_restart_ice_0590.nc t0ni_00002880_restart_ice_0591.nc t0ni_00002880_restart_ice_0592.nc t0ni_00002880_restart_ice_0593.nc t0ni_00002880_restart_ice_0594.nc t0ni_00002880_restart_ice_0595.nc t0ni_00002880_restart_ice_0596.nc t0ni_00002880_restart_ice_0597.nc t0ni_00002880_restart_ice_0598.nc t0ni_00002880_restart_ice_0599.nc t0ni_00002880_restart_ice_0600.nc t0ni_00002880_restart_ice_0601.nc t0ni_00002880_restart_ice_0602.nc t0ni_00002880_restart_ice_0603.nc t0ni_00002880_restart_ice_0604.nc t0ni_00002880_restart_ice_0605.nc t0ni_00002880_restart_ice_0606.nc t0ni_00002880_restart_ice_0607.nc t0ni_00002880_restart_ice_0608.nc t0ni_00002880_restart_ice_0609.nc t0ni_00002880_restart_ice_0610.nc t0ni_00002880_restart_ice_0611.nc t0ni_00002880_restart_ice_0612.nc t0ni_00002880_restart_ice_0613.nc t0ni_00002880_restart_ice_0614.nc t0ni_00002880_restart_ice_0615.nc t0ni_00002880_restart_ice_0616.nc t0ni_00002880_restart_ice_0617.nc t0ni_00002880_restart_ice_0618.nc t0ni_00002880_restart_ice_0619.nc t0ni_00002880_restart_ice_0620.nc t0ni_00002880_restart_ice_0621.nc t0ni_00002880_restart_ice_0622.nc t0ni_00002880_restart_ice_0623.nc t0ni_00002880_restart_ice_0624.nc t0ni_00002880_restart_ice_0625.nc t0ni_00002880_restart_ice_0626.nc t0ni_00002880_restart_ice_0627.nc t0ni_00002880_restart_ice_0628.nc t0ni_00002880_restart_ice_0629.nc t0ni_00002880_restart_ice_0630.nc t0ni_00002880_restart_ice_0631.nc t0ni_00002880_restart_ice_0632.nc t0ni_00002880_restart_ice_0633.nc t0ni_00002880_restart_ice_0634.nc t0ni_00002880_restart_ice_0635.nc t0ni_00002880_restart_ice_0636.nc t0ni_00002880_restart_ice_0637.nc t0ni_00002880_restart_ice_0638.nc t0ni_00002880_restart_ice_0639.nc t0ni_00002880_restart_ice_0640.nc t0ni_00002880_restart_ice_0641.nc t0ni_00002880_restart_ice_0642.nc t0ni_00002880_restart_ice_0643.nc t0ni_00002880_restart_ice_0644.nc t0ni_00002880_restart_ice_0645.nc t0ni_00002880_restart_ice_0646.nc t0ni_00002880_restart_ice_0647.nc t0ni_00002880_restart_ice_0648.nc t0ni_00002880_restart_ice_0649.nc t0ni_00002880_restart_ice_0650.nc t0ni_00002880_restart_ice_0651.nc t0ni_00002880_restart_ice_0652.nc t0ni_00002880_restart_ice_0653.nc t0ni_00002880_restart_ice_0654.nc t0ni_00002880_restart_ice_0655.nc t0ni_00002880_restart_ice_0656.nc t0ni_00002880_restart_ice_0657.nc t0ni_00002880_restart_ice_0658.nc t0ni_00002880_restart_ice_0659.nc t0ni_00002880_restart_ice_0660.nc t0ni_00002880_restart_ice_0661.nc t0ni_00002880_restart_ice_0662.nc t0ni_00002880_restart_ice_0663.nc t0ni_00002880_restart_ice_0664.nc t0ni_00002880_restart_ice_0665.nc t0ni_00002880_restart_ice_0666.nc t0ni_00002880_restart_ice_0667.nc t0ni_00002880_restart_ice_0668.nc t0ni_00002880_restart_ice_0669.nc t0ni_00002880_restart_ice_0670.nc t0ni_00002880_restart_ice_0671.nc t0ni_00002880_restart_ice_0672.nc t0ni_00002880_restart_ice_0673.nc t0ni_00002880_restart_ice_0674.nc t0ni_00002880_restart_ice_0675.nc t0ni_00002880_restart_ice_0676.nc t0ni_00002880_restart_ice_0677.nc t0ni_00002880_restart_ice_0678.nc t0ni_00002880_restart_ice_0679.nc t0ni_00002880_restart_ice_0680.nc t0ni_00002880_restart_ice_0681.nc t0ni_00002880_restart_ice_0682.nc t0ni_00002880_restart_ice_0683.nc t0ni_00002880_restart_ice_0684.nc t0ni_00002880_restart_ice_0685.nc t0ni_00002880_restart_ice_0686.nc t0ni_00002880_restart_ice_0687.nc t0ni_00002880_restart_ice_0688.nc t0ni_00002880_restart_ice_0689.nc t0ni_00002880_restart_ice_0690.nc t0ni_00002880_restart_ice_0691.nc t0ni_00002880_restart_ice_0692.nc t0ni_00002880_restart_ice_0693.nc t0ni_00002880_restart_ice_0694.nc t0ni_00002880_restart_ice_0695.nc t0ni_00002880_restart_ice_0696.nc t0ni_00002880_restart_ice_0697.nc t0ni_00002880_restart_ice_0698.nc t0ni_00002880_restart_ice_0699.nc t0ni_00002880_restart_ice_0700.nc t0ni_00002880_restart_ice_0701.nc t0ni_00002880_restart_ice_0702.nc t0ni_00002880_restart_ice_0703.nc t0ni_00002880_restart_ice_0704.nc t0ni_00002880_restart_ice_0705.nc t0ni_00002880_restart_ice_0706.nc t0ni_00002880_restart_ice_0707.nc t0ni_00002880_restart_ice_0708.nc t0ni_00002880_restart_ice_0709.nc t0ni_00002880_restart_ice_0710.nc t0ni_00002880_restart_ice_0711.nc t0ni_00002880_restart_ice_0712.nc t0ni_00002880_restart_ice_0713.nc t0ni_00002880_restart_ice_0714.nc t0ni_00002880_restart_ice_0715.nc t0ni_00002880_restart_ice_0716.nc t0ni_00002880_restart_ice_0717.nc t0ni_00002880_restart_ice_0718.nc t0ni_00002880_restart_ice_0719.nc t0ni_00002880_restart_ice_0720.nc t0ni_00002880_restart_ice_0721.nc t0ni_00002880_restart_ice_0722.nc t0ni_00002880_restart_ice_0723.nc t0ni_00002880_restart_ice_0724.nc t0ni_00002880_restart_ice_0725.nc t0ni_00002880_restart_ice_0726.nc t0ni_00002880_restart_ice_0727.nc t0ni_00002880_restart_ice_0728.nc t0ni_00002880_restart_ice_0729.nc t0ni_00002880_restart_ice_0730.nc t0ni_00002880_restart_ice_0731.nc t0ni_00002880_restart_ice_0732.nc t0ni_00002880_restart_ice_0733.nc t0ni_00002880_restart_ice_0734.nc t0ni_00002880_restart_ice_0735.nc t0ni_00002880_restart_ice_0736.nc t0ni_00002880_restart_ice_0737.nc t0ni_00002880_restart_ice_0738.nc t0ni_00002880_restart_ice_0739.nc t0ni_00002880_restart_ice_0740.nc t0ni_00002880_restart_ice_0741.nc t0ni_00002880_restart_ice_0742.nc t0ni_00002880_restart_ice_0743.nc t0ni_00002880_restart_ice_0744.nc t0ni_00002880_restart_ice_0745.nc t0ni_00002880_restart_ice_0746.nc t0ni_00002880_restart_ice_0747.nc t0ni_00002880_restart_ice_0748.nc t0ni_00002880_restart_ice_0749.nc t0ni_00002880_restart_ice_0750.nc t0ni_00002880_restart_ice_0751.nc t0ni_00002880_restart_ice_0752.nc t0ni_00002880_restart_ice_0753.nc t0ni_00002880_restart_ice_0754.nc t0ni_00002880_restart_ice_0755.nc t0ni_00002880_restart_ice_0756.nc t0ni_00002880_restart_ice_0757.nc t0ni_00002880_restart_ice_0758.nc t0ni_00002880_restart_ice_0759.nc t0ni_00002880_restart_ice_0760.nc t0ni_00002880_restart_ice_0761.nc t0ni_00002880_restart_ice_0762.nc t0ni_00002880_restart_ice_0763.nc t0ni_00002880_restart_ice_0764.nc t0ni_00002880_restart_ice_0765.nc t0ni_00002880_restart_ice_0766.nc t0ni_00002880_restart_ice_0767.nc t0ni_00002880_restart_ice_0768.nc t0ni_00002880_restart_ice_0769.nc t0ni_00002880_restart_ice_0770.nc t0ni_00002880_restart_ice_0771.nc t0ni_00002880_restart_ice_0772.nc t0ni_00002880_restart_ice_0773.nc t0ni_00002880_restart_ice_0774.nc t0ni_00002880_restart_ice_0775.nc t0ni_00002880_restart_ice_0776.nc t0ni_00002880_restart_ice_0777.nc t0ni_00002880_restart_ice_0778.nc t0ni_00002880_restart_ice_0779.nc t0ni_00002880_restart_ice_0780.nc t0ni_00002880_restart_ice_0781.nc t0ni_00002880_restart_ice_0782.nc t0ni_00002880_restart_ice_0783.nc t0ni_00002880_restart_ice_0784.nc t0ni_00002880_restart_ice_0785.nc t0ni_00002880_restart_ice_0786.nc t0ni_00002880_restart_ice_0787.nc t0ni_00002880_restart_ice_0788.nc t0ni_00002880_restart_ice_0789.nc t0ni_00002880_restart_ice_0790.nc t0ni_00002880_restart_ice_0791.nc t0ni_00002880_restart_ice_0792.nc t0ni_00002880_restart_ice_0793.nc t0ni_00002880_restart_ice_0794.nc t0ni_00002880_restart_ice_0795.nc t0ni_00002880_restart_ice_0796.nc t0ni_00002880_restart_ice_0797.nc t0ni_00002880_restart_ice_0798.nc t0ni_00002880_restart_ice_0799.nc t0ni_00002880_restart_ice_0800.nc t0ni_00002880_restart_ice_0801.nc t0ni_00002880_restart_ice_0802.nc t0ni_00002880_restart_ice_0803.nc t0ni_00002880_restart_ice_0804.nc t0ni_00002880_restart_ice_0805.nc t0ni_00002880_restart_ice_0806.nc t0ni_00002880_restart_ice_0807.nc t0ni_00002880_restart_ice_0808.nc t0ni_00002880_restart_ice_0809.nc t0ni_00002880_restart_ice_0810.nc t0ni_00002880_restart_ice_0811.nc t0ni_00002880_restart_ice_0812.nc t0ni_00002880_restart_ice_0813.nc t0ni_00002880_restart_ice_0814.nc t0ni_00002880_restart_ice_0815.nc t0ni_00002880_restart_ice_0816.nc t0ni_00002880_restart_ice_0817.nc t0ni_00002880_restart_ice_0818.nc t0ni_00002880_restart_ice_0819.nc t0ni_00002880_restart_ice_0820.nc t0ni_00002880_restart_ice_0821.nc t0ni_00002880_restart_ice_0822.nc t0ni_00002880_restart_ice_0823.nc t0ni_00002880_restart_ice_0824.nc t0ni_00002880_restart_ice_0825.nc t0ni_00002880_restart_ice_0826.nc t0ni_00002880_restart_ice_0827.nc t0ni_00002880_restart_ice_0828.nc t0ni_00002880_restart_ice_0829.nc t0ni_00002880_restart_ice_0830.nc t0ni_00002880_restart_ice_0831.nc t0ni_00002880_restart_ice_0832.nc t0ni_00002880_restart_ice_0833.nc t0ni_00002880_restart_ice_0834.nc t0ni_00002880_restart_ice_0835.nc t0ni_00002880_restart_ice_0836.nc t0ni_00002880_restart_ice_0837.nc t0ni_00002880_restart_ice_0838.nc t0ni_00002880_restart_ice_0839.nc t0ni_00002880_restart_ice_0840.nc t0ni_00002880_restart_ice_0841.nc t0ni_00002880_restart_ice_0842.nc t0ni_00002880_restart_ice_0843.nc t0ni_00002880_restart_ice_0844.nc t0ni_00002880_restart_ice_0845.nc t0ni_00002880_restart_ice_0846.nc t0ni_00002880_restart_ice_0847.nc t0ni_00002880_restart_ice_0848.nc t0ni_00002880_restart_ice_0849.nc t0ni_00002880_restart_ice_0850.nc t0ni_00002880_restart_ice_0851.nc t0ni_00002880_restart_ice_0852.nc t0ni_00002880_restart_ice_0853.nc t0ni_00002880_restart_ice_0854.nc t0ni_00002880_restart_ice_0855.nc t0ni_00002880_restart_ice_0856.nc t0ni_00002880_restart_ice_0857.nc t0ni_00002880_restart_ice_0858.nc t0ni_00002880_restart_ice_0859.nc t0ni_00002880_restart_ice_0860.nc t0ni_00002880_restart_ice_0861.nc t0ni_00002880_restart_ice_0862.nc t0ni_00002880_restart_ice_0863.nc t0ni_00002880_restart_ice_0864.nc t0ni_00002880_restart_ice_0865.nc t0ni_00002880_restart_ice_0866.nc t0ni_00002880_restart_ice_0867.nc t0ni_00002880_restart_ice_0868.nc t0ni_00002880_restart_ice_0869.nc t0ni_00002880_restart_ice_0870.nc t0ni_00002880_restart_ice_0871.nc t0ni_00002880_restart_ice_0872.nc t0ni_00002880_restart_ice_0873.nc t0ni_00002880_restart_ice_0874.nc t0ni_00002880_restart_ice_0875.nc t0ni_00002880_restart_ice_0876.nc t0ni_00002880_restart_ice_0877.nc t0ni_00002880_restart_ice_0878.nc t0ni_00002880_restart_ice_0879.nc t0ni_00002880_restart_ice_0880.nc t0ni_00002880_restart_ice_0881.nc t0ni_00002880_restart_ice_0882.nc t0ni_00002880_restart_ice_0883.nc t0ni_00002880_restart_ice_0884.nc t0ni_00002880_restart_ice_0885.nc t0ni_00002880_restart_ice_0886.nc t0ni_00002880_restart_ice_0887.nc t0ni_00002880_restart_ice_0888.nc t0ni_00002880_restart_ice_0889.nc t0ni_00002880_restart_ice_0890.nc t0ni_00002880_restart_ice_0891.nc t0ni_00002880_restart_ice_0892.nc t0ni_00002880_restart_ice_0893.nc t0ni_00002880_restart_ice_0894.nc t0ni_00002880_restart_ice_0895.nc t0ni_00002880_restart_ice_0896.nc t0ni_00002880_restart_ice_0897.nc t0ni_00002880_restart_ice_0898.nc t0ni_00002880_restart_ice_0899.nc t0ni_00002880_restart_ice_0900.nc t0ni_00002880_restart_ice_0901.nc t0ni_00002880_restart_ice_0902.nc t0ni_00002880_restart_ice_0903.nc t0ni_00002880_restart_ice_0904.nc t0ni_00002880_restart_ice_0905.nc t0ni_00002880_restart_ice_0906.nc t0ni_00002880_restart_ice_0907.nc t0ni_00002880_restart_ice_0908.nc t0ni_00002880_restart_ice_0909.nc t0ni_00002880_restart_ice_0910.nc t0ni_00002880_restart_ice_0911.nc t0ni_00002880_restart_ice_0912.nc t0ni_00002880_restart_ice_0913.nc t0ni_00002880_restart_ice_0914.nc t0ni_00002880_restart_ice_0915.nc t0ni_00002880_restart_ice_0916.nc t0ni_00002880_restart_ice_0917.nc t0ni_00002880_restart_ice_0918.nc t0ni_00002880_restart_ice_0919.nc t0ni_00002880_restart_ice_0920.nc t0ni_00002880_restart_ice_0921.nc t0ni_00002880_restart_ice_0922.nc t0ni_00002880_restart_ice_0923.nc t0ni_00002880_restart_ice_0924.nc t0ni_00002880_restart_ice_0925.nc t0ni_00002880_restart_ice_0926.nc t0ni_00002880_restart_ice_0927.nc t0ni_00002880_restart_ice_0928.nc t0ni_00002880_restart_ice_0929.nc t0ni_00002880_restart_ice_0930.nc t0ni_00002880_restart_ice_0931.nc t0ni_00002880_restart_ice_0932.nc t0ni_00002880_restart_ice_0933.nc t0ni_00002880_restart_ice_0934.nc t0ni_00002880_restart_ice_0935.nc t0ni_00002880_restart_ice_0936.nc t0ni_00002880_restart_ice_0937.nc t0ni_00002880_restart_ice_0938.nc t0ni_00002880_restart_ice_0939.nc t0ni_00002880_restart_ice_0940.nc t0ni_00002880_restart_ice_0941.nc t0ni_00002880_restart_ice_0942.nc t0ni_00002880_restart_ice_0943.nc t0ni_00002880_restart_ice_0944.nc t0ni_00002880_restart_ice_0945.nc t0ni_00002880_restart_ice_0946.nc t0ni_00002880_restart_ice_0947.nc t0ni_00002880_restart_ice_0948.nc t0ni_00002880_restart_ice_0949.nc t0ni_00002880_restart_ice_0950.nc t0ni_00002880_restart_ice_0951.nc t0ni_00002880_restart_ice_0952.nc t0ni_00002880_restart_ice_0953.nc t0ni_00002880_restart_ice_0954.nc t0ni_00002880_restart_ice_0955.nc t0ni_00002880_restart_ice_0956.nc t0ni_00002880_restart_ice_0957.nc t0ni_00002880_restart_ice_0958.nc t0ni_00002880_restart_ice_0959.nc t0ni_00002880_restart_ice_0960.nc t0ni_00002880_restart_ice_0961.nc t0ni_00002880_restart_ice_0962.nc t0ni_00002880_restart_ice_0963.nc t0ni_00002880_restart_ice_0964.nc t0ni_00002880_restart_ice_0965.nc t0ni_00002880_restart_ice_0966.nc t0ni_00002880_restart_ice_0967.nc t0ni_00002880_restart_ice_0968.nc t0ni_00002880_restart_ice_0969.nc t0ni_00002880_restart_ice_0970.nc t0ni_00002880_restart_ice_0971.nc t0ni_00002880_restart_ice_0972.nc t0ni_00002880_restart_ice_0973.nc t0ni_00002880_restart_ice_0974.nc t0ni_00002880_restart_ice_0975.nc t0ni_00002880_restart_ice_0976.nc t0ni_00002880_restart_ice_0977.nc t0ni_00002880_restart_ice_0978.nc t0ni_00002880_restart_ice_0979.nc t0ni_00002880_restart_ice_0980.nc t0ni_00002880_restart_ice_0981.nc t0ni_00002880_restart_ice_0982.nc t0ni_00002880_restart_ice_0983.nc t0ni_00002880_restart_ice_0984.nc t0ni_00002880_restart_ice_0985.nc t0ni_00002880_restart_ice_0986.nc t0ni_00002880_restart_ice_0987.nc t0ni_00002880_restart_ice_0988.nc t0ni_00002880_restart_ice_0989.nc t0ni_00002880_restart_ice_0990.nc t0ni_00002880_restart_ice_0991.nc t0ni_00002880_restart_ice_0992.nc t0ni_00002880_restart_ice_0993.nc t0ni_00002880_restart_ice_0994.nc t0ni_00002880_restart_ice_0995.nc t0ni_00002880_restart_ice_0996.nc t0ni_00002880_restart_ice_0997.nc t0ni_00002880_restart_ice_0998.nc t0ni_00002880_restart_ice_0999.nc t0ni_00002880_restart_ice_1000.nc t0ni_00002880_restart_ice_1001.nc t0ni_00002880_restart_ice_1002.nc t0ni_00002880_restart_ice_1003.nc t0ni_00002880_restart_ice_1004.nc t0ni_00002880_restart_ice_1005.nc t0ni_00002880_restart_ice_1006.nc t0ni_00002880_restart_ice_1007.nc t0ni_00002880_restart_ice_1008.nc t0ni_00002880_restart_ice_1009.nc t0ni_00002880_restart_ice_1010.nc t0ni_00002880_restart_ice_1011.nc t0ni_00002880_restart_ice_1012.nc t0ni_00002880_restart_ice_1013.nc t0ni_00002880_restart_ice_1014.nc t0ni_00002880_restart_ice_1015.nc t0ni_00002880_restart_ice_1016.nc t0ni_00002880_restart_ice_1017.nc t0ni_00002880_restart_ice_1018.nc t0ni_00002880_restart_ice_1019.nc t0ni_00002880_restart_ice_1020.nc t0ni_00002880_restart_ice_1021.nc t0ni_00002880_restart_ice_1022.nc t0ni_00002880_restart_ice_1023.nc t0ni_00002880_restart_ice_1024.nc t0ni_00002880_restart_ice_1025.nc t0ni_00002880_restart_ice_1026.nc t0ni_00002880_restart_ice_1027.nc t0ni_00002880_restart_ice_1028.nc t0ni_00002880_restart_ice_1029.nc t0ni_00002880_restart_ice_1030.nc t0ni_00002880_restart_ice_1031.nc t0ni_00002880_restart_ice_1032.nc t0ni_00002880_restart_ice_1033.nc t0ni_00002880_restart_ice_1034.nc t0ni_00002880_restart_ice_1035.nc t0ni_00002880_restart_ice_1036.nc t0ni_00002880_restart_ice_1037.nc t0ni_00002880_restart_ice_1038.nc t0ni_00002880_restart_ice_1039.nc t0ni_00002880_restart_ice_1040.nc t0ni_00002880_restart_ice_1041.nc t0ni_00002880_restart_ice_1042.nc t0ni_00002880_restart_ice_1043.nc t0ni_00002880_restart_ice_1044.nc t0ni_00002880_restart_ice_1045.nc t0ni_00002880_restart_ice_1046.nc t0ni_00002880_restart_ice_1047.nc t0ni_00002880_restart_ice_1048.nc t0ni_00002880_restart_ice_1049.nc t0ni_00002880_restart_ice_1050.nc t0ni_00002880_restart_ice_1051.nc t0ni_00002880_restart_ice_1052.nc t0ni_00002880_restart_ice_1053.nc t0ni_00002880_restart_ice_1054.nc t0ni_00002880_restart_ice_1055.nc t0ni_00002880_restart_ice_1056.nc t0ni_00002880_restart_ice_1057.nc t0ni_00002880_restart_ice_1058.nc t0ni_00002880_restart_ice_1059.nc t0ni_00002880_restart_ice_1060.nc t0ni_00002880_restart_ice_1061.nc t0ni_00002880_restart_ice_1062.nc t0ni_00002880_restart_ice_1063.nc t0ni_00002880_restart_ice_1064.nc t0ni_00002880_restart_ice_1065.nc t0ni_00002880_restart_ice_1066.nc t0ni_00002880_restart_ice_1067.nc t0ni_00002880_restart_ice_1068.nc t0ni_00002880_restart_ice_1069.nc t0ni_00002880_restart_ice_1070.nc t0ni_00002880_restart_ice_1071.nc t0ni_00002880_restart_ice_1072.nc t0ni_00002880_restart_ice_1073.nc t0ni_00002880_restart_ice_1074.nc t0ni_00002880_restart_ice_1075.nc t0ni_00002880_restart_ice_1076.nc t0ni_00002880_restart_ice_1077.nc t0ni_00002880_restart_ice_1078.nc t0ni_00002880_restart_ice_1079.nc t0ni_00002880_restart_ice_1080.nc t0ni_00002880_restart_ice_1081.nc t0ni_00002880_restart_ice_1082.nc t0ni_00002880_restart_ice_1083.nc t0ni_00002880_restart_ice_1084.nc t0ni_00002880_restart_ice_1085.nc t0ni_00002880_restart_ice_1086.nc t0ni_00002880_restart_ice_1087.nc t0ni_00002880_restart_ice_1088.nc t0ni_00002880_restart_ice_1089.nc t0ni_00002880_restart_ice_1090.nc t0ni_00002880_restart_ice_1091.nc t0ni_00002880_restart_ice_1092.nc t0ni_00002880_restart_ice_1093.nc t0ni_00002880_restart_ice_1094.nc t0ni_00002880_restart_ice_1095.nc t0ni_00002880_restart_ice_1096.nc t0ni_00002880_restart_ice_1097.nc t0ni_00002880_restart_ice_1098.nc t0ni_00002880_restart_ice_1099.nc t0ni_00002880_restart_ice_1100.nc t0ni_00002880_restart_ice_1101.nc t0ni_00002880_restart_ice_1102.nc t0ni_00002880_restart_ice_1103.nc t0ni_00002880_restart_ice_1104.nc t0ni_00002880_restart_ice_1105.nc t0ni_00002880_restart_ice_1106.nc t0ni_00002880_restart_ice_1107.nc t0ni_00002880_restart_ice_1108.nc t0ni_00002880_restart_ice_1109.nc t0ni_00002880_restart_ice_1110.nc t0ni_00002880_restart_ice_1111.nc t0ni_00002880_restart_ice_1112.nc t0ni_00002880_restart_ice_1113.nc t0ni_00002880_restart_ice_1114.nc t0ni_00002880_restart_ice_1115.nc t0ni_00002880_restart_ice_1116.nc t0ni_00002880_restart_ice_1117.nc t0ni_00002880_restart_ice_1118.nc t0ni_00002880_restart_ice_1119.nc t0ni_00002880_restart_ice_1120.nc t0ni_00002880_restart_ice_1121.nc t0ni_00002880_restart_ice_1122.nc t0ni_00002880_restart_ice_1123.nc t0ni_00002880_restart_ice_1124.nc t0ni_00002880_restart_ice_1125.nc t0ni_00002880_restart_ice_1126.nc t0ni_00002880_restart_ice_1127.nc t0ni_00002880_restart_ice_1128.nc t0ni_00002880_restart_ice_1129.nc t0ni_00002880_restart_ice_1130.nc t0ni_00002880_restart_ice_1131.nc t0ni_00002880_restart_ice_1132.nc t0ni_00002880_restart_ice_1133.nc t0ni_00002880_restart_ice_1134.nc t0ni_00002880_restart_ice_1135.nc t0ni_00002880_restart_ice_1136.nc t0ni_00002880_restart_ice_1137.nc t0ni_00002880_restart_ice_1138.nc t0ni_00002880_restart_ice_1139.nc t0ni_00002880_restart_ice_1140.nc t0ni_00002880_restart_ice_1141.nc t0ni_00002880_restart_ice_1142.nc t0ni_00002880_restart_ice_1143.nc t0ni_00002880_restart_ice_1144.nc t0ni_00002880_restart_ice_1145.nc t0ni_00002880_restart_ice_1146.nc t0ni_00002880_restart_ice_1147.nc t0ni_00002880_restart_ice_1148.nc t0ni_00002880_restart_ice_1149.nc t0ni_00002880_restart_ice_1150.nc t0ni_00002880_restart_ice_1151.nc t0ni_00002880_restart_ice_1152.nc t0ni_00002880_restart_ice_1153.nc t0ni_00002880_restart_ice_1154.nc t0ni_00002880_restart_ice_1155.nc t0ni_00002880_restart_ice_1156.nc t0ni_00002880_restart_ice_1157.nc t0ni_00002880_restart_ice_1158.nc t0ni_00002880_restart_ice_1159.nc t0ni_00002880_restart_ice_1160.nc t0ni_00002880_restart_ice_1161.nc t0ni_00002880_restart_ice_1162.nc t0ni_00002880_restart_ice_1163.nc t0ni_00002880_restart_ice_1164.nc t0ni_00002880_restart_ice_1165.nc t0ni_00002880_restart_ice_1166.nc t0ni_00002880_restart_ice_1167.nc t0ni_00002880_restart_ice_1168.nc t0ni_00002880_restart_ice_1169.nc t0ni_00002880_restart_ice_1170.nc t0ni_00002880_restart_ice_1171.nc t0ni_00002880_restart_ice_1172.nc t0ni_00002880_restart_ice_1173.nc t0ni_00002880_restart_ice_1174.nc t0ni_00002880_restart_ice_1175.nc t0ni_00002880_restart_ice_1176.nc t0ni_00002880_restart_ice_1177.nc t0ni_00002880_restart_ice_1178.nc t0ni_00002880_restart_ice_1179.nc t0ni_00002880_restart_ice_1180.nc t0ni_00002880_restart_ice_1181.nc t0ni_00002880_restart_ice_1182.nc t0ni_00002880_restart_ice_1183.nc t0ni_00002880_restart_ice_1184.nc t0ni_00002880_restart_ice_1185.nc t0ni_00002880_restart_ice_1186.nc t0ni_00002880_restart_ice_1187.nc t0ni_00002880_restart_ice_1188.nc t0ni_00002880_restart_ice_1189.nc t0ni_00002880_restart_ice_1190.nc t0ni_00002880_restart_ice_1191.nc t0ni_00002880_restart_ice_1192.nc t0ni_00002880_restart_ice_1193.nc t0ni_00002880_restart_ice_1194.nc t0ni_00002880_restart_ice_1195.nc t0ni_00002880_restart_ice_1196.nc t0ni_00002880_restart_ice_1197.nc t0ni_00002880_restart_ice_1198.nc t0ni_00002880_restart_ice_1199.nc t0ni_00002880_restart_ice_1200.nc t0ni_00002880_restart_ice_1201.nc t0ni_00002880_restart_ice_1202.nc t0ni_00002880_restart_ice_1203.nc t0ni_00002880_restart_ice_1204.nc t0ni_00002880_restart_ice_1205.nc t0ni_00002880_restart_ice_1206.nc t0ni_00002880_restart_ice_1207.nc t0ni_00002880_restart_ice_1208.nc t0ni_00002880_restart_ice_1209.nc t0ni_00002880_restart_ice_1210.nc t0ni_00002880_restart_ice_1211.nc t0ni_00002880_restart_ice_1212.nc t0ni_00002880_restart_ice_1213.nc t0ni_00002880_restart_ice_1214.nc t0ni_00002880_restart_ice_1215.nc t0ni_00002880_restart_ice_1216.nc t0ni_00002880_restart_ice_1217.nc t0ni_00002880_restart_ice_1218.nc t0ni_00002880_restart_ice_1219.nc t0ni_00002880_restart_ice_1220.nc t0ni_00002880_restart_ice_1221.nc t0ni_00002880_restart_ice_1222.nc t0ni_00002880_restart_ice_1223.nc t0ni_00002880_restart_ice_1224.nc t0ni_00002880_restart_ice_1225.nc t0ni_00002880_restart_ice_1226.nc t0ni_00002880_restart_ice_1227.nc t0ni_00002880_restart_ice_1228.nc t0ni_00002880_restart_ice_1229.nc t0ni_00002880_restart_ice_1230.nc t0ni_00002880_restart_ice_1231.nc t0ni_00002880_restart_ice_1232.nc t0ni_00002880_restart_ice_1233.nc t0ni_00002880_restart_ice_1234.nc t0ni_00002880_restart_ice_1235.nc t0ni_00002880_restart_ice_1236.nc t0ni_00002880_restart_ice_1237.nc t0ni_00002880_restart_ice_1238.nc t0ni_00002880_restart_ice_1239.nc t0ni_00002880_restart_ice_1240.nc t0ni_00002880_restart_ice_1241.nc t0ni_00002880_restart_ice_1242.nc t0ni_00002880_restart_ice_1243.nc t0ni_00002880_restart_ice_1244.nc t0ni_00002880_restart_ice_1245.nc t0ni_00002880_restart_ice_1246.nc t0ni_00002880_restart_ice_1247.nc t0ni_00002880_restart_ice_1248.nc t0ni_00002880_restart_ice_1249.nc t0ni_00002880_restart_ice_1250.nc t0ni_00002880_restart_ice_1251.nc t0ni_00002880_restart_ice_1252.nc t0ni_00002880_restart_ice_1253.nc t0ni_00002880_restart_ice_1254.nc t0ni_00002880_restart_ice_1255.nc t0ni_00002880_restart_ice_1256.nc t0ni_00002880_restart_ice_1257.nc t0ni_00002880_restart_ice_1258.nc t0ni_00002880_restart_ice_1259.nc t0ni_00002880_restart_ice_1260.nc t0ni_00002880_restart_ice_1261.nc t0ni_00002880_restart_ice_1262.nc t0ni_00002880_restart_ice_1263.nc t0ni_00002880_restart_ice_1264.nc t0ni_00002880_restart_ice_1265.nc t0ni_00002880_restart_ice_1266.nc t0ni_00002880_restart_ice_1267.nc t0ni_00002880_restart_ice_1268.nc t0ni_00002880_restart_ice_1269.nc t0ni_00002880_restart_ice_1270.nc t0ni_00002880_restart_ice_1271.nc t0ni_00002880_restart_ice_1272.nc t0ni_00002880_restart_ice_1273.nc t0ni_00002880_restart_ice_1274.nc t0ni_00002880_restart_ice_1275.nc t0ni_00002880_restart_ice_1276.nc t0ni_00002880_restart_ice_1277.nc t0ni_00002880_restart_ice_1278.nc t0ni_00002880_restart_ice_1279.nc t0ni_00002880_restart_ice_1280.nc t0ni_00002880_restart_ice_1281.nc t0ni_00002880_restart_ice_1282.nc t0ni_00002880_restart_ice_1283.nc t0ni_00002880_restart_ice_1284.nc t0ni_00002880_restart_ice_1285.nc t0ni_00002880_restart_ice_1286.nc t0ni_00002880_restart_ice_1287.nc t0ni_00002880_restart_ice_1288.nc t0ni_00002880_restart_ice_1289.nc t0ni_00002880_restart_ice_1290.nc t0ni_00002880_restart_ice_1291.nc t0ni_00002880_restart_ice_1292.nc t0ni_00002880_restart_ice_1293.nc t0ni_00002880_restart_ice_1294.nc t0ni_00002880_restart_ice_1295.nc t0ni_00002880_restart_ice_1296.nc t0ni_00002880_restart_ice_1297.nc t0ni_00002880_restart_ice_1298.nc t0ni_00002880_restart_ice_1299.nc t0ni_00002880_restart_ice_1300.nc t0ni_00002880_restart_ice_1301.nc t0ni_00002880_restart_ice_1302.nc t0ni_00002880_restart_ice_1303.nc t0ni_00002880_restart_ice_1304.nc t0ni_00002880_restart_ice_1305.nc t0ni_00002880_restart_ice_1306.nc t0ni_00002880_restart_ice_1307.nc t0ni_00002880_restart_ice_1308.nc t0ni_00002880_restart_ice_1309.nc t0ni_00002880_restart_ice_1310.nc t0ni_00002880_restart_ice_1311.nc t0ni_00002880_restart_ice_1312.nc t0ni_00002880_restart_ice_1313.nc t0ni_00002880_restart_ice_1314.nc t0ni_00002880_restart_ice_1315.nc t0ni_00002880_restart_ice_1316.nc t0ni_00002880_restart_ice_1317.nc t0ni_00002880_restart_ice_1318.nc t0ni_00002880_restart_ice_1319.nc t0ni_00002880_restart_ice_1320.nc t0ni_00002880_restart_ice_1321.nc t0ni_00002880_restart_ice_1322.nc t0ni_00002880_restart_ice_1323.nc t0ni_00002880_restart_ice_1324.nc t0ni_00002880_restart_ice_1325.nc t0ni_00002880_restart_ice_1326.nc t0ni_00002880_restart_ice_1327.nc t0ni_00002880_restart_ice_1328.nc t0ni_00002880_restart_ice_1329.nc t0ni_00002880_restart_ice_1330.nc t0ni_00002880_restart_ice_1331.nc t0ni_00002880_restart_ice_1332.nc t0ni_00002880_restart_ice_1333.nc t0ni_00002880_restart_ice_1334.nc t0ni_00002880_restart_ice_1335.nc t0ni_00002880_restart_ice_1336.nc t0ni_00002880_restart_ice_1337.nc t0ni_00002880_restart_ice_1338.nc t0ni_00002880_restart_ice_1339.nc t0ni_00002880_restart_ice_1340.nc t0ni_00002880_restart_ice_1341.nc t0ni_00002880_restart_ice_1342.nc t0ni_00002880_restart_ice_1343.nc t0ni_00002880_restart_ice_1344.nc t0ni_00002880_restart_ice_1345.nc t0ni_00002880_restart_ice_1346.nc t0ni_00002880_restart_ice_1347.nc t0ni_00002880_restart_ice_1348.nc t0ni_00002880_restart_ice_1349.nc t0ni_00002880_restart_ice_1350.nc t0ni_00002880_restart_ice_1351.nc t0ni_00002880_restart_ice_1352.nc t0ni_00002880_restart_ice_1353.nc t0ni_00002880_restart_ice_1354.nc t0ni_00002880_restart_ice_1355.nc t0ni_00002880_restart_ice_1356.nc t0ni_00002880_restart_ice_1357.nc t0ni_00002880_restart_ice_1358.nc t0ni_00002880_restart_ice_1359.nc t0ni_00002880_restart_ice_1360.nc t0ni_00002880_restart_ice_1361.nc t0ni_00002880_restart_ice_1362.nc t0ni_00002880_restart_ice_1363.nc t0ni_00002880_restart_ice_1364.nc t0ni_00002880_restart_ice_1365.nc t0ni_00002880_restart_ice_1366.nc t0ni_00002880_restart_ice_1367.nc t0ni_00002880_restart_ice_1368.nc t0ni_00002880_restart_ice_1369.nc t0ni_00002880_restart_ice_1370.nc t0ni_00002880_restart_ice_1371.nc t0ni_00002880_restart_ice_1372.nc t0ni_00002880_restart_ice_1373.nc t0ni_00002880_restart_ice_1374.nc t0ni_00002880_restart_ice_1375.nc t0ni_00002880_restart_ice_1376.nc t0ni_00002880_restart_ice_1377.nc t0ni_00002880_restart_ice_1378.nc t0ni_00002880_restart_ice_1379.nc t0ni_00002880_restart_ice_1380.nc t0ni_00002880_restart_ice_1381.nc t0ni_00002880_restart_ice_1382.nc t0ni_00002880_restart_ice_1383.nc t0ni_00002880_restart_ice_1384.nc t0ni_00002880_restart_ice_1385.nc t0ni_00002880_restart_ice_1386.nc t0ni_00002880_restart_ice_1387.nc t0ni_00002880_restart_ice_1388.nc t0ni_00002880_restart_ice_1389.nc t0ni_00002880_restart_ice_1390.nc
+ mkdir -p save_ic/19931201/nemo
+ [[ 2592000 -eq 0 ]]
+ [[ 2592000 -eq 2592000 ]]
+ cp -f t0ni_00002880_restart_ice_0000.nc t0ni_00002880_restart_ice_0001.nc t0ni_00002880_restart_ice_0002.nc t0ni_00002880_restart_ice_0003.nc t0ni_00002880_restart_ice_0004.nc t0ni_00002880_restart_ice_0005.nc t0ni_00002880_restart_ice_0006.nc t0ni_00002880_restart_ice_0007.nc t0ni_00002880_restart_ice_0008.nc t0ni_00002880_restart_ice_0009.nc t0ni_00002880_restart_ice_0010.nc t0ni_00002880_restart_ice_0011.nc t0ni_00002880_restart_ice_0012.nc t0ni_00002880_restart_ice_0013.nc t0ni_00002880_restart_ice_0014.nc t0ni_00002880_restart_ice_0015.nc t0ni_00002880_restart_ice_0016.nc t0ni_00002880_restart_ice_0017.nc t0ni_00002880_restart_ice_0018.nc t0ni_00002880_restart_ice_0019.nc t0ni_00002880_restart_ice_0020.nc t0ni_00002880_restart_ice_0021.nc t0ni_00002880_restart_ice_0022.nc t0ni_00002880_restart_ice_0023.nc t0ni_00002880_restart_ice_0024.nc t0ni_00002880_restart_ice_0025.nc t0ni_00002880_restart_ice_0026.nc t0ni_00002880_restart_ice_0027.nc t0ni_00002880_restart_ice_0028.nc t0ni_00002880_restart_ice_0029.nc t0ni_00002880_restart_ice_0030.nc t0ni_00002880_restart_ice_0031.nc t0ni_00002880_restart_ice_0032.nc t0ni_00002880_restart_ice_0033.nc t0ni_00002880_restart_ice_0034.nc t0ni_00002880_restart_ice_0035.nc t0ni_00002880_restart_ice_0036.nc t0ni_00002880_restart_ice_0037.nc t0ni_00002880_restart_ice_0038.nc t0ni_00002880_restart_ice_0039.nc t0ni_00002880_restart_ice_0040.nc t0ni_00002880_restart_ice_0041.nc t0ni_00002880_restart_ice_0042.nc t0ni_00002880_restart_ice_0043.nc t0ni_00002880_restart_ice_0044.nc t0ni_00002880_restart_ice_0045.nc t0ni_00002880_restart_ice_0046.nc t0ni_00002880_restart_ice_0047.nc t0ni_00002880_restart_ice_0048.nc t0ni_00002880_restart_ice_0049.nc t0ni_00002880_restart_ice_0050.nc t0ni_00002880_restart_ice_0051.nc t0ni_00002880_restart_ice_0052.nc t0ni_00002880_restart_ice_0053.nc t0ni_00002880_restart_ice_0054.nc t0ni_00002880_restart_ice_0055.nc t0ni_00002880_restart_ice_0056.nc t0ni_00002880_restart_ice_0057.nc t0ni_00002880_restart_ice_0058.nc t0ni_00002880_restart_ice_0059.nc t0ni_00002880_restart_ice_0060.nc t0ni_00002880_restart_ice_0061.nc t0ni_00002880_restart_ice_0062.nc t0ni_00002880_restart_ice_0063.nc t0ni_00002880_restart_ice_0064.nc t0ni_00002880_restart_ice_0065.nc t0ni_00002880_restart_ice_0066.nc t0ni_00002880_restart_ice_0067.nc t0ni_00002880_restart_ice_0068.nc t0ni_00002880_restart_ice_0069.nc t0ni_00002880_restart_ice_0070.nc t0ni_00002880_restart_ice_0071.nc t0ni_00002880_restart_ice_0072.nc t0ni_00002880_restart_ice_0073.nc t0ni_00002880_restart_ice_0074.nc t0ni_00002880_restart_ice_0075.nc t0ni_00002880_restart_ice_0076.nc t0ni_00002880_restart_ice_0077.nc t0ni_00002880_restart_ice_0078.nc t0ni_00002880_restart_ice_0079.nc t0ni_00002880_restart_ice_0080.nc t0ni_00002880_restart_ice_0081.nc t0ni_00002880_restart_ice_0082.nc t0ni_00002880_restart_ice_0083.nc t0ni_00002880_restart_ice_0084.nc t0ni_00002880_restart_ice_0085.nc t0ni_00002880_restart_ice_0086.nc t0ni_00002880_restart_ice_0087.nc t0ni_00002880_restart_ice_0088.nc t0ni_00002880_restart_ice_0089.nc t0ni_00002880_restart_ice_0090.nc t0ni_00002880_restart_ice_0091.nc t0ni_00002880_restart_ice_0092.nc t0ni_00002880_restart_ice_0093.nc t0ni_00002880_restart_ice_0094.nc t0ni_00002880_restart_ice_0095.nc t0ni_00002880_restart_ice_0096.nc t0ni_00002880_restart_ice_0097.nc t0ni_00002880_restart_ice_0098.nc t0ni_00002880_restart_ice_0099.nc t0ni_00002880_restart_ice_0100.nc t0ni_00002880_restart_ice_0101.nc t0ni_00002880_restart_ice_0102.nc t0ni_00002880_restart_ice_0103.nc t0ni_00002880_restart_ice_0104.nc t0ni_00002880_restart_ice_0105.nc t0ni_00002880_restart_ice_0106.nc t0ni_00002880_restart_ice_0107.nc t0ni_00002880_restart_ice_0108.nc t0ni_00002880_restart_ice_0109.nc t0ni_00002880_restart_ice_0110.nc t0ni_00002880_restart_ice_0111.nc t0ni_00002880_restart_ice_0112.nc t0ni_00002880_restart_ice_0113.nc t0ni_00002880_restart_ice_0114.nc t0ni_00002880_restart_ice_0115.nc t0ni_00002880_restart_ice_0116.nc t0ni_00002880_restart_ice_0117.nc t0ni_00002880_restart_ice_0118.nc t0ni_00002880_restart_ice_0119.nc t0ni_00002880_restart_ice_0120.nc t0ni_00002880_restart_ice_0121.nc t0ni_00002880_restart_ice_0122.nc t0ni_00002880_restart_ice_0123.nc t0ni_00002880_restart_ice_0124.nc t0ni_00002880_restart_ice_0125.nc t0ni_00002880_restart_ice_0126.nc t0ni_00002880_restart_ice_0127.nc t0ni_00002880_restart_ice_0128.nc t0ni_00002880_restart_ice_0129.nc t0ni_00002880_restart_ice_0130.nc t0ni_00002880_restart_ice_0131.nc t0ni_00002880_restart_ice_0132.nc t0ni_00002880_restart_ice_0133.nc t0ni_00002880_restart_ice_0134.nc t0ni_00002880_restart_ice_0135.nc t0ni_00002880_restart_ice_0136.nc t0ni_00002880_restart_ice_0137.nc t0ni_00002880_restart_ice_0138.nc t0ni_00002880_restart_ice_0139.nc t0ni_00002880_restart_ice_0140.nc t0ni_00002880_restart_ice_0141.nc t0ni_00002880_restart_ice_0142.nc t0ni_00002880_restart_ice_0143.nc t0ni_00002880_restart_ice_0144.nc t0ni_00002880_restart_ice_0145.nc t0ni_00002880_restart_ice_0146.nc t0ni_00002880_restart_ice_0147.nc t0ni_00002880_restart_ice_0148.nc t0ni_00002880_restart_ice_0149.nc t0ni_00002880_restart_ice_0150.nc t0ni_00002880_restart_ice_0151.nc t0ni_00002880_restart_ice_0152.nc t0ni_00002880_restart_ice_0153.nc t0ni_00002880_restart_ice_0154.nc t0ni_00002880_restart_ice_0155.nc t0ni_00002880_restart_ice_0156.nc t0ni_00002880_restart_ice_0157.nc t0ni_00002880_restart_ice_0158.nc t0ni_00002880_restart_ice_0159.nc t0ni_00002880_restart_ice_0160.nc t0ni_00002880_restart_ice_0161.nc t0ni_00002880_restart_ice_0162.nc t0ni_00002880_restart_ice_0163.nc t0ni_00002880_restart_ice_0164.nc t0ni_00002880_restart_ice_0165.nc t0ni_00002880_restart_ice_0166.nc t0ni_00002880_restart_ice_0167.nc t0ni_00002880_restart_ice_0168.nc t0ni_00002880_restart_ice_0169.nc t0ni_00002880_restart_ice_0170.nc t0ni_00002880_restart_ice_0171.nc t0ni_00002880_restart_ice_0172.nc t0ni_00002880_restart_ice_0173.nc t0ni_00002880_restart_ice_0174.nc t0ni_00002880_restart_ice_0175.nc t0ni_00002880_restart_ice_0176.nc t0ni_00002880_restart_ice_0177.nc t0ni_00002880_restart_ice_0178.nc t0ni_00002880_restart_ice_0179.nc t0ni_00002880_restart_ice_0180.nc t0ni_00002880_restart_ice_0181.nc t0ni_00002880_restart_ice_0182.nc t0ni_00002880_restart_ice_0183.nc t0ni_00002880_restart_ice_0184.nc t0ni_00002880_restart_ice_0185.nc t0ni_00002880_restart_ice_0186.nc t0ni_00002880_restart_ice_0187.nc t0ni_00002880_restart_ice_0188.nc t0ni_00002880_restart_ice_0189.nc t0ni_00002880_restart_ice_0190.nc t0ni_00002880_restart_ice_0191.nc t0ni_00002880_restart_ice_0192.nc t0ni_00002880_restart_ice_0193.nc t0ni_00002880_restart_ice_0194.nc t0ni_00002880_restart_ice_0195.nc t0ni_00002880_restart_ice_0196.nc t0ni_00002880_restart_ice_0197.nc t0ni_00002880_restart_ice_0198.nc t0ni_00002880_restart_ice_0199.nc t0ni_00002880_restart_ice_0200.nc t0ni_00002880_restart_ice_0201.nc t0ni_00002880_restart_ice_0202.nc t0ni_00002880_restart_ice_0203.nc t0ni_00002880_restart_ice_0204.nc t0ni_00002880_restart_ice_0205.nc t0ni_00002880_restart_ice_0206.nc t0ni_00002880_restart_ice_0207.nc t0ni_00002880_restart_ice_0208.nc t0ni_00002880_restart_ice_0209.nc t0ni_00002880_restart_ice_0210.nc t0ni_00002880_restart_ice_0211.nc t0ni_00002880_restart_ice_0212.nc t0ni_00002880_restart_ice_0213.nc t0ni_00002880_restart_ice_0214.nc t0ni_00002880_restart_ice_0215.nc t0ni_00002880_restart_ice_0216.nc t0ni_00002880_restart_ice_0217.nc t0ni_00002880_restart_ice_0218.nc t0ni_00002880_restart_ice_0219.nc t0ni_00002880_restart_ice_0220.nc t0ni_00002880_restart_ice_0221.nc t0ni_00002880_restart_ice_0222.nc t0ni_00002880_restart_ice_0223.nc t0ni_00002880_restart_ice_0224.nc t0ni_00002880_restart_ice_0225.nc t0ni_00002880_restart_ice_0226.nc t0ni_00002880_restart_ice_0227.nc t0ni_00002880_restart_ice_0228.nc t0ni_00002880_restart_ice_0229.nc t0ni_00002880_restart_ice_0230.nc t0ni_00002880_restart_ice_0231.nc t0ni_00002880_restart_ice_0232.nc t0ni_00002880_restart_ice_0233.nc t0ni_00002880_restart_ice_0234.nc t0ni_00002880_restart_ice_0235.nc t0ni_00002880_restart_ice_0236.nc t0ni_00002880_restart_ice_0237.nc t0ni_00002880_restart_ice_0238.nc t0ni_00002880_restart_ice_0239.nc t0ni_00002880_restart_ice_0240.nc t0ni_00002880_restart_ice_0241.nc t0ni_00002880_restart_ice_0242.nc t0ni_00002880_restart_ice_0243.nc t0ni_00002880_restart_ice_0244.nc t0ni_00002880_restart_ice_0245.nc t0ni_00002880_restart_ice_0246.nc t0ni_00002880_restart_ice_0247.nc t0ni_00002880_restart_ice_0248.nc t0ni_00002880_restart_ice_0249.nc t0ni_00002880_restart_ice_0250.nc t0ni_00002880_restart_ice_0251.nc t0ni_00002880_restart_ice_0252.nc t0ni_00002880_restart_ice_0253.nc t0ni_00002880_restart_ice_0254.nc t0ni_00002880_restart_ice_0255.nc t0ni_00002880_restart_ice_0256.nc t0ni_00002880_restart_ice_0257.nc t0ni_00002880_restart_ice_0258.nc t0ni_00002880_restart_ice_0259.nc t0ni_00002880_restart_ice_0260.nc t0ni_00002880_restart_ice_0261.nc t0ni_00002880_restart_ice_0262.nc t0ni_00002880_restart_ice_0263.nc t0ni_00002880_restart_ice_0264.nc t0ni_00002880_restart_ice_0265.nc t0ni_00002880_restart_ice_0266.nc t0ni_00002880_restart_ice_0267.nc t0ni_00002880_restart_ice_0268.nc t0ni_00002880_restart_ice_0269.nc t0ni_00002880_restart_ice_0270.nc t0ni_00002880_restart_ice_0271.nc t0ni_00002880_restart_ice_0272.nc t0ni_00002880_restart_ice_0273.nc t0ni_00002880_restart_ice_0274.nc t0ni_00002880_restart_ice_0275.nc t0ni_00002880_restart_ice_0276.nc t0ni_00002880_restart_ice_0277.nc t0ni_00002880_restart_ice_0278.nc t0ni_00002880_restart_ice_0279.nc t0ni_00002880_restart_ice_0280.nc t0ni_00002880_restart_ice_0281.nc t0ni_00002880_restart_ice_0282.nc t0ni_00002880_restart_ice_0283.nc t0ni_00002880_restart_ice_0284.nc t0ni_00002880_restart_ice_0285.nc t0ni_00002880_restart_ice_0286.nc t0ni_00002880_restart_ice_0287.nc t0ni_00002880_restart_ice_0288.nc t0ni_00002880_restart_ice_0289.nc t0ni_00002880_restart_ice_0290.nc t0ni_00002880_restart_ice_0291.nc t0ni_00002880_restart_ice_0292.nc t0ni_00002880_restart_ice_0293.nc t0ni_00002880_restart_ice_0294.nc t0ni_00002880_restart_ice_0295.nc t0ni_00002880_restart_ice_0296.nc t0ni_00002880_restart_ice_0297.nc t0ni_00002880_restart_ice_0298.nc t0ni_00002880_restart_ice_0299.nc t0ni_00002880_restart_ice_0300.nc t0ni_00002880_restart_ice_0301.nc t0ni_00002880_restart_ice_0302.nc t0ni_00002880_restart_ice_0303.nc t0ni_00002880_restart_ice_0304.nc t0ni_00002880_restart_ice_0305.nc t0ni_00002880_restart_ice_0306.nc t0ni_00002880_restart_ice_0307.nc t0ni_00002880_restart_ice_0308.nc t0ni_00002880_restart_ice_0309.nc t0ni_00002880_restart_ice_0310.nc t0ni_00002880_restart_ice_0311.nc t0ni_00002880_restart_ice_0312.nc t0ni_00002880_restart_ice_0313.nc t0ni_00002880_restart_ice_0314.nc t0ni_00002880_restart_ice_0315.nc t0ni_00002880_restart_ice_0316.nc t0ni_00002880_restart_ice_0317.nc t0ni_00002880_restart_ice_0318.nc t0ni_00002880_restart_ice_0319.nc t0ni_00002880_restart_ice_0320.nc t0ni_00002880_restart_ice_0321.nc t0ni_00002880_restart_ice_0322.nc t0ni_00002880_restart_ice_0323.nc t0ni_00002880_restart_ice_0324.nc t0ni_00002880_restart_ice_0325.nc t0ni_00002880_restart_ice_0326.nc t0ni_00002880_restart_ice_0327.nc t0ni_00002880_restart_ice_0328.nc t0ni_00002880_restart_ice_0329.nc t0ni_00002880_restart_ice_0330.nc t0ni_00002880_restart_ice_0331.nc t0ni_00002880_restart_ice_0332.nc t0ni_00002880_restart_ice_0333.nc t0ni_00002880_restart_ice_0334.nc t0ni_00002880_restart_ice_0335.nc t0ni_00002880_restart_ice_0336.nc t0ni_00002880_restart_ice_0337.nc t0ni_00002880_restart_ice_0338.nc t0ni_00002880_restart_ice_0339.nc t0ni_00002880_restart_ice_0340.nc t0ni_00002880_restart_ice_0341.nc t0ni_00002880_restart_ice_0342.nc t0ni_00002880_restart_ice_0343.nc t0ni_00002880_restart_ice_0344.nc t0ni_00002880_restart_ice_0345.nc t0ni_00002880_restart_ice_0346.nc t0ni_00002880_restart_ice_0347.nc t0ni_00002880_restart_ice_0348.nc t0ni_00002880_restart_ice_0349.nc t0ni_00002880_restart_ice_0350.nc t0ni_00002880_restart_ice_0351.nc t0ni_00002880_restart_ice_0352.nc t0ni_00002880_restart_ice_0353.nc t0ni_00002880_restart_ice_0354.nc t0ni_00002880_restart_ice_0355.nc t0ni_00002880_restart_ice_0356.nc t0ni_00002880_restart_ice_0357.nc t0ni_00002880_restart_ice_0358.nc t0ni_00002880_restart_ice_0359.nc t0ni_00002880_restart_ice_0360.nc t0ni_00002880_restart_ice_0361.nc t0ni_00002880_restart_ice_0362.nc t0ni_00002880_restart_ice_0363.nc t0ni_00002880_restart_ice_0364.nc t0ni_00002880_restart_ice_0365.nc t0ni_00002880_restart_ice_0366.nc t0ni_00002880_restart_ice_0367.nc t0ni_00002880_restart_ice_0368.nc t0ni_00002880_restart_ice_0369.nc t0ni_00002880_restart_ice_0370.nc t0ni_00002880_restart_ice_0371.nc t0ni_00002880_restart_ice_0372.nc t0ni_00002880_restart_ice_0373.nc t0ni_00002880_restart_ice_0374.nc t0ni_00002880_restart_ice_0375.nc t0ni_00002880_restart_ice_0376.nc t0ni_00002880_restart_ice_0377.nc t0ni_00002880_restart_ice_0378.nc t0ni_00002880_restart_ice_0379.nc t0ni_00002880_restart_ice_0380.nc t0ni_00002880_restart_ice_0381.nc t0ni_00002880_restart_ice_0382.nc t0ni_00002880_restart_ice_0383.nc t0ni_00002880_restart_ice_0384.nc t0ni_00002880_restart_ice_0385.nc t0ni_00002880_restart_ice_0386.nc t0ni_00002880_restart_ice_0387.nc t0ni_00002880_restart_ice_0388.nc t0ni_00002880_restart_ice_0389.nc t0ni_00002880_restart_ice_0390.nc t0ni_00002880_restart_ice_0391.nc t0ni_00002880_restart_ice_0392.nc t0ni_00002880_restart_ice_0393.nc t0ni_00002880_restart_ice_0394.nc t0ni_00002880_restart_ice_0395.nc t0ni_00002880_restart_ice_0396.nc t0ni_00002880_restart_ice_0397.nc t0ni_00002880_restart_ice_0398.nc t0ni_00002880_restart_ice_0399.nc t0ni_00002880_restart_ice_0400.nc t0ni_00002880_restart_ice_0401.nc t0ni_00002880_restart_ice_0402.nc t0ni_00002880_restart_ice_0403.nc t0ni_00002880_restart_ice_0404.nc t0ni_00002880_restart_ice_0405.nc t0ni_00002880_restart_ice_0406.nc t0ni_00002880_restart_ice_0407.nc t0ni_00002880_restart_ice_0408.nc t0ni_00002880_restart_ice_0409.nc t0ni_00002880_restart_ice_0410.nc t0ni_00002880_restart_ice_0411.nc t0ni_00002880_restart_ice_0412.nc t0ni_00002880_restart_ice_0413.nc t0ni_00002880_restart_ice_0414.nc t0ni_00002880_restart_ice_0415.nc t0ni_00002880_restart_ice_0416.nc t0ni_00002880_restart_ice_0417.nc t0ni_00002880_restart_ice_0418.nc t0ni_00002880_restart_ice_0419.nc t0ni_00002880_restart_ice_0420.nc t0ni_00002880_restart_ice_0421.nc t0ni_00002880_restart_ice_0422.nc t0ni_00002880_restart_ice_0423.nc t0ni_00002880_restart_ice_0424.nc t0ni_00002880_restart_ice_0425.nc t0ni_00002880_restart_ice_0426.nc t0ni_00002880_restart_ice_0427.nc t0ni_00002880_restart_ice_0428.nc t0ni_00002880_restart_ice_0429.nc t0ni_00002880_restart_ice_0430.nc t0ni_00002880_restart_ice_0431.nc t0ni_00002880_restart_ice_0432.nc t0ni_00002880_restart_ice_0433.nc t0ni_00002880_restart_ice_0434.nc t0ni_00002880_restart_ice_0435.nc t0ni_00002880_restart_ice_0436.nc t0ni_00002880_restart_ice_0437.nc t0ni_00002880_restart_ice_0438.nc t0ni_00002880_restart_ice_0439.nc t0ni_00002880_restart_ice_0440.nc t0ni_00002880_restart_ice_0441.nc t0ni_00002880_restart_ice_0442.nc t0ni_00002880_restart_ice_0443.nc t0ni_00002880_restart_ice_0444.nc t0ni_00002880_restart_ice_0445.nc t0ni_00002880_restart_ice_0446.nc t0ni_00002880_restart_ice_0447.nc t0ni_00002880_restart_ice_0448.nc t0ni_00002880_restart_ice_0449.nc t0ni_00002880_restart_ice_0450.nc t0ni_00002880_restart_ice_0451.nc t0ni_00002880_restart_ice_0452.nc t0ni_00002880_restart_ice_0453.nc t0ni_00002880_restart_ice_0454.nc t0ni_00002880_restart_ice_0455.nc t0ni_00002880_restart_ice_0456.nc t0ni_00002880_restart_ice_0457.nc t0ni_00002880_restart_ice_0458.nc t0ni_00002880_restart_ice_0459.nc t0ni_00002880_restart_ice_0460.nc t0ni_00002880_restart_ice_0461.nc t0ni_00002880_restart_ice_0462.nc t0ni_00002880_restart_ice_0463.nc t0ni_00002880_restart_ice_0464.nc t0ni_00002880_restart_ice_0465.nc t0ni_00002880_restart_ice_0466.nc t0ni_00002880_restart_ice_0467.nc t0ni_00002880_restart_ice_0468.nc t0ni_00002880_restart_ice_0469.nc t0ni_00002880_restart_ice_0470.nc t0ni_00002880_restart_ice_0471.nc t0ni_00002880_restart_ice_0472.nc t0ni_00002880_restart_ice_0473.nc t0ni_00002880_restart_ice_0474.nc t0ni_00002880_restart_ice_0475.nc t0ni_00002880_restart_ice_0476.nc t0ni_00002880_restart_ice_0477.nc t0ni_00002880_restart_ice_0478.nc t0ni_00002880_restart_ice_0479.nc t0ni_00002880_restart_ice_0480.nc t0ni_00002880_restart_ice_0481.nc t0ni_00002880_restart_ice_0482.nc t0ni_00002880_restart_ice_0483.nc t0ni_00002880_restart_ice_0484.nc t0ni_00002880_restart_ice_0485.nc t0ni_00002880_restart_ice_0486.nc t0ni_00002880_restart_ice_0487.nc t0ni_00002880_restart_ice_0488.nc t0ni_00002880_restart_ice_0489.nc t0ni_00002880_restart_ice_0490.nc t0ni_00002880_restart_ice_0491.nc t0ni_00002880_restart_ice_0492.nc t0ni_00002880_restart_ice_0493.nc t0ni_00002880_restart_ice_0494.nc t0ni_00002880_restart_ice_0495.nc t0ni_00002880_restart_ice_0496.nc t0ni_00002880_restart_ice_0497.nc t0ni_00002880_restart_ice_0498.nc t0ni_00002880_restart_ice_0499.nc t0ni_00002880_restart_ice_0500.nc t0ni_00002880_restart_ice_0501.nc t0ni_00002880_restart_ice_0502.nc t0ni_00002880_restart_ice_0503.nc t0ni_00002880_restart_ice_0504.nc t0ni_00002880_restart_ice_0505.nc t0ni_00002880_restart_ice_0506.nc t0ni_00002880_restart_ice_0507.nc t0ni_00002880_restart_ice_0508.nc t0ni_00002880_restart_ice_0509.nc t0ni_00002880_restart_ice_0510.nc t0ni_00002880_restart_ice_0511.nc t0ni_00002880_restart_ice_0512.nc t0ni_00002880_restart_ice_0513.nc t0ni_00002880_restart_ice_0514.nc t0ni_00002880_restart_ice_0515.nc t0ni_00002880_restart_ice_0516.nc t0ni_00002880_restart_ice_0517.nc t0ni_00002880_restart_ice_0518.nc t0ni_00002880_restart_ice_0519.nc t0ni_00002880_restart_ice_0520.nc t0ni_00002880_restart_ice_0521.nc t0ni_00002880_restart_ice_0522.nc t0ni_00002880_restart_ice_0523.nc t0ni_00002880_restart_ice_0524.nc t0ni_00002880_restart_ice_0525.nc t0ni_00002880_restart_ice_0526.nc t0ni_00002880_restart_ice_0527.nc t0ni_00002880_restart_ice_0528.nc t0ni_00002880_restart_ice_0529.nc t0ni_00002880_restart_ice_0530.nc t0ni_00002880_restart_ice_0531.nc t0ni_00002880_restart_ice_0532.nc t0ni_00002880_restart_ice_0533.nc t0ni_00002880_restart_ice_0534.nc t0ni_00002880_restart_ice_0535.nc t0ni_00002880_restart_ice_0536.nc t0ni_00002880_restart_ice_0537.nc t0ni_00002880_restart_ice_0538.nc t0ni_00002880_restart_ice_0539.nc t0ni_00002880_restart_ice_0540.nc t0ni_00002880_restart_ice_0541.nc t0ni_00002880_restart_ice_0542.nc t0ni_00002880_restart_ice_0543.nc t0ni_00002880_restart_ice_0544.nc t0ni_00002880_restart_ice_0545.nc t0ni_00002880_restart_ice_0546.nc t0ni_00002880_restart_ice_0547.nc t0ni_00002880_restart_ice_0548.nc t0ni_00002880_restart_ice_0549.nc t0ni_00002880_restart_ice_0550.nc t0ni_00002880_restart_ice_0551.nc t0ni_00002880_restart_ice_0552.nc t0ni_00002880_restart_ice_0553.nc t0ni_00002880_restart_ice_0554.nc t0ni_00002880_restart_ice_0555.nc t0ni_00002880_restart_ice_0556.nc t0ni_00002880_restart_ice_0557.nc t0ni_00002880_restart_ice_0558.nc t0ni_00002880_restart_ice_0559.nc t0ni_00002880_restart_ice_0560.nc t0ni_00002880_restart_ice_0561.nc t0ni_00002880_restart_ice_0562.nc t0ni_00002880_restart_ice_0563.nc t0ni_00002880_restart_ice_0564.nc t0ni_00002880_restart_ice_0565.nc t0ni_00002880_restart_ice_0566.nc t0ni_00002880_restart_ice_0567.nc t0ni_00002880_restart_ice_0568.nc t0ni_00002880_restart_ice_0569.nc t0ni_00002880_restart_ice_0570.nc t0ni_00002880_restart_ice_0571.nc t0ni_00002880_restart_ice_0572.nc t0ni_00002880_restart_ice_0573.nc t0ni_00002880_restart_ice_0574.nc t0ni_00002880_restart_ice_0575.nc t0ni_00002880_restart_ice_0576.nc t0ni_00002880_restart_ice_0577.nc t0ni_00002880_restart_ice_0578.nc t0ni_00002880_restart_ice_0579.nc t0ni_00002880_restart_ice_0580.nc t0ni_00002880_restart_ice_0581.nc t0ni_00002880_restart_ice_0582.nc t0ni_00002880_restart_ice_0583.nc t0ni_00002880_restart_ice_0584.nc t0ni_00002880_restart_ice_0585.nc t0ni_00002880_restart_ice_0586.nc t0ni_00002880_restart_ice_0587.nc t0ni_00002880_restart_ice_0588.nc t0ni_00002880_restart_ice_0589.nc t0ni_00002880_restart_ice_0590.nc t0ni_00002880_restart_ice_0591.nc t0ni_00002880_restart_ice_0592.nc t0ni_00002880_restart_ice_0593.nc t0ni_00002880_restart_ice_0594.nc t0ni_00002880_restart_ice_0595.nc t0ni_00002880_restart_ice_0596.nc t0ni_00002880_restart_ice_0597.nc t0ni_00002880_restart_ice_0598.nc t0ni_00002880_restart_ice_0599.nc t0ni_00002880_restart_ice_0600.nc t0ni_00002880_restart_ice_0601.nc t0ni_00002880_restart_ice_0602.nc t0ni_00002880_restart_ice_0603.nc t0ni_00002880_restart_ice_0604.nc t0ni_00002880_restart_ice_0605.nc t0ni_00002880_restart_ice_0606.nc t0ni_00002880_restart_ice_0607.nc t0ni_00002880_restart_ice_0608.nc t0ni_00002880_restart_ice_0609.nc t0ni_00002880_restart_ice_0610.nc t0ni_00002880_restart_ice_0611.nc t0ni_00002880_restart_ice_0612.nc t0ni_00002880_restart_ice_0613.nc t0ni_00002880_restart_ice_0614.nc t0ni_00002880_restart_ice_0615.nc t0ni_00002880_restart_ice_0616.nc t0ni_00002880_restart_ice_0617.nc t0ni_00002880_restart_ice_0618.nc t0ni_00002880_restart_ice_0619.nc t0ni_00002880_restart_ice_0620.nc t0ni_00002880_restart_ice_0621.nc t0ni_00002880_restart_ice_0622.nc t0ni_00002880_restart_ice_0623.nc t0ni_00002880_restart_ice_0624.nc t0ni_00002880_restart_ice_0625.nc t0ni_00002880_restart_ice_0626.nc t0ni_00002880_restart_ice_0627.nc t0ni_00002880_restart_ice_0628.nc t0ni_00002880_restart_ice_0629.nc t0ni_00002880_restart_ice_0630.nc t0ni_00002880_restart_ice_0631.nc t0ni_00002880_restart_ice_0632.nc t0ni_00002880_restart_ice_0633.nc t0ni_00002880_restart_ice_0634.nc t0ni_00002880_restart_ice_0635.nc t0ni_00002880_restart_ice_0636.nc t0ni_00002880_restart_ice_0637.nc t0ni_00002880_restart_ice_0638.nc t0ni_00002880_restart_ice_0639.nc t0ni_00002880_restart_ice_0640.nc t0ni_00002880_restart_ice_0641.nc t0ni_00002880_restart_ice_0642.nc t0ni_00002880_restart_ice_0643.nc t0ni_00002880_restart_ice_0644.nc t0ni_00002880_restart_ice_0645.nc t0ni_00002880_restart_ice_0646.nc t0ni_00002880_restart_ice_0647.nc t0ni_00002880_restart_ice_0648.nc t0ni_00002880_restart_ice_0649.nc t0ni_00002880_restart_ice_0650.nc t0ni_00002880_restart_ice_0651.nc t0ni_00002880_restart_ice_0652.nc t0ni_00002880_restart_ice_0653.nc t0ni_00002880_restart_ice_0654.nc t0ni_00002880_restart_ice_0655.nc t0ni_00002880_restart_ice_0656.nc t0ni_00002880_restart_ice_0657.nc t0ni_00002880_restart_ice_0658.nc t0ni_00002880_restart_ice_0659.nc t0ni_00002880_restart_ice_0660.nc t0ni_00002880_restart_ice_0661.nc t0ni_00002880_restart_ice_0662.nc t0ni_00002880_restart_ice_0663.nc t0ni_00002880_restart_ice_0664.nc t0ni_00002880_restart_ice_0665.nc t0ni_00002880_restart_ice_0666.nc t0ni_00002880_restart_ice_0667.nc t0ni_00002880_restart_ice_0668.nc t0ni_00002880_restart_ice_0669.nc t0ni_00002880_restart_ice_0670.nc t0ni_00002880_restart_ice_0671.nc t0ni_00002880_restart_ice_0672.nc t0ni_00002880_restart_ice_0673.nc t0ni_00002880_restart_ice_0674.nc t0ni_00002880_restart_ice_0675.nc t0ni_00002880_restart_ice_0676.nc t0ni_00002880_restart_ice_0677.nc t0ni_00002880_restart_ice_0678.nc t0ni_00002880_restart_ice_0679.nc t0ni_00002880_restart_ice_0680.nc t0ni_00002880_restart_ice_0681.nc t0ni_00002880_restart_ice_0682.nc t0ni_00002880_restart_ice_0683.nc t0ni_00002880_restart_ice_0684.nc t0ni_00002880_restart_ice_0685.nc t0ni_00002880_restart_ice_0686.nc t0ni_00002880_restart_ice_0687.nc t0ni_00002880_restart_ice_0688.nc t0ni_00002880_restart_ice_0689.nc t0ni_00002880_restart_ice_0690.nc t0ni_00002880_restart_ice_0691.nc t0ni_00002880_restart_ice_0692.nc t0ni_00002880_restart_ice_0693.nc t0ni_00002880_restart_ice_0694.nc t0ni_00002880_restart_ice_0695.nc t0ni_00002880_restart_ice_0696.nc t0ni_00002880_restart_ice_0697.nc t0ni_00002880_restart_ice_0698.nc t0ni_00002880_restart_ice_0699.nc t0ni_00002880_restart_ice_0700.nc t0ni_00002880_restart_ice_0701.nc t0ni_00002880_restart_ice_0702.nc t0ni_00002880_restart_ice_0703.nc t0ni_00002880_restart_ice_0704.nc t0ni_00002880_restart_ice_0705.nc t0ni_00002880_restart_ice_0706.nc t0ni_00002880_restart_ice_0707.nc t0ni_00002880_restart_ice_0708.nc t0ni_00002880_restart_ice_0709.nc t0ni_00002880_restart_ice_0710.nc t0ni_00002880_restart_ice_0711.nc t0ni_00002880_restart_ice_0712.nc t0ni_00002880_restart_ice_0713.nc t0ni_00002880_restart_ice_0714.nc t0ni_00002880_restart_ice_0715.nc t0ni_00002880_restart_ice_0716.nc t0ni_00002880_restart_ice_0717.nc t0ni_00002880_restart_ice_0718.nc t0ni_00002880_restart_ice_0719.nc t0ni_00002880_restart_ice_0720.nc t0ni_00002880_restart_ice_0721.nc t0ni_00002880_restart_ice_0722.nc t0ni_00002880_restart_ice_0723.nc t0ni_00002880_restart_ice_0724.nc t0ni_00002880_restart_ice_0725.nc t0ni_00002880_restart_ice_0726.nc t0ni_00002880_restart_ice_0727.nc t0ni_00002880_restart_ice_0728.nc t0ni_00002880_restart_ice_0729.nc t0ni_00002880_restart_ice_0730.nc t0ni_00002880_restart_ice_0731.nc t0ni_00002880_restart_ice_0732.nc t0ni_00002880_restart_ice_0733.nc t0ni_00002880_restart_ice_0734.nc t0ni_00002880_restart_ice_0735.nc t0ni_00002880_restart_ice_0736.nc t0ni_00002880_restart_ice_0737.nc t0ni_00002880_restart_ice_0738.nc t0ni_00002880_restart_ice_0739.nc t0ni_00002880_restart_ice_0740.nc t0ni_00002880_restart_ice_0741.nc t0ni_00002880_restart_ice_0742.nc t0ni_00002880_restart_ice_0743.nc t0ni_00002880_restart_ice_0744.nc t0ni_00002880_restart_ice_0745.nc t0ni_00002880_restart_ice_0746.nc t0ni_00002880_restart_ice_0747.nc t0ni_00002880_restart_ice_0748.nc t0ni_00002880_restart_ice_0749.nc t0ni_00002880_restart_ice_0750.nc t0ni_00002880_restart_ice_0751.nc t0ni_00002880_restart_ice_0752.nc t0ni_00002880_restart_ice_0753.nc t0ni_00002880_restart_ice_0754.nc t0ni_00002880_restart_ice_0755.nc t0ni_00002880_restart_ice_0756.nc t0ni_00002880_restart_ice_0757.nc t0ni_00002880_restart_ice_0758.nc t0ni_00002880_restart_ice_0759.nc t0ni_00002880_restart_ice_0760.nc t0ni_00002880_restart_ice_0761.nc t0ni_00002880_restart_ice_0762.nc t0ni_00002880_restart_ice_0763.nc t0ni_00002880_restart_ice_0764.nc t0ni_00002880_restart_ice_0765.nc t0ni_00002880_restart_ice_0766.nc t0ni_00002880_restart_ice_0767.nc t0ni_00002880_restart_ice_0768.nc t0ni_00002880_restart_ice_0769.nc t0ni_00002880_restart_ice_0770.nc t0ni_00002880_restart_ice_0771.nc t0ni_00002880_restart_ice_0772.nc t0ni_00002880_restart_ice_0773.nc t0ni_00002880_restart_ice_0774.nc t0ni_00002880_restart_ice_0775.nc t0ni_00002880_restart_ice_0776.nc t0ni_00002880_restart_ice_0777.nc t0ni_00002880_restart_ice_0778.nc t0ni_00002880_restart_ice_0779.nc t0ni_00002880_restart_ice_0780.nc t0ni_00002880_restart_ice_0781.nc t0ni_00002880_restart_ice_0782.nc t0ni_00002880_restart_ice_0783.nc t0ni_00002880_restart_ice_0784.nc t0ni_00002880_restart_ice_0785.nc t0ni_00002880_restart_ice_0786.nc t0ni_00002880_restart_ice_0787.nc t0ni_00002880_restart_ice_0788.nc t0ni_00002880_restart_ice_0789.nc t0ni_00002880_restart_ice_0790.nc t0ni_00002880_restart_ice_0791.nc t0ni_00002880_restart_ice_0792.nc t0ni_00002880_restart_ice_0793.nc t0ni_00002880_restart_ice_0794.nc t0ni_00002880_restart_ice_0795.nc t0ni_00002880_restart_ice_0796.nc t0ni_00002880_restart_ice_0797.nc t0ni_00002880_restart_ice_0798.nc t0ni_00002880_restart_ice_0799.nc t0ni_00002880_restart_ice_0800.nc t0ni_00002880_restart_ice_0801.nc t0ni_00002880_restart_ice_0802.nc t0ni_00002880_restart_ice_0803.nc t0ni_00002880_restart_ice_0804.nc t0ni_00002880_restart_ice_0805.nc t0ni_00002880_restart_ice_0806.nc t0ni_00002880_restart_ice_0807.nc t0ni_00002880_restart_ice_0808.nc t0ni_00002880_restart_ice_0809.nc t0ni_00002880_restart_ice_0810.nc t0ni_00002880_restart_ice_0811.nc t0ni_00002880_restart_ice_0812.nc t0ni_00002880_restart_ice_0813.nc t0ni_00002880_restart_ice_0814.nc t0ni_00002880_restart_ice_0815.nc t0ni_00002880_restart_ice_0816.nc t0ni_00002880_restart_ice_0817.nc t0ni_00002880_restart_ice_0818.nc t0ni_00002880_restart_ice_0819.nc t0ni_00002880_restart_ice_0820.nc t0ni_00002880_restart_ice_0821.nc t0ni_00002880_restart_ice_0822.nc t0ni_00002880_restart_ice_0823.nc t0ni_00002880_restart_ice_0824.nc t0ni_00002880_restart_ice_0825.nc t0ni_00002880_restart_ice_0826.nc t0ni_00002880_restart_ice_0827.nc t0ni_00002880_restart_ice_0828.nc t0ni_00002880_restart_ice_0829.nc t0ni_00002880_restart_ice_0830.nc t0ni_00002880_restart_ice_0831.nc t0ni_00002880_restart_ice_0832.nc t0ni_00002880_restart_ice_0833.nc t0ni_00002880_restart_ice_0834.nc t0ni_00002880_restart_ice_0835.nc t0ni_00002880_restart_ice_0836.nc t0ni_00002880_restart_ice_0837.nc t0ni_00002880_restart_ice_0838.nc t0ni_00002880_restart_ice_0839.nc t0ni_00002880_restart_ice_0840.nc t0ni_00002880_restart_ice_0841.nc t0ni_00002880_restart_ice_0842.nc t0ni_00002880_restart_ice_0843.nc t0ni_00002880_restart_ice_0844.nc t0ni_00002880_restart_ice_0845.nc t0ni_00002880_restart_ice_0846.nc t0ni_00002880_restart_ice_0847.nc t0ni_00002880_restart_ice_0848.nc t0ni_00002880_restart_ice_0849.nc t0ni_00002880_restart_ice_0850.nc t0ni_00002880_restart_ice_0851.nc t0ni_00002880_restart_ice_0852.nc t0ni_00002880_restart_ice_0853.nc t0ni_00002880_restart_ice_0854.nc t0ni_00002880_restart_ice_0855.nc t0ni_00002880_restart_ice_0856.nc t0ni_00002880_restart_ice_0857.nc t0ni_00002880_restart_ice_0858.nc t0ni_00002880_restart_ice_0859.nc t0ni_00002880_restart_ice_0860.nc t0ni_00002880_restart_ice_0861.nc t0ni_00002880_restart_ice_0862.nc t0ni_00002880_restart_ice_0863.nc t0ni_00002880_restart_ice_0864.nc t0ni_00002880_restart_ice_0865.nc t0ni_00002880_restart_ice_0866.nc t0ni_00002880_restart_ice_0867.nc t0ni_00002880_restart_ice_0868.nc t0ni_00002880_restart_ice_0869.nc t0ni_00002880_restart_ice_0870.nc t0ni_00002880_restart_ice_0871.nc t0ni_00002880_restart_ice_0872.nc t0ni_00002880_restart_ice_0873.nc t0ni_00002880_restart_ice_0874.nc t0ni_00002880_restart_ice_0875.nc t0ni_00002880_restart_ice_0876.nc t0ni_00002880_restart_ice_0877.nc t0ni_00002880_restart_ice_0878.nc t0ni_00002880_restart_ice_0879.nc t0ni_00002880_restart_ice_0880.nc t0ni_00002880_restart_ice_0881.nc t0ni_00002880_restart_ice_0882.nc t0ni_00002880_restart_ice_0883.nc t0ni_00002880_restart_ice_0884.nc t0ni_00002880_restart_ice_0885.nc t0ni_00002880_restart_ice_0886.nc t0ni_00002880_restart_ice_0887.nc t0ni_00002880_restart_ice_0888.nc t0ni_00002880_restart_ice_0889.nc t0ni_00002880_restart_ice_0890.nc t0ni_00002880_restart_ice_0891.nc t0ni_00002880_restart_ice_0892.nc t0ni_00002880_restart_ice_0893.nc t0ni_00002880_restart_ice_0894.nc t0ni_00002880_restart_ice_0895.nc t0ni_00002880_restart_ice_0896.nc t0ni_00002880_restart_ice_0897.nc t0ni_00002880_restart_ice_0898.nc t0ni_00002880_restart_ice_0899.nc t0ni_00002880_restart_ice_0900.nc t0ni_00002880_restart_ice_0901.nc t0ni_00002880_restart_ice_0902.nc t0ni_00002880_restart_ice_0903.nc t0ni_00002880_restart_ice_0904.nc t0ni_00002880_restart_ice_0905.nc t0ni_00002880_restart_ice_0906.nc t0ni_00002880_restart_ice_0907.nc t0ni_00002880_restart_ice_0908.nc t0ni_00002880_restart_ice_0909.nc t0ni_00002880_restart_ice_0910.nc t0ni_00002880_restart_ice_0911.nc t0ni_00002880_restart_ice_0912.nc t0ni_00002880_restart_ice_0913.nc t0ni_00002880_restart_ice_0914.nc t0ni_00002880_restart_ice_0915.nc t0ni_00002880_restart_ice_0916.nc t0ni_00002880_restart_ice_0917.nc t0ni_00002880_restart_ice_0918.nc t0ni_00002880_restart_ice_0919.nc t0ni_00002880_restart_ice_0920.nc t0ni_00002880_restart_ice_0921.nc t0ni_00002880_restart_ice_0922.nc t0ni_00002880_restart_ice_0923.nc t0ni_00002880_restart_ice_0924.nc t0ni_00002880_restart_ice_0925.nc t0ni_00002880_restart_ice_0926.nc t0ni_00002880_restart_ice_0927.nc t0ni_00002880_restart_ice_0928.nc t0ni_00002880_restart_ice_0929.nc t0ni_00002880_restart_ice_0930.nc t0ni_00002880_restart_ice_0931.nc t0ni_00002880_restart_ice_0932.nc t0ni_00002880_restart_ice_0933.nc t0ni_00002880_restart_ice_0934.nc t0ni_00002880_restart_ice_0935.nc t0ni_00002880_restart_ice_0936.nc t0ni_00002880_restart_ice_0937.nc t0ni_00002880_restart_ice_0938.nc t0ni_00002880_restart_ice_0939.nc t0ni_00002880_restart_ice_0940.nc t0ni_00002880_restart_ice_0941.nc t0ni_00002880_restart_ice_0942.nc t0ni_00002880_restart_ice_0943.nc t0ni_00002880_restart_ice_0944.nc t0ni_00002880_restart_ice_0945.nc t0ni_00002880_restart_ice_0946.nc t0ni_00002880_restart_ice_0947.nc t0ni_00002880_restart_ice_0948.nc t0ni_00002880_restart_ice_0949.nc t0ni_00002880_restart_ice_0950.nc t0ni_00002880_restart_ice_0951.nc t0ni_00002880_restart_ice_0952.nc t0ni_00002880_restart_ice_0953.nc t0ni_00002880_restart_ice_0954.nc t0ni_00002880_restart_ice_0955.nc t0ni_00002880_restart_ice_0956.nc t0ni_00002880_restart_ice_0957.nc t0ni_00002880_restart_ice_0958.nc t0ni_00002880_restart_ice_0959.nc t0ni_00002880_restart_ice_0960.nc t0ni_00002880_restart_ice_0961.nc t0ni_00002880_restart_ice_0962.nc t0ni_00002880_restart_ice_0963.nc t0ni_00002880_restart_ice_0964.nc t0ni_00002880_restart_ice_0965.nc t0ni_00002880_restart_ice_0966.nc t0ni_00002880_restart_ice_0967.nc t0ni_00002880_restart_ice_0968.nc t0ni_00002880_restart_ice_0969.nc t0ni_00002880_restart_ice_0970.nc t0ni_00002880_restart_ice_0971.nc t0ni_00002880_restart_ice_0972.nc t0ni_00002880_restart_ice_0973.nc t0ni_00002880_restart_ice_0974.nc t0ni_00002880_restart_ice_0975.nc t0ni_00002880_restart_ice_0976.nc t0ni_00002880_restart_ice_0977.nc t0ni_00002880_restart_ice_0978.nc t0ni_00002880_restart_ice_0979.nc t0ni_00002880_restart_ice_0980.nc t0ni_00002880_restart_ice_0981.nc t0ni_00002880_restart_ice_0982.nc t0ni_00002880_restart_ice_0983.nc t0ni_00002880_restart_ice_0984.nc t0ni_00002880_restart_ice_0985.nc t0ni_00002880_restart_ice_0986.nc t0ni_00002880_restart_ice_0987.nc t0ni_00002880_restart_ice_0988.nc t0ni_00002880_restart_ice_0989.nc t0ni_00002880_restart_ice_0990.nc t0ni_00002880_restart_ice_0991.nc t0ni_00002880_restart_ice_0992.nc t0ni_00002880_restart_ice_0993.nc t0ni_00002880_restart_ice_0994.nc t0ni_00002880_restart_ice_0995.nc t0ni_00002880_restart_ice_0996.nc t0ni_00002880_restart_ice_0997.nc t0ni_00002880_restart_ice_0998.nc t0ni_00002880_restart_ice_0999.nc t0ni_00002880_restart_ice_1000.nc t0ni_00002880_restart_ice_1001.nc t0ni_00002880_restart_ice_1002.nc t0ni_00002880_restart_ice_1003.nc t0ni_00002880_restart_ice_1004.nc t0ni_00002880_restart_ice_1005.nc t0ni_00002880_restart_ice_1006.nc t0ni_00002880_restart_ice_1007.nc t0ni_00002880_restart_ice_1008.nc t0ni_00002880_restart_ice_1009.nc t0ni_00002880_restart_ice_1010.nc t0ni_00002880_restart_ice_1011.nc t0ni_00002880_restart_ice_1012.nc t0ni_00002880_restart_ice_1013.nc t0ni_00002880_restart_ice_1014.nc t0ni_00002880_restart_ice_1015.nc t0ni_00002880_restart_ice_1016.nc t0ni_00002880_restart_ice_1017.nc t0ni_00002880_restart_ice_1018.nc t0ni_00002880_restart_ice_1019.nc t0ni_00002880_restart_ice_1020.nc t0ni_00002880_restart_ice_1021.nc t0ni_00002880_restart_ice_1022.nc t0ni_00002880_restart_ice_1023.nc t0ni_00002880_restart_ice_1024.nc t0ni_00002880_restart_ice_1025.nc t0ni_00002880_restart_ice_1026.nc t0ni_00002880_restart_ice_1027.nc t0ni_00002880_restart_ice_1028.nc t0ni_00002880_restart_ice_1029.nc t0ni_00002880_restart_ice_1030.nc t0ni_00002880_restart_ice_1031.nc t0ni_00002880_restart_ice_1032.nc t0ni_00002880_restart_ice_1033.nc t0ni_00002880_restart_ice_1034.nc t0ni_00002880_restart_ice_1035.nc t0ni_00002880_restart_ice_1036.nc t0ni_00002880_restart_ice_1037.nc t0ni_00002880_restart_ice_1038.nc t0ni_00002880_restart_ice_1039.nc t0ni_00002880_restart_ice_1040.nc t0ni_00002880_restart_ice_1041.nc t0ni_00002880_restart_ice_1042.nc t0ni_00002880_restart_ice_1043.nc t0ni_00002880_restart_ice_1044.nc t0ni_00002880_restart_ice_1045.nc t0ni_00002880_restart_ice_1046.nc t0ni_00002880_restart_ice_1047.nc t0ni_00002880_restart_ice_1048.nc t0ni_00002880_restart_ice_1049.nc t0ni_00002880_restart_ice_1050.nc t0ni_00002880_restart_ice_1051.nc t0ni_00002880_restart_ice_1052.nc t0ni_00002880_restart_ice_1053.nc t0ni_00002880_restart_ice_1054.nc t0ni_00002880_restart_ice_1055.nc t0ni_00002880_restart_ice_1056.nc t0ni_00002880_restart_ice_1057.nc t0ni_00002880_restart_ice_1058.nc t0ni_00002880_restart_ice_1059.nc t0ni_00002880_restart_ice_1060.nc t0ni_00002880_restart_ice_1061.nc t0ni_00002880_restart_ice_1062.nc t0ni_00002880_restart_ice_1063.nc t0ni_00002880_restart_ice_1064.nc t0ni_00002880_restart_ice_1065.nc t0ni_00002880_restart_ice_1066.nc t0ni_00002880_restart_ice_1067.nc t0ni_00002880_restart_ice_1068.nc t0ni_00002880_restart_ice_1069.nc t0ni_00002880_restart_ice_1070.nc t0ni_00002880_restart_ice_1071.nc t0ni_00002880_restart_ice_1072.nc t0ni_00002880_restart_ice_1073.nc t0ni_00002880_restart_ice_1074.nc t0ni_00002880_restart_ice_1075.nc t0ni_00002880_restart_ice_1076.nc t0ni_00002880_restart_ice_1077.nc t0ni_00002880_restart_ice_1078.nc t0ni_00002880_restart_ice_1079.nc t0ni_00002880_restart_ice_1080.nc t0ni_00002880_restart_ice_1081.nc t0ni_00002880_restart_ice_1082.nc t0ni_00002880_restart_ice_1083.nc t0ni_00002880_restart_ice_1084.nc t0ni_00002880_restart_ice_1085.nc t0ni_00002880_restart_ice_1086.nc t0ni_00002880_restart_ice_1087.nc t0ni_00002880_restart_ice_1088.nc t0ni_00002880_restart_ice_1089.nc t0ni_00002880_restart_ice_1090.nc t0ni_00002880_restart_ice_1091.nc t0ni_00002880_restart_ice_1092.nc t0ni_00002880_restart_ice_1093.nc t0ni_00002880_restart_ice_1094.nc t0ni_00002880_restart_ice_1095.nc t0ni_00002880_restart_ice_1096.nc t0ni_00002880_restart_ice_1097.nc t0ni_00002880_restart_ice_1098.nc t0ni_00002880_restart_ice_1099.nc t0ni_00002880_restart_ice_1100.nc t0ni_00002880_restart_ice_1101.nc t0ni_00002880_restart_ice_1102.nc t0ni_00002880_restart_ice_1103.nc t0ni_00002880_restart_ice_1104.nc t0ni_00002880_restart_ice_1105.nc t0ni_00002880_restart_ice_1106.nc t0ni_00002880_restart_ice_1107.nc t0ni_00002880_restart_ice_1108.nc t0ni_00002880_restart_ice_1109.nc t0ni_00002880_restart_ice_1110.nc t0ni_00002880_restart_ice_1111.nc t0ni_00002880_restart_ice_1112.nc t0ni_00002880_restart_ice_1113.nc t0ni_00002880_restart_ice_1114.nc t0ni_00002880_restart_ice_1115.nc t0ni_00002880_restart_ice_1116.nc t0ni_00002880_restart_ice_1117.nc t0ni_00002880_restart_ice_1118.nc t0ni_00002880_restart_ice_1119.nc t0ni_00002880_restart_ice_1120.nc t0ni_00002880_restart_ice_1121.nc t0ni_00002880_restart_ice_1122.nc t0ni_00002880_restart_ice_1123.nc t0ni_00002880_restart_ice_1124.nc t0ni_00002880_restart_ice_1125.nc t0ni_00002880_restart_ice_1126.nc t0ni_00002880_restart_ice_1127.nc t0ni_00002880_restart_ice_1128.nc t0ni_00002880_restart_ice_1129.nc t0ni_00002880_restart_ice_1130.nc t0ni_00002880_restart_ice_1131.nc t0ni_00002880_restart_ice_1132.nc t0ni_00002880_restart_ice_1133.nc t0ni_00002880_restart_ice_1134.nc t0ni_00002880_restart_ice_1135.nc t0ni_00002880_restart_ice_1136.nc t0ni_00002880_restart_ice_1137.nc t0ni_00002880_restart_ice_1138.nc t0ni_00002880_restart_ice_1139.nc t0ni_00002880_restart_ice_1140.nc t0ni_00002880_restart_ice_1141.nc t0ni_00002880_restart_ice_1142.nc t0ni_00002880_restart_ice_1143.nc t0ni_00002880_restart_ice_1144.nc t0ni_00002880_restart_ice_1145.nc t0ni_00002880_restart_ice_1146.nc t0ni_00002880_restart_ice_1147.nc t0ni_00002880_restart_ice_1148.nc t0ni_00002880_restart_ice_1149.nc t0ni_00002880_restart_ice_1150.nc t0ni_00002880_restart_ice_1151.nc t0ni_00002880_restart_ice_1152.nc t0ni_00002880_restart_ice_1153.nc t0ni_00002880_restart_ice_1154.nc t0ni_00002880_restart_ice_1155.nc t0ni_00002880_restart_ice_1156.nc t0ni_00002880_restart_ice_1157.nc t0ni_00002880_restart_ice_1158.nc t0ni_00002880_restart_ice_1159.nc t0ni_00002880_restart_ice_1160.nc t0ni_00002880_restart_ice_1161.nc t0ni_00002880_restart_ice_1162.nc t0ni_00002880_restart_ice_1163.nc t0ni_00002880_restart_ice_1164.nc t0ni_00002880_restart_ice_1165.nc t0ni_00002880_restart_ice_1166.nc t0ni_00002880_restart_ice_1167.nc t0ni_00002880_restart_ice_1168.nc t0ni_00002880_restart_ice_1169.nc t0ni_00002880_restart_ice_1170.nc t0ni_00002880_restart_ice_1171.nc t0ni_00002880_restart_ice_1172.nc t0ni_00002880_restart_ice_1173.nc t0ni_00002880_restart_ice_1174.nc t0ni_00002880_restart_ice_1175.nc t0ni_00002880_restart_ice_1176.nc t0ni_00002880_restart_ice_1177.nc t0ni_00002880_restart_ice_1178.nc t0ni_00002880_restart_ice_1179.nc t0ni_00002880_restart_ice_1180.nc t0ni_00002880_restart_ice_1181.nc t0ni_00002880_restart_ice_1182.nc t0ni_00002880_restart_ice_1183.nc t0ni_00002880_restart_ice_1184.nc t0ni_00002880_restart_ice_1185.nc t0ni_00002880_restart_ice_1186.nc t0ni_00002880_restart_ice_1187.nc t0ni_00002880_restart_ice_1188.nc t0ni_00002880_restart_ice_1189.nc t0ni_00002880_restart_ice_1190.nc t0ni_00002880_restart_ice_1191.nc t0ni_00002880_restart_ice_1192.nc t0ni_00002880_restart_ice_1193.nc t0ni_00002880_restart_ice_1194.nc t0ni_00002880_restart_ice_1195.nc t0ni_00002880_restart_ice_1196.nc t0ni_00002880_restart_ice_1197.nc t0ni_00002880_restart_ice_1198.nc t0ni_00002880_restart_ice_1199.nc t0ni_00002880_restart_ice_1200.nc t0ni_00002880_restart_ice_1201.nc t0ni_00002880_restart_ice_1202.nc t0ni_00002880_restart_ice_1203.nc t0ni_00002880_restart_ice_1204.nc t0ni_00002880_restart_ice_1205.nc t0ni_00002880_restart_ice_1206.nc t0ni_00002880_restart_ice_1207.nc t0ni_00002880_restart_ice_1208.nc t0ni_00002880_restart_ice_1209.nc t0ni_00002880_restart_ice_1210.nc t0ni_00002880_restart_ice_1211.nc t0ni_00002880_restart_ice_1212.nc t0ni_00002880_restart_ice_1213.nc t0ni_00002880_restart_ice_1214.nc t0ni_00002880_restart_ice_1215.nc t0ni_00002880_restart_ice_1216.nc t0ni_00002880_restart_ice_1217.nc t0ni_00002880_restart_ice_1218.nc t0ni_00002880_restart_ice_1219.nc t0ni_00002880_restart_ice_1220.nc t0ni_00002880_restart_ice_1221.nc t0ni_00002880_restart_ice_1222.nc t0ni_00002880_restart_ice_1223.nc t0ni_00002880_restart_ice_1224.nc t0ni_00002880_restart_ice_1225.nc t0ni_00002880_restart_ice_1226.nc t0ni_00002880_restart_ice_1227.nc t0ni_00002880_restart_ice_1228.nc t0ni_00002880_restart_ice_1229.nc t0ni_00002880_restart_ice_1230.nc t0ni_00002880_restart_ice_1231.nc t0ni_00002880_restart_ice_1232.nc t0ni_00002880_restart_ice_1233.nc t0ni_00002880_restart_ice_1234.nc t0ni_00002880_restart_ice_1235.nc t0ni_00002880_restart_ice_1236.nc t0ni_00002880_restart_ice_1237.nc t0ni_00002880_restart_ice_1238.nc t0ni_00002880_restart_ice_1239.nc t0ni_00002880_restart_ice_1240.nc t0ni_00002880_restart_ice_1241.nc t0ni_00002880_restart_ice_1242.nc t0ni_00002880_restart_ice_1243.nc t0ni_00002880_restart_ice_1244.nc t0ni_00002880_restart_ice_1245.nc t0ni_00002880_restart_ice_1246.nc t0ni_00002880_restart_ice_1247.nc t0ni_00002880_restart_ice_1248.nc t0ni_00002880_restart_ice_1249.nc t0ni_00002880_restart_ice_1250.nc t0ni_00002880_restart_ice_1251.nc t0ni_00002880_restart_ice_1252.nc t0ni_00002880_restart_ice_1253.nc t0ni_00002880_restart_ice_1254.nc t0ni_00002880_restart_ice_1255.nc t0ni_00002880_restart_ice_1256.nc t0ni_00002880_restart_ice_1257.nc t0ni_00002880_restart_ice_1258.nc t0ni_00002880_restart_ice_1259.nc t0ni_00002880_restart_ice_1260.nc t0ni_00002880_restart_ice_1261.nc t0ni_00002880_restart_ice_1262.nc t0ni_00002880_restart_ice_1263.nc t0ni_00002880_restart_ice_1264.nc t0ni_00002880_restart_ice_1265.nc t0ni_00002880_restart_ice_1266.nc t0ni_00002880_restart_ice_1267.nc t0ni_00002880_restart_ice_1268.nc t0ni_00002880_restart_ice_1269.nc t0ni_00002880_restart_ice_1270.nc t0ni_00002880_restart_ice_1271.nc t0ni_00002880_restart_ice_1272.nc t0ni_00002880_restart_ice_1273.nc t0ni_00002880_restart_ice_1274.nc t0ni_00002880_restart_ice_1275.nc t0ni_00002880_restart_ice_1276.nc t0ni_00002880_restart_ice_1277.nc t0ni_00002880_restart_ice_1278.nc t0ni_00002880_restart_ice_1279.nc t0ni_00002880_restart_ice_1280.nc t0ni_00002880_restart_ice_1281.nc t0ni_00002880_restart_ice_1282.nc t0ni_00002880_restart_ice_1283.nc t0ni_00002880_restart_ice_1284.nc t0ni_00002880_restart_ice_1285.nc t0ni_00002880_restart_ice_1286.nc t0ni_00002880_restart_ice_1287.nc t0ni_00002880_restart_ice_1288.nc t0ni_00002880_restart_ice_1289.nc t0ni_00002880_restart_ice_1290.nc t0ni_00002880_restart_ice_1291.nc t0ni_00002880_restart_ice_1292.nc t0ni_00002880_restart_ice_1293.nc t0ni_00002880_restart_ice_1294.nc t0ni_00002880_restart_ice_1295.nc t0ni_00002880_restart_ice_1296.nc t0ni_00002880_restart_ice_1297.nc t0ni_00002880_restart_ice_1298.nc t0ni_00002880_restart_ice_1299.nc t0ni_00002880_restart_ice_1300.nc t0ni_00002880_restart_ice_1301.nc t0ni_00002880_restart_ice_1302.nc t0ni_00002880_restart_ice_1303.nc t0ni_00002880_restart_ice_1304.nc t0ni_00002880_restart_ice_1305.nc t0ni_00002880_restart_ice_1306.nc t0ni_00002880_restart_ice_1307.nc t0ni_00002880_restart_ice_1308.nc t0ni_00002880_restart_ice_1309.nc t0ni_00002880_restart_ice_1310.nc t0ni_00002880_restart_ice_1311.nc t0ni_00002880_restart_ice_1312.nc t0ni_00002880_restart_ice_1313.nc t0ni_00002880_restart_ice_1314.nc t0ni_00002880_restart_ice_1315.nc t0ni_00002880_restart_ice_1316.nc t0ni_00002880_restart_ice_1317.nc t0ni_00002880_restart_ice_1318.nc t0ni_00002880_restart_ice_1319.nc t0ni_00002880_restart_ice_1320.nc t0ni_00002880_restart_ice_1321.nc t0ni_00002880_restart_ice_1322.nc t0ni_00002880_restart_ice_1323.nc t0ni_00002880_restart_ice_1324.nc t0ni_00002880_restart_ice_1325.nc t0ni_00002880_restart_ice_1326.nc t0ni_00002880_restart_ice_1327.nc t0ni_00002880_restart_ice_1328.nc t0ni_00002880_restart_ice_1329.nc t0ni_00002880_restart_ice_1330.nc t0ni_00002880_restart_ice_1331.nc t0ni_00002880_restart_ice_1332.nc t0ni_00002880_restart_ice_1333.nc t0ni_00002880_restart_ice_1334.nc t0ni_00002880_restart_ice_1335.nc t0ni_00002880_restart_ice_1336.nc t0ni_00002880_restart_ice_1337.nc t0ni_00002880_restart_ice_1338.nc t0ni_00002880_restart_ice_1339.nc t0ni_00002880_restart_ice_1340.nc t0ni_00002880_restart_ice_1341.nc t0ni_00002880_restart_ice_1342.nc t0ni_00002880_restart_ice_1343.nc t0ni_00002880_restart_ice_1344.nc t0ni_00002880_restart_ice_1345.nc t0ni_00002880_restart_ice_1346.nc t0ni_00002880_restart_ice_1347.nc t0ni_00002880_restart_ice_1348.nc t0ni_00002880_restart_ice_1349.nc t0ni_00002880_restart_ice_1350.nc t0ni_00002880_restart_ice_1351.nc t0ni_00002880_restart_ice_1352.nc t0ni_00002880_restart_ice_1353.nc t0ni_00002880_restart_ice_1354.nc t0ni_00002880_restart_ice_1355.nc t0ni_00002880_restart_ice_1356.nc t0ni_00002880_restart_ice_1357.nc t0ni_00002880_restart_ice_1358.nc t0ni_00002880_restart_ice_1359.nc t0ni_00002880_restart_ice_1360.nc t0ni_00002880_restart_ice_1361.nc t0ni_00002880_restart_ice_1362.nc t0ni_00002880_restart_ice_1363.nc t0ni_00002880_restart_ice_1364.nc t0ni_00002880_restart_ice_1365.nc t0ni_00002880_restart_ice_1366.nc t0ni_00002880_restart_ice_1367.nc t0ni_00002880_restart_ice_1368.nc t0ni_00002880_restart_ice_1369.nc t0ni_00002880_restart_ice_1370.nc t0ni_00002880_restart_ice_1371.nc t0ni_00002880_restart_ice_1372.nc t0ni_00002880_restart_ice_1373.nc t0ni_00002880_restart_ice_1374.nc t0ni_00002880_restart_ice_1375.nc t0ni_00002880_restart_ice_1376.nc t0ni_00002880_restart_ice_1377.nc t0ni_00002880_restart_ice_1378.nc t0ni_00002880_restart_ice_1379.nc t0ni_00002880_restart_ice_1380.nc t0ni_00002880_restart_ice_1381.nc t0ni_00002880_restart_ice_1382.nc t0ni_00002880_restart_ice_1383.nc t0ni_00002880_restart_ice_1384.nc t0ni_00002880_restart_ice_1385.nc t0ni_00002880_restart_ice_1386.nc t0ni_00002880_restart_ice_1387.nc t0ni_00002880_restart_ice_1388.nc t0ni_00002880_restart_ice_1389.nc t0ni_00002880_restart_ice_1390.nc save_ic/19931201/nemo
date -u -d "${leg_end_date}" +%Y%m%d
++ date -u -d 'Wed, 01 Dec 1993 00:00:00 +0000' +%Y%m%d
+ leg_end_date_yyyymmdd=19931201
+ has_config tm5
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' tm5 == any ']'
+ [[ tm5 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ for __m in '$config'
+ [[ atm =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ (( i++  ))
+ (( i< 1 ))
printf %03d $((leg_number))
++ printf %03d 1
+ outdir=output/ifs/001
+ mkdir -p output/ifs/001
printf %03d $((leg_number-1))
++ printf %03d 0
+ prv_leg=000
+ for f in 'ICMSH${exp_name}+??????' 'ICMGG${exp_name}+??????'
+ '[' -f output/ifs/000/ICMSHt0ni+000000 ']'
+ mv ICMSHt0ni+000000 output/ifs/001
+ for f in 'ICMSH${exp_name}+??????' 'ICMGG${exp_name}+??????'
+ '[' -f output/ifs/000/ICMSHt0ni+199311 ']'
+ mv ICMSHt0ni+199311 output/ifs/001
+ for f in 'ICMSH${exp_name}+??????' 'ICMGG${exp_name}+??????'
+ '[' -f output/ifs/000/ICMGGt0ni+000000 ']'
+ mv ICMGGt0ni+000000 output/ifs/001
+ for f in 'ICMSH${exp_name}+??????' 'ICMGG${exp_name}+??????'
+ '[' -f output/ifs/000/ICMGGt0ni+199311 ']'
+ mv ICMGGt0ni+199311 output/ifs/001
has_config nemo
++ has_config nemo
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' nemo == any ']'
++ [[ nemo == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ nemo ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ [[ nemo:start_from_restart:elpin =~ nemo ]]
++ __f=1
++ for __m in '$config'
++ [[ lim3 =~ nemo ]]
++ for __m in '$config'
++ [[ rnfmapper =~ nemo ]]
++ for __m in '$config'
++ [[ xios:detached =~ nemo ]]
++ for __m in '$config'
++ [[ oasis =~ nemo ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ nemo ]]
++ for __m in '$config'
++ [[ atm =~ nemo ]]
++ ((  __f  ))
++ return 0
printf %03d $((leg_number))
++ printf %03d 1
+ outdir=output/nemo/001
+ mkdir -p output/nemo/001
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_U.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_V.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_W.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_T.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*icemod.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*SBC.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*scalar.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*SBC_scalar.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*diad_T.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*ptrc_T.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*bioscalar.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_lim_grid_T_2D.nc
+ mv t0ni_1m_19931101_19931130_lim_grid_T_2D.nc output/nemo/001/
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_T_2D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_T_2D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_lim_grid_U_2D.nc
+ mv t0ni_1m_19931101_19931130_lim_grid_U_2D.nc output/nemo/001/
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_U_2D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_U_2D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_lim_grid_V_2D.nc
+ mv t0ni_1m_19931101_19931130_lim_grid_V_2D.nc output/nemo/001/
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_V_2D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_V_2D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_W_2D.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_T_3D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_T_3D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_U_3D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_U_3D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f t0ni_1m_19931101_19931130_opa_grid_V_3D.nc
+ mv t0ni_1m_19931101_19931130_opa_grid_V_3D.nc output/nemo/001/
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_W_3D.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_T_SFC.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_1point.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_T_3D_ncatice.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*vert_sum.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_ptr_W_3basin_3D.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_ptr_T_3basin_2D.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*grid_ptr_T_2D.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*zoom_700_sum.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*zoom_300_sum.nc'
+ for v in grid_U grid_V grid_W grid_T icemod SBC scalar SBC_scalar diad_T ptrc_T bioscalar grid_T_2D grid_U_2D grid_V_2D grid_W_2D grid_T_3D grid_U_3D grid_V_3D grid_W_3D grid_T_SFC grid_1point grid_T_3D_ncatice vert_sum grid_ptr_W_3basin_3D grid_ptr_T_3basin_2D grid_ptr_T_2D zoom_700_sum zoom_300_sum zoom_2000_sum
+ for f in '${exp_name}_*_????????_????????_*${v}.nc'
+ test -f 't0ni_*_????????_????????_*zoom_2000_sum.nc'
has_config lpjg
++ has_config lpjg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
has_config tm5
++ has_config tm5
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' tm5 == any ']'
++ [[ tm5 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
+ false
+ true
has_config tm5:co2
++ has_config tm5:co2
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' tm5:co2 == any ']'
++ [[ tm5:co2 == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ tm5 ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ tm5 ]]
++ for __m in '$config'
++ [[ lim3 =~ tm5 ]]
++ for __m in '$config'
++ [[ rnfmapper =~ tm5 ]]
++ for __m in '$config'
++ [[ xios:detached =~ tm5 ]]
++ for __m in '$config'
++ [[ oasis =~ tm5 ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ tm5 ]]
++ for __m in '$config'
++ [[ atm =~ tm5 ]]
++ ((  __f  ))
++ return 1
has_config lpjg
++ has_config lpjg
++ ((  1  ))
++ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
++ local __c
++ local __m
++ '[' lpjg == any ']'
++ [[ lpjg == \a\l\l ]]
++ local __f
++ for __c in '"$@"'
++ __f=0
++ for __m in '$config'
++ [[ ifs =~ lpjg ]]
++ for __m in '$config'
++ [[ nemo:start_from_restart:elpin =~ lpjg ]]
++ for __m in '$config'
++ [[ lim3 =~ lpjg ]]
++ for __m in '$config'
++ [[ rnfmapper =~ lpjg ]]
++ for __m in '$config'
++ [[ xios:detached =~ lpjg ]]
++ for __m in '$config'
++ [[ oasis =~ lpjg ]]
++ for __m in '$config'
++ [[ save_ic:end_leg =~ lpjg ]]
++ for __m in '$config'
++ [[ atm =~ lpjg ]]
++ ((  __f  ))
++ return 1
+ false
+ false
printf %03d $((leg_number+1))
++ printf %03d 2
+ outdir=restart/oasis/002
+ mkdir -p restart/oasis/002
+ for f in '${oas_rst_files}'
+ test -f rstas.nc
+ cp rstas.nc restart/oasis/002
+ for f in '${oas_rst_files}'
+ test -f rstos.nc
+ cp rstos.nc restart/oasis/002
+ for f in '${oas_rst_files}'
+ test -f r_hum.nc
+ for f in '${oas_rst_files}'
+ test -f r_g2d.nc
+ for f in '${oas_rst_files}'
+ test -f r_udr.nc
+ for f in '${oas_rst_files}'
+ test -f r_div.nc
+ for f in '${oas_rst_files}'
+ test -f r_vor.nc
+ for f in '${oas_rst_files}'
+ test -f r_ddr.nc
+ for f in '${oas_rst_files}'
+ test -f r_tmp.nc
+ for f in '${oas_rst_files}'
+ test -f r_dmf.nc
+ for f in '${oas_rst_files}'
+ test -f r_s2d.nc
+ for f in '${oas_rst_files}'
+ test -f r_umf.nc
+ for f in '${oas_rst_files}'
+ test -f vegin.nc
+ for f in '${oas_rst_files}'
+ test -f lpjgv.nc
printf %03d $((leg_number+1))
++ printf %03d 2
+ outdir=restart/ifs/002
+ mkdir -p restart/ifs/002
+ for f in rcf
+ test -f rcf
+ cp rcf restart/ifs/002
printf %03d $((leg_number))
++ printf %03d 1
+ outdir=log/001
+ mkdir -p log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f ifs.log
+ mv ifs.log log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f ifs.stat
+ mv ifs.stat log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f fort.4
+ mv fort.4 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f ocean.output
+ mv ocean.output log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f time.step
+ mv time.step log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f solver.stat
+ mv solver.stat log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f guess.log
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f run1/guess0.log
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f amip.log
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f namelist.amip
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f nout.000000
+ mv nout.000000 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f debug.root.01
+ mv debug.root.01 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f debug.root.02
+ mv debug.root.02 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f debug.root.03
+ mv debug.root.03 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f debug.root.04
+ mv debug.root.04 log/001
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f 'debug.??.??????'
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f 'lucia.??.??????'
+ for f in ifs.log ifs.stat fort.4 ocean.output time.step solver.stat guess.log run1/guess0.log amip.log namelist.amip nout.000000 'debug.root.??' 'debug.??.??????' 'lucia.??.??????' ctm.tm5.log.0
+ test -f ctm.tm5.log.0
+ has_config pisces
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' pisces == any ']'
+ [[ pisces == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ pisces ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ pisces ]]
+ for __m in '$config'
+ [[ lim3 =~ pisces ]]
+ for __m in '$config'
+ [[ rnfmapper =~ pisces ]]
+ for __m in '$config'
+ [[ xios:detached =~ pisces ]]
+ for __m in '$config'
+ [[ oasis =~ pisces ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ pisces ]]
+ for __m in '$config'
+ [[ atm =~ pisces ]]
+ ((  __f  ))
+ return 1
+ for f in 'ctm.tm5.log.*'
+ [[ -f ctm.tm5.log.* ]]
cpmip_sypd $leg_length_sec $(($t2 - $t1))
++ cpmip_sypd 2592000 2347
++ bc
+ sypd=3.02
+ ncores=0
+ has_config nemo
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' nemo == any ']'
+ [[ nemo == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ nemo ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ [[ nemo:start_from_restart:elpin =~ nemo ]]
+ __f=1
+ for __m in '$config'
+ [[ lim3 =~ nemo ]]
+ for __m in '$config'
+ [[ rnfmapper =~ nemo ]]
+ for __m in '$config'
+ [[ xios:detached =~ nemo ]]
+ for __m in '$config'
+ [[ oasis =~ nemo ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ nemo ]]
+ for __m in '$config'
+ [[ atm =~ nemo ]]
+ ((  __f  ))
+ return 0
+ ((  ncores+=1391   ))
+ has_config ifs
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' ifs == any ']'
+ [[ ifs == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ ifs ]]
+ [[ ifs =~ ifs ]]
+ __f=1
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ ifs ]]
+ for __m in '$config'
+ [[ lim3 =~ ifs ]]
+ for __m in '$config'
+ [[ rnfmapper =~ ifs ]]
+ for __m in '$config'
+ [[ xios:detached =~ ifs ]]
+ for __m in '$config'
+ [[ oasis =~ ifs ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ ifs ]]
+ for __m in '$config'
+ [[ atm =~ ifs ]]
+ ((  __f  ))
+ return 0
+ ((  ncores+=912   ))
+ has_config xios
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' xios == any ']'
+ [[ xios == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ xios ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ xios ]]
+ for __m in '$config'
+ [[ lim3 =~ xios ]]
+ for __m in '$config'
+ [[ rnfmapper =~ xios ]]
+ for __m in '$config'
+ [[ xios:detached =~ xios ]]
+ [[ xios:detached =~ xios ]]
+ __f=1
+ for __m in '$config'
+ [[ oasis =~ xios ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ xios ]]
+ for __m in '$config'
+ [[ atm =~ xios ]]
+ ((  __f  ))
+ return 0
+ ((  ncores+=95   ))
+ has_config rnfmapper
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' rnfmapper == any ']'
+ [[ rnfmapper == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ rnfmapper ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ rnfmapper ]]
+ for __m in '$config'
+ [[ lim3 =~ rnfmapper ]]
+ for __m in '$config'
+ [[ rnfmapper =~ rnfmapper ]]
+ [[ rnfmapper =~ rnfmapper ]]
+ __f=1
+ for __m in '$config'
+ [[ xios:detached =~ rnfmapper ]]
+ for __m in '$config'
+ [[ oasis =~ rnfmapper ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ rnfmapper ]]
+ for __m in '$config'
+ [[ atm =~ rnfmapper ]]
+ ((  __f  ))
+ return 0
+ ((  ncores+=1   ))
+ has_config lpjg
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' lpjg == any ']'
+ [[ lpjg == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ lpjg ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ lpjg ]]
+ for __m in '$config'
+ [[ lim3 =~ lpjg ]]
+ for __m in '$config'
+ [[ rnfmapper =~ lpjg ]]
+ for __m in '$config'
+ [[ xios:detached =~ lpjg ]]
+ for __m in '$config'
+ [[ oasis =~ lpjg ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ lpjg ]]
+ for __m in '$config'
+ [[ atm =~ lpjg ]]
+ ((  __f  ))
+ return 1
+ :
+ has_config tm5
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' tm5 == any ']'
+ [[ tm5 == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ tm5 ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ tm5 ]]
+ for __m in '$config'
+ [[ lim3 =~ tm5 ]]
+ for __m in '$config'
+ [[ rnfmapper =~ tm5 ]]
+ for __m in '$config'
+ [[ xios:detached =~ tm5 ]]
+ for __m in '$config'
+ [[ oasis =~ tm5 ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ tm5 ]]
+ for __m in '$config'
+ [[ atm =~ tm5 ]]
+ ((  __f  ))
+ return 1
+ :
+ has_config amip
+ ((  1  ))
+ [[ -z ifs    nemo:start_from_restart:elpin  lim3 rnfmapper xios:detached oasis   save_ic:end_leg atm ]]
+ local __c
+ local __m
+ '[' amip == any ']'
+ [[ amip == \a\l\l ]]
+ local __f
+ for __c in '"$@"'
+ __f=0
+ for __m in '$config'
+ [[ ifs =~ amip ]]
+ for __m in '$config'
+ [[ nemo:start_from_restart:elpin =~ amip ]]
+ for __m in '$config'
+ [[ lim3 =~ amip ]]
+ for __m in '$config'
+ [[ rnfmapper =~ amip ]]
+ for __m in '$config'
+ [[ xios:detached =~ amip ]]
+ for __m in '$config'
+ [[ oasis =~ amip ]]
+ for __m in '$config'
+ [[ save_ic:end_leg =~ amip ]]
+ for __m in '$config'
+ [[ atm =~ amip ]]
+ ((  __f  ))
+ return 1
+ :
cpmip_chpsy  $leg_length_sec $(($t2 - $t1)) $ncores
++ cpmip_chpsy 2592000 2347 2399
++ bc
+ chpsy=19028
+ echo '#'
+ tee -a ece.info
+ tee -a ece.info
date '+%F %T'
++ date '+%F %T'
+ echo '# Finished leg at 2021-12-18 08:30:59 after 00:39:07 (hh:mm:ss)'
+ echo '# CPMIP performance: 3.02 SYPD   19028 CHPSY'
+ tee -a ece.info
+ echo leg_number=1
+ tee -a ece.info
+ echo 'leg_start_date="Mon, 01 Nov 1993 00:00:00 +0000"'
+ tee -a ece.info
+ echo 'leg_end_date="Wed, 01 Dec 1993 00:00:00 +0000"'
+ tee -a ece.info
+ force_run_from_scratch=false
+ (( run_num_legs--  ))
+ (( run_num_legs>0  ))

# -----------------------------------------------------------------------------
# *** Platform dependent finalising of the run
# -----------------------------------------------------------------------------
finalise
+ finalise
+ false

###################
# Autosubmit tailer
###################
set -xuve
+ set -xuve
echo $(date +%s) >> ${job_name_ptrn}_STAT
date +%s
++ date +%s
+ echo 1639812659
touch ${job_name_ptrn}_COMPLETED
+ touch /gpfs/scratch/bsc32/bsc32627/t0ni/LOG_t0ni/t0ni_19931101_fc0_1_SIM_COMPLETED
exit 0
+ exit 0
